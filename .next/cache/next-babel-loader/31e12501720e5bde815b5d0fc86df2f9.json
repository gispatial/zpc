{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/crocslut/Desktop/Git/zpc/components/Wizard/Wizard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport './../../styles/components/wizard.scss';\nexport var Wizard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Wizard, _React$Component);\n\n  function Wizard() {\n    _classCallCheck(this, Wizard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Wizard).apply(this, arguments));\n  }\n\n  _createClass(Wizard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          initialActiveStep = _this$props.initialActiveStep,\n          activeStep = _this$props.activeStep,\n          onStepChanged = _this$props.onStepChanged;\n\n      if (activeStep && !onStepChanged) {\n        // eslint-disable-next-line no-console\n        console.warn('Warning: You need to provide onStepChanged props if you want the ' + 'component to be controlled. For uncontrolled type, use initialActiveStep.');\n      }\n\n      if (!onStepChanged) {\n        this.setState({\n          activeStep: initialActiveStep || activeStep\n        });\n      }\n    }\n  }, {\n    key: \"stepClick\",\n    value: function stepClick(id) {\n      this.setState({\n        activeStep: id\n      });\n      this.props.onStepChanged(id);\n    }\n  }, {\n    key: \"getActiveStep\",\n    value: function getActiveStep() {\n      var _this$props2 = this.props,\n          activeStep = _this$props2.activeStep,\n          onStepChanged = _this$props2.onStepChanged;\n\n      if (_.isUndefined(activeStep) || _.isUndefined(onStepChanged)) {\n        return this.state.activeStep;\n      }\n\n      return this.props.activeStep;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var children = this.props.children;\n      var activeStep = this.getActiveStep();\n      return React.createElement(\"div\", {\n        className: \"wizard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, _.map(children, function (child, index) {\n        return React.cloneElement(child, {\n          onClick: function onClick() {\n            _this.stepClick(child.props.id || '');\n          },\n          active: child.props.id === activeStep,\n          key: index\n        });\n      }));\n    }\n  }]);\n\n  return Wizard;\n}(React.Component);\n\n_defineProperty(Wizard, \"propTypes\", {\n  children: PropTypes.node,\n  onStepChanged: PropTypes.func,\n  activeStep: PropTypes.string,\n  initialActiveStep: PropTypes.string\n});","map":{"version":3,"sources":["/Users/crocslut/Desktop/Git/zpc/components/Wizard/Wizard.js"],"names":["React","PropTypes","_","Wizard","props","initialActiveStep","activeStep","onStepChanged","console","warn","setState","id","isUndefined","state","children","getActiveStep","map","child","index","cloneElement","onClick","stepClick","active","key","Component","node","func","string"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,uCAAP;AAEA,WAAaC,MAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAQwB;AAAA,wBACyC,KAAKC,KAD9C;AAAA,UACRC,iBADQ,eACRA,iBADQ;AAAA,UACWC,UADX,eACWA,UADX;AAAA,UACuBC,aADvB,eACuBA,aADvB;;AAGhB,UAAID,UAAU,IAAI,CAACC,aAAnB,EAAkC;AAC9B;AACAC,QAAAA,OAAO,CAACC,IAAR,CACI,sEACA,2EAFJ;AAIH;;AAED,UAAI,CAACF,aAAL,EAAoB;AAChB,aAAKG,QAAL,CAAc;AACVJ,UAAAA,UAAU,EAAED,iBAAiB,IAAIC;AADvB,SAAd;AAGH;AACJ;AAxBL;AAAA;AAAA,8BA0BcK,EA1Bd,EA0BkB;AACV,WAAKD,QAAL,CAAc;AACVJ,QAAAA,UAAU,EAAEK;AADF,OAAd;AAIA,WAAKP,KAAL,CAAWG,aAAX,CAAyBI,EAAzB;AACH;AAhCL;AAAA;AAAA,oCAkCoB;AAAA,yBAC0B,KAAKP,KAD/B;AAAA,UACJE,UADI,gBACJA,UADI;AAAA,UACQC,aADR,gBACQA,aADR;;AAEZ,UAAIL,CAAC,CAACU,WAAF,CAAcN,UAAd,KAA6BJ,CAAC,CAACU,WAAF,CAAcL,aAAd,CAAjC,EAA+D;AAC3D,eAAO,KAAKM,KAAL,CAAWP,UAAlB;AACH;;AACD,aAAO,KAAKF,KAAL,CAAWE,UAAlB;AACH;AAxCL;AAAA;AAAA,6BA0Ca;AAAA;;AAAA,UACGQ,QADH,GACgB,KAAKV,KADrB,CACGU,QADH;AAEL,UAAMR,UAAU,GAAG,KAAKS,aAAL,EAAnB;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQb,CAAC,CAACc,GAAF,CAAMF,QAAN,EAAgB,UAACG,KAAD,EAAQC,KAAR;AAAA,eACZlB,KAAK,CAACmB,YAAN,CAAmBF,KAAnB,EAA0B;AACtBG,UAAAA,OAAO,EAAE,mBAAM;AAAC,YAAA,KAAI,CAACC,SAAL,CAAeJ,KAAK,CAACb,KAAN,CAAYO,EAAZ,IAAkB,EAAjC;AAAqC,WAD/B;AAEtBW,UAAAA,MAAM,EAAEL,KAAK,CAACb,KAAN,CAAYO,EAAZ,KAAmBL,UAFL;AAGtBiB,UAAAA,GAAG,EAAEL;AAHiB,SAA1B,CADY;AAAA,OAAhB,CAFR,CADJ;AAaH;AA3DL;;AAAA;AAAA,EAA4BlB,KAAK,CAACwB,SAAlC;;gBAAarB,M,eACU;AACfW,EAAAA,QAAQ,EAAEb,SAAS,CAACwB,IADL;AAEflB,EAAAA,aAAa,EAAEN,SAAS,CAACyB,IAFV;AAGfpB,EAAAA,UAAU,EAAEL,SAAS,CAAC0B,MAHP;AAIftB,EAAAA,iBAAiB,EAAEJ,SAAS,CAAC0B;AAJd,C","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport './../../styles/components/wizard.scss';\r\n\r\nexport class Wizard extends React.Component {\r\n    static propTypes = {\r\n        children: PropTypes.node,\r\n        onStepChanged: PropTypes.func,\r\n        activeStep: PropTypes.string,\r\n        initialActiveStep: PropTypes.string\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { initialActiveStep, activeStep, onStepChanged } = this.props;\r\n\r\n        if (activeStep && !onStepChanged) {\r\n            // eslint-disable-next-line no-console\r\n            console.warn(\r\n                'Warning: You need to provide onStepChanged props if you want the ' +\r\n                'component to be controlled. For uncontrolled type, use initialActiveStep.'\r\n            );\r\n        }\r\n\r\n        if (!onStepChanged) {\r\n            this.setState({\r\n                activeStep: initialActiveStep || activeStep\r\n            })\r\n        }\r\n    }\r\n\r\n    stepClick(id) {\r\n        this.setState({\r\n            activeStep: id\r\n        });\r\n\r\n        this.props.onStepChanged(id);\r\n    }\r\n\r\n    getActiveStep() {\r\n        const { activeStep, onStepChanged } = this.props;\r\n        if (_.isUndefined(activeStep) || _.isUndefined(onStepChanged)) {\r\n            return this.state.activeStep;\r\n        }\r\n        return this.props.activeStep;\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        const activeStep = this.getActiveStep();\r\n\r\n        return (\r\n            <div className='wizard'>\r\n                {\r\n                    _.map(children, (child, index) => (\r\n                        React.cloneElement(child, {\r\n                            onClick: () => {this.stepClick(child.props.id || '')},\r\n                            active: child.props.id === activeStep,\r\n                            key: index\r\n                        })\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}