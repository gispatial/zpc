{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/crocslut/Desktop/Git/zpc/components/Avatar/AvatarImage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport _ from 'lodash';\nimport { Avatar } from './Avatar';\nimport { AvatarFont } from './AvatarFont';\n\nvar AvatarImage =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(AvatarImage, _React$PureComponent);\n\n  function AvatarImage(props) {\n    var _this;\n\n    _classCallCheck(this, AvatarImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AvatarImage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"imgRef\", React.createRef());\n\n    _this.state = {\n      imgLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(AvatarImage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.imgRef && this.imgRef.current && this.imgRef.current.naturalWidth !== 0) {\n        this.setState({\n          imgLoaded: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          src = _this$props.src,\n          placeholder = _this$props.placeholder,\n          alt = _this$props.alt,\n          className = _this$props.className,\n          avatarProps = _objectWithoutProperties(_this$props, [\"src\", \"placeholder\", \"alt\", \"className\"]);\n\n      var parentClass = classNames('avatar-image', {\n        'avatar-image--loaded': this.state.imgLoaded\n      }, className);\n      return React.createElement(\"div\", {\n        className: parentClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Avatar, _extends({\n        className: \"avatar-image__image\"\n      }, avatarProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: src,\n        alt: alt,\n        ref: this.imgRef,\n        onLoad: function onLoad() {\n          _this2.setState({\n            imgLoaded: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), !this.state.imgLoaded && React.createElement(AvatarFont, _extends({\n        className: \"avatar-image__placeholder\"\n      }, avatarProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), placeholder));\n    }\n  }]);\n\n  return AvatarImage;\n}(React.PureComponent);\n\n_defineProperty(AvatarImage, \"propTypes\", _objectSpread({\n  src: PropTypes.string.isRequired,\n  placeholder: PropTypes.node,\n  alt: PropTypes.string,\n  className: PropTypes.string\n}, _.omit(Avatar.propTypes, ['children'])));\n\n_defineProperty(AvatarImage, \"defaultProps\", {\n  placeholder: React.createElement(\"i\", {\n    className: \"fa fa-user fa-fw\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })\n});\n\nexport { AvatarImage };","map":{"version":3,"sources":["/Users/crocslut/Desktop/Git/zpc/components/Avatar/AvatarImage.js"],"names":["React","PropTypes","classNames","_","Avatar","AvatarFont","AvatarImage","props","createRef","state","imgLoaded","imgRef","current","naturalWidth","setState","src","placeholder","alt","className","avatarProps","parentClass","PureComponent","string","isRequired","node","omit","propTypes"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,UAAT,QAA2B,cAA3B;;IAEMC,W;;;;;AAeF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,6DAdVP,KAAK,CAACQ,SAAN,EAcU;;AAGf,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAHe;AAMlB;;;;wCAEmB;AAChB,UAAI,KAAKC,MAAL,IAAe,KAAKA,MAAL,CAAYC,OAA3B,IAAsC,KAAKD,MAAL,CAAYC,OAAZ,CAAoBC,YAApB,KAAqC,CAA/E,EAAkF;AAC9E,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,SAAS,EAAE;AAAb,SAAd;AACH;AACJ;;;6BAEQ;AAAA;;AAAA,wBACwD,KAAKH,KAD7D;AAAA,UACGQ,GADH,eACGA,GADH;AAAA,UACQC,WADR,eACQA,WADR;AAAA,UACqBC,GADrB,eACqBA,GADrB;AAAA,UAC0BC,SAD1B,eAC0BA,SAD1B;AAAA,UACwCC,WADxC;;AAEL,UAAMC,WAAW,GAAGlB,UAAU,CAAC,cAAD,EAAiB;AAC3C,gCAAwB,KAAKO,KAAL,CAAWC;AADQ,OAAjB,EAE3BQ,SAF2B,CAA9B;AAIA,aACI;AAAK,QAAA,SAAS,EAAGE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC;AAAlB,SAA4CD,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACI;AACI,QAAA,GAAG,EAAGJ,GADV;AAEI,QAAA,GAAG,EAAGE,GAFV;AAGI,QAAA,GAAG,EAAG,KAAKN,MAHf;AAII,QAAA,MAAM,EAAG,kBAAM;AAAE,UAAA,MAAI,CAACG,QAAL,CAAc;AAAEJ,YAAAA,SAAS,EAAE;AAAb,WAAd;AAAoC,SAJzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAUQ,CAAC,KAAKD,KAAL,CAAWC,SAAZ,IACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC;AAAtB,SAAsDS,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACMH,WADN,CAXZ,CADJ;AAmBH;;;;EAtDqBhB,KAAK,CAACqB,a;;gBAA1Bf,W;AAIES,EAAAA,GAAG,EAAEd,SAAS,CAACqB,MAAV,CAAiBC,U;AACtBP,EAAAA,WAAW,EAAEf,SAAS,CAACuB,I;AACvBP,EAAAA,GAAG,EAAEhB,SAAS,CAACqB,M;AACfJ,EAAAA,SAAS,EAAEjB,SAAS,CAACqB;GAClBnB,CAAC,CAACsB,IAAF,CAAOrB,MAAM,CAACsB,SAAd,EAAyB,CAAC,UAAD,CAAzB,C;;gBARLpB,W,kBAWoB;AAClBU,EAAAA,WAAW,EAAE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK,C;;AA8C1B,SAASV,WAAT","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport _ from 'lodash';\n\nimport { Avatar } from './Avatar';\nimport { AvatarFont } from './AvatarFont';\n\nclass AvatarImage extends React.PureComponent {\n    imgRef = React.createRef();\n\n    static propTypes = {\n        src: PropTypes.string.isRequired,\n        placeholder: PropTypes.node,\n        alt: PropTypes.string,\n        className: PropTypes.string,\n        ..._.omit(Avatar.propTypes, ['children'])\n    };\n\n    static defaultProps = {\n        placeholder: <i className=\"fa fa-user fa-fw\"></i>\n    }\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            imgLoaded: false\n        };\n    }\n\n    componentDidMount() {\n        if (this.imgRef && this.imgRef.current && this.imgRef.current.naturalWidth !== 0) {\n            this.setState({ imgLoaded: true });\n        }\n    }\n\n    render() {\n        const { src, placeholder, alt, className, ...avatarProps } = this.props;\n        const parentClass = classNames('avatar-image', {\n            'avatar-image--loaded': this.state.imgLoaded\n        }, className);\n\n        return (\n            <div className={ parentClass }>\n                <Avatar className=\"avatar-image__image\" {...avatarProps}>\n                    <img\n                        src={ src }\n                        alt={ alt }\n                        ref={ this.imgRef }\n                        onLoad={ () => { this.setState({ imgLoaded: true }) } }\n                    />\n                </Avatar>\n                {\n                    !this.state.imgLoaded && (\n                        <AvatarFont className=\"avatar-image__placeholder\" {...avatarProps}>\n                            { placeholder }\n                        </AvatarFont>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport { AvatarImage };\n"]},"metadata":{},"sourceType":"module"}