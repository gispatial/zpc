{"ast":null,"code":"var _jsxFileName = \"/Users/crocslut/Desktop/Git/zpc/components/IconWithBadge/IconWithBadge.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nvar IconWithBadge = function IconWithBadge(props) {\n  var badge = props.badge,\n      children = props.children,\n      className = props.className;\n  var adjustedBadge = React.cloneElement(badge, {\n    className: classNames(badge.props.className, 'icon-with-badge__badge')\n  });\n  var wrapClass = classNames(className, 'icon-with-badge');\n  return React.createElement(\"div\", {\n    className: wrapClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, children, adjustedBadge);\n};\n\nIconWithBadge.propTypes = {\n  badge: PropTypes.node,\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nexport { IconWithBadge };","map":{"version":3,"sources":["/Users/crocslut/Desktop/Git/zpc/components/IconWithBadge/IconWithBadge.js"],"names":["React","PropTypes","classNames","IconWithBadge","props","badge","children","className","adjustedBadge","cloneElement","wrapClass","propTypes","node","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,MACrBC,KADqB,GACUD,KADV,CACrBC,KADqB;AAAA,MACdC,QADc,GACUF,KADV,CACdE,QADc;AAAA,MACJC,SADI,GACUH,KADV,CACJG,SADI;AAE7B,MAAMC,aAAa,GAAGR,KAAK,CAACS,YAAN,CAAmBJ,KAAnB,EAA0B;AAC5CE,IAAAA,SAAS,EAAEL,UAAU,CACjBG,KAAK,CAACD,KAAN,CAAYG,SADK,EAEjB,wBAFiB;AADuB,GAA1B,CAAtB;AAMA,MAAMG,SAAS,GAAGR,UAAU,CAACK,SAAD,EAAY,iBAAZ,CAA5B;AACA,SACI;AAAK,IAAA,SAAS,EAAGG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMJ,QADN,EAEME,aAFN,CADJ;AAMH,CAfD;;AAgBAL,aAAa,CAACQ,SAAd,GAA0B;AACtBN,EAAAA,KAAK,EAAEJ,SAAS,CAACW,IADK;AAEtBN,EAAAA,QAAQ,EAAEL,SAAS,CAACW,IAFE;AAGtBL,EAAAA,SAAS,EAAEN,SAAS,CAACY;AAHC,CAA1B;AAMA,SAASV,aAAT","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst IconWithBadge = (props) => {\n    const { badge, children, className } = props;\n    const adjustedBadge = React.cloneElement(badge, {\n        className: classNames(\n            badge.props.className,\n            'icon-with-badge__badge'\n        )\n    });\n    const wrapClass = classNames(className, 'icon-with-badge');\n    return (\n        <div className={ wrapClass }>\n            { children }\n            { adjustedBadge }\n        </div>\n    );\n};\nIconWithBadge.propTypes = {\n    badge: PropTypes.node,\n    children: PropTypes.node,\n    className: PropTypes.string\n};\n\nexport { IconWithBadge };\n"]},"metadata":{},"sourceType":"module"}