{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/crocslut/Desktop/Git/zpc/components/Avatar/AvatarFont.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Avatar } from './Avatar';\n\nvar AvatarFont = function AvatarFont(props) {\n  var children = props.children,\n      bgColor = props.bgColor,\n      fgColor = props.fgColor,\n      bgColorCustom = props.bgColorCustom,\n      fgColorCustom = props.fgColorCustom,\n      avatarProps = _objectWithoutProperties(props, [\"children\", \"bgColor\", \"fgColor\", \"bgColorCustom\", \"fgColorCustom\"]);\n\n  var parentClass = classNames('avatar-font', \"avatar-font--\".concat(avatarProps.size), bgColor && \"bg-\".concat(bgColor));\n  var childClass = classNames('avatar-font__text', fgColor && \"text-\".concat(fgColor));\n  var parentCustomStyle = bgColorCustom ? {\n    backgroundColor: bgColorCustom\n  } : {};\n  var childCustomStyle = fgColorCustom ? {\n    color: fgColorCustom\n  } : {};\n  var child = React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, children);\n  return React.createElement(Avatar, _extends({}, avatarProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: parentClass,\n    style: parentCustomStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.cloneElement(child, {\n    style: childCustomStyle,\n    className: classNames(child.props.className, childClass)\n  })));\n};\n\nAvatarFont.propTypes = _objectSpread({\n  children: PropTypes.node,\n  bgColor: PropTypes.string,\n  fgColor: PropTypes.string,\n  bgColorCustom: PropTypes.string,\n  fgColorCustom: PropTypes.string\n}, Avatar.propTypes);\nAvatarFont.defaultProps = {\n  bgColor: '400',\n  fgColor: 'white',\n  size: 'md'\n};\nexport { AvatarFont };","map":{"version":3,"sources":["/Users/crocslut/Desktop/Git/zpc/components/Avatar/AvatarFont.js"],"names":["React","PropTypes","classNames","Avatar","AvatarFont","props","children","bgColor","fgColor","bgColorCustom","fgColorCustom","avatarProps","parentClass","size","childClass","parentCustomStyle","backgroundColor","childCustomStyle","color","child","cloneElement","style","className","propTypes","node","string","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA,MAEtBC,QAFsB,GAQtBD,KARsB,CAEtBC,QAFsB;AAAA,MAGtBC,OAHsB,GAQtBF,KARsB,CAGtBE,OAHsB;AAAA,MAItBC,OAJsB,GAQtBH,KARsB,CAItBG,OAJsB;AAAA,MAKtBC,aALsB,GAQtBJ,KARsB,CAKtBI,aALsB;AAAA,MAMtBC,aANsB,GAQtBL,KARsB,CAMtBK,aANsB;AAAA,MAOnBC,WAPmB,4BAQtBN,KARsB;;AAS1B,MAAMO,WAAW,GAAGV,UAAU,CAC1B,aAD0B,yBAEVS,WAAW,CAACE,IAFF,GAG1BN,OAAO,iBAAWA,OAAX,CAHmB,CAA9B;AAKA,MAAMO,UAAU,GAAGZ,UAAU,CAAC,mBAAD,EACzBM,OAAO,mBAAaA,OAAb,CADkB,CAA7B;AAGA,MAAMO,iBAAiB,GAAGN,aAAa,GAAG;AACtCO,IAAAA,eAAe,EAAEP;AADqB,GAAH,GAEnC,EAFJ;AAGA,MAAMQ,gBAAgB,GAAGP,aAAa,GAAG;AACrCQ,IAAAA,KAAK,EAAER;AAD8B,GAAH,GAElC,EAFJ;AAGA,MAAMS,KAAK,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMb,QADN,CADJ;AAMA,SACI,oBAAC,MAAD,eAAaK,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI;AAAK,IAAA,SAAS,EAAGC,WAAjB;AAA+B,IAAA,KAAK,EAAEG,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIf,KAAK,CAACoB,YAAN,CAAmBD,KAAnB,EAA0B;AACtBE,IAAAA,KAAK,EAAEJ,gBADe;AAEtBK,IAAAA,SAAS,EAAEpB,UAAU,CAACiB,KAAK,CAACd,KAAN,CAAYiB,SAAb,EAAwBR,UAAxB;AAFC,GAA1B,CAFJ,CADJ,CADJ;AAYH,CAzCD;;AA0CAV,UAAU,CAACmB,SAAX;AACIjB,EAAAA,QAAQ,EAAEL,SAAS,CAACuB,IADxB;AAEIjB,EAAAA,OAAO,EAAEN,SAAS,CAACwB,MAFvB;AAGIjB,EAAAA,OAAO,EAAEP,SAAS,CAACwB,MAHvB;AAIIhB,EAAAA,aAAa,EAAER,SAAS,CAACwB,MAJ7B;AAKIf,EAAAA,aAAa,EAAET,SAAS,CAACwB;AAL7B,GAMOtB,MAAM,CAACoB,SANd;AAQAnB,UAAU,CAACsB,YAAX,GAA0B;AACtBnB,EAAAA,OAAO,EAAE,KADa;AAEtBC,EAAAA,OAAO,EAAE,OAFa;AAGtBK,EAAAA,IAAI,EAAE;AAHgB,CAA1B;AAMA,SAAST,UAAT","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { Avatar } from './Avatar';\n\nconst AvatarFont = (props) => {\n    const {\n        children,\n        bgColor,\n        fgColor,\n        bgColorCustom,\n        fgColorCustom,\n        ...avatarProps\n    } = props;\n    const parentClass = classNames(\n        'avatar-font',\n        `avatar-font--${avatarProps.size}`,\n        bgColor && `bg-${ bgColor }`\n    );\n    const childClass = classNames('avatar-font__text',\n        fgColor && `text-${ fgColor }`\n    );\n    const parentCustomStyle = bgColorCustom ? {\n        backgroundColor: bgColorCustom\n    } : { };\n    const childCustomStyle = fgColorCustom ? {\n        color: fgColorCustom\n    } : { };\n    const child = (\n        <span>\n            { children }\n        </span>\n    );\n\n    return (\n        <Avatar { ...avatarProps }>\n            <div className={ parentClass } style={parentCustomStyle}>\n            {\n                React.cloneElement(child, {\n                    style: childCustomStyle,\n                    className: classNames(child.props.className, childClass)\n                })\n            }\n            </div>\n        </Avatar>\n    );\n};\nAvatarFont.propTypes = {\n    children: PropTypes.node,\n    bgColor: PropTypes.string,\n    fgColor: PropTypes.string,\n    bgColorCustom: PropTypes.string,\n    fgColorCustom: PropTypes.string,\n    ...Avatar.propTypes\n};\nAvatarFont.defaultProps = {\n    bgColor: '400',\n    fgColor: 'white',\n    size: 'md'\n};\n\nexport { AvatarFont };"]},"metadata":{},"sourceType":"module"}