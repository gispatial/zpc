{"ast":null,"code":"var _jsxFileName = \"/Users/crocslut/Desktop/Git/zpc/components/Avatar/Avatar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport _ from 'lodash';\n\nvar Avatar = function Avatar(props) {\n  var avatarClass = classNames('avatar', \"avatar--\".concat(props.size), props.className);\n  var addOnsdArr = React.Children.toArray(props.addOns);\n\n  var badge = _.find(addOnsdArr, function (avatarAddOn) {\n    return avatarAddOn.type.addOnId === \"avatar--badge\";\n  });\n\n  var icons = _.filter(addOnsdArr, function (avatarAddOn) {\n    return avatarAddOn.type.addOnId === \"avatar--icon\";\n  });\n\n  var isNested = _.reduce(addOnsdArr, function (acc, avatarAddOn) {\n    return acc || !!avatarAddOn.props.small;\n  }, false);\n\n  return React.createElement(\"div\", {\n    className: avatarClass,\n    style: props.style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, badge && React.createElement(\"div\", {\n    className: \"avatar__badge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, badge), !_.isEmpty(icons) && function () {\n    switch (icons.length) {\n      case 1:\n        return React.createElement(\"div\", {\n          className: \"avatar__icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, _.first(icons));\n\n      default:\n        return React.createElement(\"div\", {\n          className: classNames({\n            'avatar__icon--nested': isNested\n          }, 'avatar__icon', 'avatar__icon--stack'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, icons);\n    }\n  }(), React.createElement(\"div\", {\n    className: \"avatar__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.children));\n};\n\nAvatar.propTypes = {\n  size: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  addOns: PropTypes.node,\n  style: PropTypes.object,\n  className: PropTypes.string\n};\nAvatar.defaultProps = {\n  size: \"md\",\n  style: {}\n};\nexport { Avatar };","map":{"version":3,"sources":["/Users/crocslut/Desktop/Git/zpc/components/Avatar/Avatar.js"],"names":["React","PropTypes","classNames","_","Avatar","props","avatarClass","size","className","addOnsdArr","Children","toArray","addOns","badge","find","avatarAddOn","type","addOnId","icons","filter","isNested","reduce","acc","small","style","isEmpty","length","first","children","propTypes","string","node","isRequired","object","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtB,MAAMC,WAAW,GAAGJ,UAAU,CAC1B,QAD0B,oBAEdG,KAAK,CAACE,IAFQ,GAG1BF,KAAK,CAACG,SAHoB,CAA9B;AAKA,MAAMC,UAAU,GAAGT,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBN,KAAK,CAACO,MAA7B,CAAnB;;AACA,MAAMC,KAAK,GAAGV,CAAC,CAACW,IAAF,CAAOL,UAAP,EAAmB,UAACM,WAAD;AAAA,WAC7BA,WAAW,CAACC,IAAZ,CAAiBC,OAAjB,KAA6B,eADA;AAAA,GAAnB,CAAd;;AAEA,MAAMC,KAAK,GAAGf,CAAC,CAACgB,MAAF,CAASV,UAAT,EAAqB,UAACM,WAAD;AAAA,WAC/BA,WAAW,CAACC,IAAZ,CAAiBC,OAAjB,KAA6B,cADE;AAAA,GAArB,CAAd;;AAEA,MAAMG,QAAQ,GAAGjB,CAAC,CAACkB,MAAF,CAASZ,UAAT,EAAqB,UAACa,GAAD,EAAMP,WAAN;AAAA,WAClCO,GAAG,IAAI,CAAC,CAACP,WAAW,CAACV,KAAZ,CAAkBkB,KADO;AAAA,GAArB,EACqB,KADrB,CAAjB;;AAGA,SACI;AAAK,IAAA,SAAS,EAAGjB,WAAjB;AAA+B,IAAA,KAAK,EAAGD,KAAK,CAACmB,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQX,KAAK,IACD;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMA,KADN,CAHZ,EASQ,CAACV,CAAC,CAACsB,OAAF,CAAUP,KAAV,CAAD,IAAsB,YAAM;AACxB,YAAOA,KAAK,CAACQ,MAAb;AACI,WAAK,CAAL;AACI,eACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACMvB,CAAC,CAACwB,KAAF,CAAQT,KAAR,CADN,CADJ;;AAKJ;AACI,eACI;AACI,UAAA,SAAS,EACLhB,UAAU,CAAC;AACP,oCAAwBkB;AADjB,WAAD,EAEP,cAFO,EAES,qBAFT,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOMF,KAPN,CADJ;AARR;AAoBH,GArBoB,EAT7B,EAgCI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMb,KAAK,CAACuB,QADZ,CAhCJ,CADJ;AAsCH,CApDD;;AAqDAxB,MAAM,CAACyB,SAAP,GAAmB;AACftB,EAAAA,IAAI,EAAEN,SAAS,CAAC6B,MADD;AAEfF,EAAAA,QAAQ,EAAE3B,SAAS,CAAC8B,IAAV,CAAeC,UAFV;AAGfpB,EAAAA,MAAM,EAAEX,SAAS,CAAC8B,IAHH;AAIfP,EAAAA,KAAK,EAAEvB,SAAS,CAACgC,MAJF;AAKfzB,EAAAA,SAAS,EAAEP,SAAS,CAAC6B;AALN,CAAnB;AAOA1B,MAAM,CAAC8B,YAAP,GAAsB;AAClB3B,EAAAA,IAAI,EAAE,IADY;AAElBiB,EAAAA,KAAK,EAAE;AAFW,CAAtB;AAKA,SAASpB,MAAT","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport _ from 'lodash';\n\nconst Avatar = (props) => {\n    const avatarClass = classNames(\n        'avatar',\n        `avatar--${ props.size }`,\n        props.className\n    );\n    const addOnsdArr = React.Children.toArray(props.addOns);\n    const badge = _.find(addOnsdArr, (avatarAddOn) =>\n        avatarAddOn.type.addOnId === \"avatar--badge\");\n    const icons = _.filter(addOnsdArr, (avatarAddOn) =>\n        avatarAddOn.type.addOnId === \"avatar--icon\");\n    const isNested = _.reduce(addOnsdArr, (acc, avatarAddOn) =>\n        acc || !!avatarAddOn.props.small, false);\n\n    return (\n        <div className={ avatarClass } style={ props.style }>\n            {\n                badge && (\n                    <div className=\"avatar__badge\">\n                        { badge }\n                    </div>\n                )\n            }\n            {\n                !_.isEmpty(icons) && (() => {\n                    switch(icons.length) {\n                        case 1:\n                            return (\n                                <div className=\"avatar__icon\">\n                                    { _.first(icons) }\n                                </div>\n                            )\n                        default:\n                            return (\n                                <div\n                                    className={\n                                        classNames({\n                                            'avatar__icon--nested': isNested,\n                                        }, 'avatar__icon', 'avatar__icon--stack')\n                                    }\n                                >\n                                    { icons }\n                                </div>\n                            )\n                    }\n                })() \n            }\n            <div className='avatar__content'>\n                { props.children }\n            </div>\n        </div>\n    );\n};\nAvatar.propTypes = {\n    size: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    addOns: PropTypes.node,\n    style: PropTypes.object,\n    className: PropTypes.string\n};\nAvatar.defaultProps = {\n    size: \"md\",\n    style: {}\n};\n\nexport { Avatar };"]},"metadata":{},"sourceType":"module"}