{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/crocslut/Desktop/Git/zpc/features/LogoThemed/LogoThemed.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ThemeConsumer } from '../../components/Theme';\nvar logos = {\n  'white': '/static/images/logos/logo-white.svg',\n  'primary': '/static/images/logos/logo-primary.svg',\n  'success': '/static/images/logos/logo-success.svg',\n  'warning': '/static/images/logos/logo-warning.svg',\n  'danger': '/static/images/logos/logo-danger.svg',\n  'info': '/static/images/logos/logo-info.svg',\n  'indigo': '/static/images/logos/logo-indigo.svg',\n  'purple': '/static/images/logos/logo-purple.svg',\n  'pink': '/static/images/logos/logo-pink.svg',\n  'yellow': '/static/images/logos/logo-yellow.svg'\n};\n\nvar getLogoUrl = function getLogoUrl(style, color) {\n  return logos[color];\n}; // Check for background\n\n\nvar getLogoUrlBackground = function getLogoUrlBackground(style, color) {\n  if (style === 'color') {\n    return logos['white'];\n  } else {\n    return getLogoUrl(style, color);\n  }\n};\n\nvar LogoThemed = function LogoThemed(_ref) {\n  var checkBackground = _ref.checkBackground,\n      className = _ref.className,\n      otherProps = _objectWithoutProperties(_ref, [\"checkBackground\", \"className\"]);\n\n  return React.createElement(ThemeConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, function (_ref2) {\n    var style = _ref2.style,\n        color = _ref2.color;\n    return React.createElement(\"img\", _extends({\n      src: checkBackground ? getLogoUrlBackground(style, color) : getLogoUrl(style, color),\n      className: classNames('d-block', className),\n      alt: \"Airframe Logo\"\n    }, otherProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  });\n};\n\nLogoThemed.propTypes = {\n  checkBackground: PropTypes.bool,\n  className: PropTypes.string\n};\nexport { LogoThemed };","map":{"version":3,"sources":["/Users/crocslut/Desktop/Git/zpc/features/LogoThemed/LogoThemed.js"],"names":["React","PropTypes","classNames","ThemeConsumer","logos","getLogoUrl","style","color","getLogoUrlBackground","LogoThemed","checkBackground","className","otherProps","propTypes","bool","string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,IAAMC,KAAK,GAAG;AACV,WAAS,qCADC;AAEV,aAAW,uCAFD;AAGV,aAAW,uCAHD;AAIV,aAAW,uCAJD;AAKV,YAAU,sCALA;AAMV,UAAQ,oCANE;AAOV,YAAU,sCAPA;AAQV,YAAU,sCARA;AASV,UAAQ,oCATE;AAUV,YAAU;AAVA,CAAd;;AAaA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,KAAR,EAAkB;AACjC,SAAOH,KAAK,CAACG,KAAD,CAAZ;AACH,CAFD,C,CAIA;;;AACA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACF,KAAD,EAAQC,KAAR,EAAkB;AAC3C,MAAID,KAAK,KAAK,OAAd,EAAuB;AACnB,WAAOF,KAAK,CAAC,OAAD,CAAZ;AACH,GAFD,MAEO;AACH,WAAOC,UAAU,CAACC,KAAD,EAAQC,KAAR,CAAjB;AACH;AACJ,CAND;;AAQA,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,eAAH,QAAGA,eAAH;AAAA,MAAoBC,SAApB,QAAoBA,SAApB;AAAA,MAAkCC,UAAlC;;AAAA,SACf,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA,QAAGN,KAAH,SAAGA,KAAH;AAAA,QAAUC,KAAV,SAAUA,KAAV;AAAA,WACI;AACI,MAAA,GAAG,EACCG,eAAe,GACXF,oBAAoB,CAACF,KAAD,EAAQC,KAAR,CADT,GAEXF,UAAU,CAACC,KAAD,EAAQC,KAAR,CAJtB;AAMI,MAAA,SAAS,EAAGL,UAAU,CAAC,SAAD,EAAYS,SAAZ,CAN1B;AAOI,MAAA,GAAG,EAAC;AAPR,OAQSC,UART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAAA,GAFJ,CADe;AAAA,CAAnB;;AAkBAH,UAAU,CAACI,SAAX,GAAuB;AACnBH,EAAAA,eAAe,EAAET,SAAS,CAACa,IADR;AAEnBH,EAAAA,SAAS,EAAEV,SAAS,CAACc;AAFF,CAAvB;AAKA,SAASN,UAAT","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { ThemeConsumer } from '../../components/Theme';\n\nconst logos = {\n    'white': '/static/images/logos/logo-white.svg',\n    'primary': '/static/images/logos/logo-primary.svg',\n    'success': '/static/images/logos/logo-success.svg',\n    'warning': '/static/images/logos/logo-warning.svg',\n    'danger': '/static/images/logos/logo-danger.svg',\n    'info': '/static/images/logos/logo-info.svg',\n    'indigo': '/static/images/logos/logo-indigo.svg',\n    'purple': '/static/images/logos/logo-purple.svg',\n    'pink': '/static/images/logos/logo-pink.svg',\n    'yellow': '/static/images/logos/logo-yellow.svg'\n}\n\nconst getLogoUrl = (style, color) => {\n    return logos[color];\n}\n\n// Check for background\nconst getLogoUrlBackground = (style, color) => {\n    if (style === 'color') {\n        return logos['white'];\n    } else {\n        return getLogoUrl(style, color);\n    }\n}\n\nconst LogoThemed = ({ checkBackground, className, ...otherProps }) => (\n    <ThemeConsumer>\n    {\n        ({ style, color }) => (\n            <img\n                src={\n                    checkBackground ?\n                        getLogoUrlBackground(style, color) :\n                        getLogoUrl(style, color)\n                }\n                className={ classNames('d-block', className) }\n                alt=\"Airframe Logo\"\n                { ...otherProps }\n            />\n        )\n    }\n    </ThemeConsumer>\n);\nLogoThemed.propTypes = {\n    checkBackground: PropTypes.bool,\n    className: PropTypes.string,\n};\n\nexport { LogoThemed };\n"]},"metadata":{},"sourceType":"module"}