{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/crocslut/Desktop/Git/zpc/components/Checkable/CheckableInput.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'reactstrap';\nimport { Consumer } from './context';\n\nvar CheckableInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckableInput, _React$Component);\n\n  function CheckableInput() {\n    _classCallCheck(this, CheckableInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CheckableInput).apply(this, arguments));\n  }\n\n  _createClass(CheckableInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.defaultChecked) {\n        this.props.toggle(this.props.defaultChecked);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          tag = _this$props.tag,\n          isChecked = _this$props.isChecked,\n          toggle = _this$props.toggle,\n          otherProps = _objectWithoutProperties(_this$props, [\"tag\", \"isChecked\", \"toggle\"]);\n\n      var Tag = tag;\n      return React.createElement(Tag, _extends({\n        checked: isChecked,\n        onChange: function onChange(e) {\n          toggle(e.target.checked);\n        }\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CheckableInput;\n}(React.Component);\n\n_defineProperty(CheckableInput, \"propTypes\", {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  type: PropTypes.string,\n  defaultChecked: PropTypes.bool,\n  toggle: PropTypes.func,\n  isChecked: PropTypes.bool\n});\n\n_defineProperty(CheckableInput, \"defaultProps\", {\n  tag: Input,\n  type: \"checkbox\"\n});\n\nvar ContextCheckableInput = function ContextCheckableInput(props) {\n  return React.createElement(Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, function (value) {\n    return React.createElement(CheckableInput, _extends({}, _objectSpread({}, props, value), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  });\n};\n\nexport { ContextCheckableInput as CheckableInput };","map":{"version":3,"sources":["/Users/crocslut/Desktop/Git/zpc/components/Checkable/CheckableInput.js"],"names":["React","PropTypes","Input","Consumer","CheckableInput","props","defaultChecked","toggle","tag","isChecked","otherProps","Tag","e","target","checked","Component","oneOfType","func","string","type","bool","ContextCheckableInput","value"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,YAAtB;AAEA,SAASC,QAAT,QAAyB,WAAzB;;IAEMC,c;;;;;;;;;;;;;wCAgBkB;AAChB,UAAI,KAAKC,KAAL,CAAWC,cAAf,EAA+B;AAC3B,aAAKD,KAAL,CAAWE,MAAX,CAAkB,KAAKF,KAAL,CAAWC,cAA7B;AACH;AACJ;;;6BAEQ;AAAA,wBAC6C,KAAKD,KADlD;AAAA,UACGG,GADH,eACGA,GADH;AAAA,UACQC,SADR,eACQA,SADR;AAAA,UACmBF,MADnB,eACmBA,MADnB;AAAA,UAC8BG,UAD9B;;AAEL,UAAMC,GAAG,GAAGH,GAAZ;AAEA,aACI,oBAAC,GAAD;AACI,QAAA,OAAO,EAAGC,SADd;AAEI,QAAA,QAAQ,EAAG,kBAACG,CAAD,EAAO;AAAEL,UAAAA,MAAM,CAACK,CAAC,CAACC,MAAF,CAASC,OAAV,CAAN;AAA0B;AAFlD,SAGSJ,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAOH;;;;EAjCwBV,KAAK,CAACe,S;;gBAA7BX,c,eACiB;AACfI,EAAAA,GAAG,EAAEP,SAAS,CAACe,SAAV,CAAoB,CACrBf,SAAS,CAACgB,IADW,EAErBhB,SAAS,CAACiB,MAFW,CAApB,CADU;AAKfC,EAAAA,IAAI,EAAElB,SAAS,CAACiB,MALD;AAMfZ,EAAAA,cAAc,EAAEL,SAAS,CAACmB,IANX;AAOfb,EAAAA,MAAM,EAAEN,SAAS,CAACgB,IAPH;AAQfR,EAAAA,SAAS,EAAER,SAAS,CAACmB;AARN,C;;gBADjBhB,c,kBAWoB;AAClBI,EAAAA,GAAG,EAAEN,KADa;AAElBiB,EAAAA,IAAI,EAAE;AAFY,C;;AAyB1B,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAChB,KAAD;AAAA,SAC1B,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,UAACiB,KAAD;AAAA,WACI,oBAAC,cAAD,iCAA0BjB,KAA1B,EAAoCiB,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAAA,GAFJ,CAD0B;AAAA,CAA9B;;AAUA,SAASD,qBAAqB,IAAIjB,cAAlC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'reactstrap';\n\nimport { Consumer } from './context';\n\nclass CheckableInput extends React.Component {\n    static propTypes = {\n        tag: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.string\n        ]),\n        type: PropTypes.string,\n        defaultChecked: PropTypes.bool,\n        toggle: PropTypes.func,\n        isChecked: PropTypes.bool\n    };\n    static defaultProps = {\n        tag: Input,\n        type: \"checkbox\"\n    };\n\n    componentDidMount() {\n        if (this.props.defaultChecked) {\n            this.props.toggle(this.props.defaultChecked);\n        }\n    }\n\n    render() {\n        const { tag, isChecked, toggle, ...otherProps } = this.props;\n        const Tag = tag;\n\n        return (\n            <Tag\n                checked={ isChecked }\n                onChange={ (e) => { toggle(e.target.checked) } }\n                { ...otherProps }\n            />\n        );\n    }\n}\n\nconst ContextCheckableInput = (props) => (\n    <Consumer>\n    {\n        (value) => (\n            <CheckableInput { ...{ ...props, ...value } } />\n        )\n    }\n    </Consumer>\n);\n\nexport { ContextCheckableInput as CheckableInput };\n"]},"metadata":{},"sourceType":"module"}