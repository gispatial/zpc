{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/crocslut/Desktop/Git/zpc/components/Layout/Layout.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'next/router';\nimport _ from 'lodash';\nimport { LayoutContent } from './LayoutContent';\nimport { LayoutNavbar } from './LayoutNavbar';\nimport { LayoutSidebar } from './LayoutSidebar';\nimport { PageConfigContext } from './PageConfigContext';\nimport { ThemeClass } from './../Theme';\nimport config from './../../config';\n\nvar findChildByType = function findChildByType(children, targetType) {\n  var result;\n  React.Children.forEach(children, function (child) {\n    if (child.type.layoutPartName === targetType.layoutPartName) {\n      result = child;\n    }\n  });\n  return result;\n};\n\nvar findChildrenByType = function findChildrenByType(children, targetType) {\n  return _.filter(React.Children.toArray(children), function (child) {\n    return child.type.layoutPartName === targetType.layoutPartName;\n  });\n};\n\nvar responsiveBreakpoints = {\n  'xs': {\n    max: 575.8\n  },\n  'sm': {\n    min: 576,\n    max: 767.8\n  },\n  'md': {\n    min: 768,\n    max: 991.8\n  },\n  'lg': {\n    min: 992,\n    max: 1199.8\n  },\n  'xl': {\n    min: 1200\n  }\n};\n\nvar Layout =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Layout, _React$Component);\n\n  function Layout(props) {\n    var _this;\n\n    _classCallCheck(this, Layout);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Layout).call(this, props));\n    _this.state = {\n      sidebarHidden: false,\n      navbarHidden: false,\n      footerHidden: false,\n      sidebarCollapsed: false,\n      screenSize: '',\n      animationsDisabled: true,\n      pageTitle: null,\n      pageDescription: config.siteDescription,\n      pageKeywords: config.siteKeywords\n    };\n    _this.lastLgSidebarCollapsed = false;\n    _this.containerRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Layout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Determine the current window size\n      // and set it up in the context state\n      var layoutAdjuster = function layoutAdjuster() {\n        var screenSize = _this2.state.screenSize;\n        var currentScreenSize;\n\n        _.forOwn(responsiveBreakpoints, function (value, key) {\n          var queryParts = [\"\".concat(_.isUndefined(value.min) ? '' : \"(min-width: \".concat(value.min, \"px)\")), \"\".concat(_.isUndefined(value.max) ? '' : \"(max-width: \".concat(value.max, \"px)\"))];\n\n          var query = _.compact(queryParts).join(' and ');\n\n          if (window.matchMedia(query).matches) {\n            currentScreenSize = key;\n          }\n        });\n\n        if (screenSize !== currentScreenSize) {\n          _this2.setState({\n            screenSize: currentScreenSize\n          });\n\n          _this2.updateLayoutOnScreenSize(currentScreenSize);\n        }\n      }; // Add window initialization\n\n\n      if (typeof window !== 'undefined') {\n        window.addEventListener('resize', function () {\n          setTimeout(layoutAdjuster.bind(_this2), 0);\n        });\n        layoutAdjuster();\n        window.requestAnimationFrame(function () {\n          _this2.setState({\n            animationsDisabled: false\n          });\n        });\n      } // Add document initialization\n\n\n      if (typeof document !== 'undefined') {\n        this.bodyElement = document.body;\n        this.documentElement = document.documentElement;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this3 = this;\n\n      // Prevent content scrolling in overlay mode\n      if (this.bodyElement && this.documentElement && (this.state.screenSize === 'xs' || this.state.screenSize === 'sm' || this.state.screenSize === 'md')) {\n        if (prevState.sidebarCollapsed !== this.state.sidebarCollapsed) {\n          // Most of the devices\n          var styleUpdate = this.state.sidebarCollapsed ? {\n            overflowY: 'auto',\n            touchAction: 'auto'\n          } : {\n            overflowY: 'hidden',\n            touchAction: 'none'\n          };\n\n          _Object$assign(this.bodyElement.style, styleUpdate);\n\n          _Object$assign(this.documentElement.style, styleUpdate);\n        }\n      } // After location change\n\n\n      if (prevProps.router.pathname !== this.props.router.pathname) {\n        // Scroll to top\n        if (this.bodyElement && this.documentElement) {\n          this.documentElement.scrollTop = this.bodyElement.scrollTop = 0;\n        } // Hide the sidebar when in overlay mode\n\n\n        if (!this.state.sidebarCollapsed && (this.state.screenSize === 'xs' || this.state.screenSize === 'sm' || this.state.screenSize === 'md')) {\n          // Add some time to prevent jank while the dom is updating\n          setTimeout(function () {\n            _this3.setState({\n              sidebarCollapsed: true\n            });\n          }, 100);\n        }\n      } // Update positions of STICKY navbars\n\n\n      this.updateNavbarsPositions();\n    }\n  }, {\n    key: \"updateLayoutOnScreenSize\",\n    value: function updateLayoutOnScreenSize(screenSize) {\n      if (screenSize === 'md' || screenSize === 'sm' || screenSize === 'xs') {\n        // Save for recovering to lg later\n        this.lastLgSidebarCollapsed = this.state.sidebarCollapsed;\n        this.setState({\n          sidebarCollapsed: true\n        });\n      } else {\n        this.setState({\n          sidebarCollapsed: this.lastLgSidebarCollapsed\n        });\n      }\n    }\n  }, {\n    key: \"updateNavbarsPositions\",\n    value: function updateNavbarsPositions() {\n      // eslint-disable-next-line react/no-find-dom-node\n      var containerElement = ReactDOM.findDOMNode(this.containerRef.current);\n\n      if (containerElement) {\n        var navbarElements = containerElement.querySelectorAll(\":scope .layout__navbar\"); // Calculate and update style.top of each navbar\n\n        var totalNavbarsHeight = 0;\n        navbarElements.forEach(function (navbarElement) {\n          var navbarBox = navbarElement.getBoundingClientRect();\n          navbarElement.style.top = \"\".concat(totalNavbarsHeight, \"px\");\n          totalNavbarsHeight += navbarBox.height;\n        });\n      }\n    }\n  }, {\n    key: \"toggleSidebar\",\n    value: function toggleSidebar() {\n      this.setState({\n        sidebarCollapsed: !this.state.sidebarCollapsed\n      });\n    }\n  }, {\n    key: \"setElementsVisibility\",\n    value: function setElementsVisibility(elements) {\n      this.setState(_.pick(elements, ['sidebarHidden', 'navbarHidden', 'footerHidden']));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          favIcons = _this$props.favIcons;\n      var sidebar = findChildByType(children, LayoutSidebar);\n      var navbars = findChildrenByType(children, LayoutNavbar);\n      var content = findChildByType(children, LayoutContent);\n\n      var otherChildren = _.differenceBy(React.Children.toArray(children), [sidebar].concat(_toConsumableArray(navbars), [content]), 'type');\n\n      var layoutClass = classNames('layout', 'layout--animations-enabled', {//'layout--only-navbar': this.state.sidebarHidden && !this.state.navbarHidden\n      });\n      return React.createElement(PageConfigContext.Provider, {\n        value: _objectSpread({}, this.state, {\n          sidebarSlim: !!this.props.sidebarSlim && (this.state.screenSize === 'lg' || this.state.screenSize === 'xl'),\n          toggleSidebar: this.toggleSidebar.bind(this),\n          setElementsVisibility: this.setElementsVisibility.bind(this),\n          changeMeta: function changeMeta(metaData) {\n            _this4.setState(metaData);\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Helmet, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"meta\", {\n        charSet: \"utf-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, config.siteTitle + (this.state.pageTitle ? \" - \".concat(this.state.pageTitle) : '')), React.createElement(\"link\", {\n        rel: \"canonical\",\n        href: config.siteCannonicalUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"meta\", {\n        name: \"description\",\n        content: this.state.pageDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), _.map(favIcons, function (favIcon, index) {\n        return React.createElement(\"link\", _extends({}, favIcon, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }));\n      })), React.createElement(ThemeClass, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, function (themeClass) {\n        return React.createElement(\"div\", {\n          className: classNames(layoutClass, themeClass),\n          ref: _this4.containerRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, !_this4.state.sidebarHidden && sidebar && React.cloneElement(sidebar, {\n          sidebarSlim: !!_this4.props.sidebarSlim && _this4.state.sidebarCollapsed && (_this4.state.screenSize === 'lg' || _this4.state.screenSize === 'xl'),\n          sidebarCollapsed: !_this4.props.sidebarSlim && _this4.state.sidebarCollapsed\n        }), React.createElement(\"div\", {\n          className: \"layout__wrap\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, !_this4.state.navbarHidden && navbars, content), otherChildren);\n      }));\n    }\n  }]);\n\n  return Layout;\n}(React.Component);\n\n_defineProperty(Layout, \"propTypes\", {\n  children: PropTypes.node,\n  sidebarSlim: PropTypes.bool,\n  location: PropTypes.object,\n  favIcons: PropTypes.array\n});\n\nvar routedLayout = withRouter(Layout);\nexport { routedLayout as Layout };","map":{"version":3,"sources":["/Users/crocslut/Desktop/Git/zpc/components/Layout/Layout.js"],"names":["React","ReactDOM","PropTypes","classNames","Helmet","withRouter","_","LayoutContent","LayoutNavbar","LayoutSidebar","PageConfigContext","ThemeClass","config","findChildByType","children","targetType","result","Children","forEach","child","type","layoutPartName","findChildrenByType","filter","toArray","responsiveBreakpoints","max","min","Layout","props","state","sidebarHidden","navbarHidden","footerHidden","sidebarCollapsed","screenSize","animationsDisabled","pageTitle","pageDescription","siteDescription","pageKeywords","siteKeywords","lastLgSidebarCollapsed","containerRef","createRef","layoutAdjuster","currentScreenSize","forOwn","value","key","queryParts","isUndefined","query","compact","join","window","matchMedia","matches","setState","updateLayoutOnScreenSize","addEventListener","setTimeout","bind","requestAnimationFrame","document","bodyElement","body","documentElement","prevProps","prevState","styleUpdate","overflowY","touchAction","style","router","pathname","scrollTop","updateNavbarsPositions","containerElement","findDOMNode","current","navbarElements","querySelectorAll","totalNavbarsHeight","navbarElement","navbarBox","getBoundingClientRect","top","height","elements","pick","favIcons","sidebar","navbars","content","otherChildren","differenceBy","layoutClass","sidebarSlim","toggleSidebar","setElementsVisibility","changeMeta","metaData","siteTitle","siteCannonicalUrl","map","favIcon","index","themeClass","cloneElement","Component","node","bool","location","object","array","routedLayout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'next/router';\nimport _ from 'lodash';\n\nimport { LayoutContent } from './LayoutContent';\nimport { LayoutNavbar } from './LayoutNavbar';\nimport { LayoutSidebar } from './LayoutSidebar';\nimport { PageConfigContext } from './PageConfigContext';\nimport { ThemeClass } from './../Theme';\n\nimport config from './../../config';\n\nconst findChildByType = (children, targetType) => {\n    let result;\n\n    React.Children.forEach(children, (child) => {\n        if (child.type.layoutPartName === targetType.layoutPartName) {\n            result = child;\n        }\n    });\n\n    return result;\n};\nconst findChildrenByType = (children, targetType) => {\n    return _.filter(React.Children.toArray(children), (child) =>\n        child.type.layoutPartName === targetType.layoutPartName);\n};\n\nconst responsiveBreakpoints = {\n    'xs': { max: 575.8 },\n    'sm': { min: 576, max: 767.8 },\n    'md': { min: 768, max: 991.8 },\n    'lg': { min: 992, max: 1199.8 },\n    'xl': { min: 1200 }\n};\n\nclass Layout extends React.Component {\n    static propTypes = {\n        children: PropTypes.node,\n        sidebarSlim: PropTypes.bool,\n        location: PropTypes.object,\n        favIcons: PropTypes.array\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sidebarHidden: false,\n            navbarHidden: false,\n            footerHidden: false,\n            sidebarCollapsed: false,\n            screenSize: '',\n            animationsDisabled: true,\n\n            pageTitle: null,\n            pageDescription: config.siteDescription,\n            pageKeywords: config.siteKeywords\n        };\n\n        this.lastLgSidebarCollapsed = false;\n        this.containerRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // Determine the current window size\n        // and set it up in the context state\n        const layoutAdjuster = () => {\n            const { screenSize } = this.state;\n            let currentScreenSize;\n\n            _.forOwn(responsiveBreakpoints, (value, key) => {\n                const queryParts = [\n                    `${ _.isUndefined(value.min) ? '' : `(min-width: ${value.min}px)` }`,\n                    `${ _.isUndefined(value.max) ? '' : `(max-width: ${value.max}px)`}`\n                ];\n                const query = _.compact(queryParts).join(' and ');\n\n                if (window.matchMedia(query).matches) {\n                    currentScreenSize = key;\n                }\n            });\n\n            if (screenSize !== currentScreenSize) {\n                this.setState({ screenSize: currentScreenSize });\n                this.updateLayoutOnScreenSize(currentScreenSize);\n            }\n        };\n\n        // Add window initialization\n        if (typeof window !== 'undefined') {\n            window.addEventListener('resize', () => {\n                setTimeout(layoutAdjuster.bind(this), 0);\n            });\n            \n            layoutAdjuster();\n\n            window.requestAnimationFrame(() => {\n                this.setState({ animationsDisabled: false });\n            });\n        }\n        // Add document initialization\n        if (typeof document !== 'undefined') {\n            this.bodyElement = document.body;\n            this.documentElement = document.documentElement;\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // Prevent content scrolling in overlay mode\n        if (\n            this.bodyElement && this.documentElement && (\n                this.state.screenSize === 'xs' ||\n                this.state.screenSize === 'sm' ||\n                this.state.screenSize === 'md'\n            )\n        ) {\n            if (prevState.sidebarCollapsed !== this.state.sidebarCollapsed) {\n                // Most of the devices\n                const styleUpdate = this.state.sidebarCollapsed ? {\n                        overflowY: 'auto',\n                        touchAction: 'auto'\n                    }: {\n                        overflowY: 'hidden',\n                        touchAction: 'none'\n                    }\n                Object.assign(this.bodyElement.style, styleUpdate);\n                Object.assign(this.documentElement.style, styleUpdate);\n            }\n        }\n\n        // After location change\n        if (prevProps.router.pathname !== this.props.router.pathname) {\n            // Scroll to top\n            if (this.bodyElement && this.documentElement) {\n                this.documentElement.scrollTop = this.bodyElement.scrollTop = 0;\n            }\n\n            // Hide the sidebar when in overlay mode\n            if (\n                !this.state.sidebarCollapsed && (\n                    this.state.screenSize === 'xs' ||\n                    this.state.screenSize === 'sm' ||\n                    this.state.screenSize === 'md'\n                )\n            ) {\n                // Add some time to prevent jank while the dom is updating\n                setTimeout(() => {\n                    this.setState({ sidebarCollapsed: true });\n                }, 100);\n            }\n        }\n\n        // Update positions of STICKY navbars\n        this.updateNavbarsPositions();\n    }\n\n    updateLayoutOnScreenSize(screenSize) {\n        if (\n            screenSize === 'md' ||\n            screenSize === 'sm' ||\n            screenSize === 'xs'\n        ) {\n            // Save for recovering to lg later\n            this.lastLgSidebarCollapsed = this.state.sidebarCollapsed;\n            this.setState({ sidebarCollapsed: true });\n        } else {\n            this.setState({ sidebarCollapsed: this.lastLgSidebarCollapsed });\n        }\n    }\n\n    updateNavbarsPositions() {\n        // eslint-disable-next-line react/no-find-dom-node\n        const containerElement = ReactDOM.findDOMNode(this.containerRef.current);\n        if (containerElement) {\n            const navbarElements = containerElement.querySelectorAll(\":scope .layout__navbar\");\n        \n            // Calculate and update style.top of each navbar\n            let totalNavbarsHeight = 0;\n            navbarElements.forEach((navbarElement) => {\n                const navbarBox = navbarElement.getBoundingClientRect();\n                navbarElement.style.top = `${totalNavbarsHeight}px`;\n                totalNavbarsHeight += navbarBox.height;\n            });\n        }\n    }\n\n    toggleSidebar() {\n        this.setState({\n            sidebarCollapsed: !this.state.sidebarCollapsed\n        });\n    }\n\n    setElementsVisibility(elements) {\n        this.setState(_.pick(elements, ['sidebarHidden', 'navbarHidden', 'footerHidden']));\n    }\n\n    render() {\n        const { children, favIcons } = this.props;\n        const sidebar = findChildByType(children, LayoutSidebar);\n        const navbars = findChildrenByType(children, LayoutNavbar);\n        const content = findChildByType(children, LayoutContent);\n        const otherChildren = _.differenceBy(\n            React.Children.toArray(children),\n            [\n                sidebar,\n                ...navbars,\n                content\n            ],\n            'type'\n        );\n        const layoutClass = classNames('layout', 'layout--animations-enabled', {\n            //'layout--only-navbar': this.state.sidebarHidden && !this.state.navbarHidden\n        });\n\n        return (\n            <PageConfigContext.Provider\n                value={{\n                    ...this.state,\n                    sidebarSlim: !!this.props.sidebarSlim && (\n                        this.state.screenSize === 'lg' ||\n                        this.state.screenSize === 'xl'\n                    ),\n\n                    toggleSidebar: this.toggleSidebar.bind(this),\n                    setElementsVisibility: this.setElementsVisibility.bind(this),\n                    changeMeta: (metaData) => { this.setState(metaData) }\n                }}\n            >\n                <Helmet>\n                    <meta charSet=\"utf-8\" />\n                    <title>{ config.siteTitle + (this.state.pageTitle ? ` - ${this.state.pageTitle}` : '') }</title>\n                    <link rel=\"canonical\" href={ config.siteCannonicalUrl } />\n                    <meta name=\"description\" content={ this.state.pageDescription } />\n                    {\n                        _.map(favIcons, (favIcon, index) => (\n                            <link { ...favIcon } key={ index } />\n                        ))\n                    }\n\n                </Helmet>\n                <ThemeClass>\n                    {(themeClass) => (\n                        <div className={ classNames(layoutClass, themeClass) } ref={ this.containerRef }>\n                            { \n                                !this.state.sidebarHidden && sidebar && React.cloneElement(sidebar, {\n                                    sidebarSlim: !!this.props.sidebarSlim && this.state.sidebarCollapsed && (\n                                        this.state.screenSize === 'lg' || this.state.screenSize === 'xl'\n                                    ),\n                                    sidebarCollapsed: !this.props.sidebarSlim && this.state.sidebarCollapsed\n                                })\n                            }\n\n                            <div className=\"layout__wrap\">\n                                { !this.state.navbarHidden && navbars }\n\n                                { content }\n                            </div>\n\n                            { otherChildren }\n                        </div>\n                    )}\n                </ThemeClass>\n            </PageConfigContext.Provider>\n        );\n    }\n}\n\nconst routedLayout = withRouter(Layout);\n\nexport { routedLayout as Layout };\n"]},"metadata":{},"sourceType":"module"}