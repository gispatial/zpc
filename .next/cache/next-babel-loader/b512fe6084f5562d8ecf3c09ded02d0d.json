{"ast":null,"code":"var _jsxFileName = \"/Users/crocslut/Desktop/Git/zpc/components/EmptyLayout/EmptyLayoutSection.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nvar EmptyLayoutSection = function EmptyLayoutSection(props) {\n  var sectionClass = classNames(props.className, 'fullscreen__section', {\n    'fullscreen__section--center': props.center\n  });\n  var maxWidth = _.isNumber(props.width) ? \"\".concat(props.width, \"px\") : props.width;\n  return React.createElement(\"div\", {\n    className: sectionClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.center ? React.createElement(\"div\", {\n    className: \"fullscrenn__section__child\",\n    style: {\n      maxWidth: maxWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.children) : props.children);\n};\n\nEmptyLayoutSection.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  center: PropTypes.bool,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\nEmptyLayoutSection.defaultProps = {\n  width: '420px'\n};\nexport { EmptyLayoutSection };","map":{"version":3,"sources":["/Users/crocslut/Desktop/Git/zpc/components/EmptyLayout/EmptyLayoutSection.js"],"names":["React","_","PropTypes","classNames","EmptyLayoutSection","props","sectionClass","className","center","maxWidth","isNumber","width","children","propTypes","string","node","isRequired","bool","oneOfType","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAClC,MAAMC,YAAY,GAAGH,UAAU,CAACE,KAAK,CAACE,SAAP,EAAkB,qBAAlB,EAAyC;AACpE,mCAA+BF,KAAK,CAACG;AAD+B,GAAzC,CAA/B;AAGA,MAAMC,QAAQ,GAAGR,CAAC,CAACS,QAAF,CAAWL,KAAK,CAACM,KAAjB,cAA8BN,KAAK,CAACM,KAApC,UAAgDN,KAAK,CAACM,KAAvE;AACA,SACI;AAAK,IAAA,SAAS,EAAGL,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,KAAK,CAACG,MAAN,GACI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAA4C,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAARA;AAAF,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMJ,KAAK,CAACO,QADZ,CADJ,GAGaP,KAAK,CAACO,QAL3B,CADJ;AAUH,CAfD;;AAgBAR,kBAAkB,CAACS,SAAnB,GAA+B;AAC3BN,EAAAA,SAAS,EAAEL,SAAS,CAACY,MADM;AAE3BF,EAAAA,QAAQ,EAAEV,SAAS,CAACa,IAAV,CAAeC,UAFE;AAG3BR,EAAAA,MAAM,EAAEN,SAAS,CAACe,IAHS;AAI3BN,EAAAA,KAAK,EAAET,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACiB,MAAX,EAAmBjB,SAAS,CAACY,MAA7B,CAApB;AAJoB,CAA/B;AAMAV,kBAAkB,CAACgB,YAAnB,GAAkC;AAC9BT,EAAAA,KAAK,EAAE;AADuB,CAAlC;AAIA,SAASP,kBAAT","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst EmptyLayoutSection = (props) => {\n    const sectionClass = classNames(props.className, 'fullscreen__section', {\n        'fullscreen__section--center': props.center\n    });\n    const maxWidth = _.isNumber(props.width) ?  `${props.width}px` : props.width;\n    return (\n        <div className={ sectionClass }>\n            {\n                props.center ? \n                    <div className=\"fullscrenn__section__child\" style={{ maxWidth }}>\n                        { props.children }\n                    </div> : props.children\n            }\n        </div>\n    )\n};\nEmptyLayoutSection.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    center: PropTypes.bool,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\nEmptyLayoutSection.defaultProps = {\n    width: '420px'\n}\n\nexport { EmptyLayoutSection };\n"]},"metadata":{},"sourceType":"module"}