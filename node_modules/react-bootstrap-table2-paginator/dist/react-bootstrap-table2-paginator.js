(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["ReactBootstrapTable2Paginator"] = factory(require("react"));
	else
		root["ReactBootstrapTable2Paginator"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 16);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

if (false) {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(17)();
}


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  PAGINATION_SIZE: 5,
  PAGE_START_INDEX: 1,
  With_FIRST_AND_LAST: true,
  SHOW_ALL_PAGE_BTNS: false,
  SHOW_TOTAL: false,
  PAGINATION_TOTAL: null,
  FIRST_PAGE_TEXT: '<<',
  PRE_PAGE_TEXT: '<',
  NEXT_PAGE_TEXT: '>',
  LAST_PAGE_TEXT: '>>',
  NEXT_PAGE_TITLE: 'next page',
  LAST_PAGE_TITLE: 'last page',
  PRE_PAGE_TITLE: 'previous page',
  FIRST_PAGE_TITLE: 'first page',
  SIZE_PER_PAGE_LIST: [10, 25, 30, 50],
  HIDE_SIZE_PER_PAGE: false,
  HIDE_PAGE_LIST_ONLY_ONE_PAGE: false
};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-mixed-operators: 0 */


exports.default = function (ExtendBase) {
  return function (_ExtendBase) {
    _inherits(PageResolver, _ExtendBase);

    function PageResolver() {
      _classCallCheck(this, PageResolver);

      return _possibleConstructorReturn(this, (PageResolver.__proto__ || Object.getPrototypeOf(PageResolver)).apply(this, arguments));
    }

    _createClass(PageResolver, [{
      key: 'backToPrevPage',
      value: function backToPrevPage() {
        var _props = this.props,
            currPage = _props.currPage,
            pageStartIndex = _props.pageStartIndex;

        return currPage - 1 < pageStartIndex ? pageStartIndex : currPage - 1;
      }
    }, {
      key: 'initialState',
      value: function initialState() {
        var totalPages = this.calculateTotalPage();
        var lastPage = this.calculateLastPage(totalPages);
        return { totalPages: totalPages, lastPage: lastPage };
      }
    }, {
      key: 'calculateTotalPage',
      value: function calculateTotalPage() {
        var sizePerPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.currSizePerPage;
        var dataSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props.dataSize;

        return Math.ceil(dataSize / sizePerPage);
      }
    }, {
      key: 'calculateLastPage',
      value: function calculateLastPage(totalPages) {
        var pageStartIndex = this.props.pageStartIndex;

        return pageStartIndex + totalPages - 1;
      }
    }, {
      key: 'calculateFromTo',
      value: function calculateFromTo() {
        var _props2 = this.props,
            dataSize = _props2.dataSize,
            currPage = _props2.currPage,
            currSizePerPage = _props2.currSizePerPage,
            pageStartIndex = _props2.pageStartIndex;

        var offset = Math.abs(_const2.default.PAGE_START_INDEX - pageStartIndex);

        var from = (currPage - pageStartIndex) * currSizePerPage;
        from = dataSize === 0 ? 0 : from + 1;
        var to = Math.min(currSizePerPage * (currPage + offset), dataSize);
        if (to > dataSize) to = dataSize;

        return [from, to];
      }
    }, {
      key: 'calculatePages',
      value: function calculatePages(totalPages, lastPage) {
        var _props3 = this.props,
            currPage = _props3.currPage,
            paginationSize = _props3.paginationSize,
            pageStartIndex = _props3.pageStartIndex,
            withFirstAndLast = _props3.withFirstAndLast,
            firstPageText = _props3.firstPageText,
            prePageText = _props3.prePageText,
            nextPageText = _props3.nextPageText,
            lastPageText = _props3.lastPageText,
            alwaysShowAllBtns = _props3.alwaysShowAllBtns;


        var pages = [];
        var endPage = totalPages;
        if (endPage <= 0) return [];

        var startPage = Math.max(currPage - Math.floor(paginationSize / 2), pageStartIndex);
        endPage = startPage + paginationSize - 1;

        if (endPage > lastPage) {
          endPage = lastPage;
          startPage = endPage - paginationSize + 1;
        }

        if (alwaysShowAllBtns) {
          if (withFirstAndLast) {
            pages = [firstPageText, prePageText];
          } else {
            pages = [prePageText];
          }
        }

        if (startPage !== pageStartIndex && totalPages > paginationSize && withFirstAndLast && pages.length === 0) {
          pages = [firstPageText, prePageText];
        } else if (totalPages > 1 && pages.length === 0) {
          pages = [prePageText];
        }

        for (var i = startPage; i <= endPage; i += 1) {
          if (i >= pageStartIndex) pages.push(i);
        }

        if (alwaysShowAllBtns || endPage <= lastPage && pages.length > 1) {
          pages.push(nextPageText);
        }
        if (endPage !== lastPage && withFirstAndLast || withFirstAndLast && alwaysShowAllBtns) {
          pages.push(lastPageText);
        }

        // if ((endPage <= lastPage && pages.length > 1) || alwaysShowAllBtns) {
        //   pages.push(nextPageText);
        // }
        // if (endPage !== lastPage && withFirstAndLast) {
        //   pages.push(lastPageText);
        // }

        return pages;
      }
    }, {
      key: 'calculatePageStatus',
      value: function calculatePageStatus() {
        var _this2 = this;

        var pages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var lastPage = arguments[1];
        var _props4 = this.props,
            currPage = _props4.currPage,
            pageStartIndex = _props4.pageStartIndex,
            firstPageText = _props4.firstPageText,
            prePageText = _props4.prePageText,
            nextPageText = _props4.nextPageText,
            lastPageText = _props4.lastPageText,
            alwaysShowAllBtns = _props4.alwaysShowAllBtns;

        var isStart = function isStart(page) {
          return currPage === pageStartIndex && (page === firstPageText || page === prePageText);
        };
        var isEnd = function isEnd(page) {
          return currPage === lastPage && (page === nextPageText || page === lastPageText);
        };

        return pages.filter(function (page) {
          if (alwaysShowAllBtns) {
            return true;
          }
          return !(isStart(page) || isEnd(page));
        }).map(function (page) {
          var title = void 0;
          var active = page === currPage;
          var disabled = isStart(page) || isEnd(page);

          if (page === nextPageText) {
            title = _this2.props.nextPageTitle;
          } else if (page === prePageText) {
            title = _this2.props.prePageTitle;
          } else if (page === firstPageText) {
            title = _this2.props.firstPageTitle;
          } else if (page === lastPageText) {
            title = _this2.props.lastPageTitle;
          } else {
            title = '' + page;
          }

          return { page: page, active: active, disabled: disabled, title: title };
        });
      }
    }, {
      key: 'calculateSizePerPageStatus',
      value: function calculateSizePerPageStatus() {
        var sizePerPageList = this.props.sizePerPageList;

        return sizePerPageList.map(function (_sizePerPage) {
          var pageText = typeof _sizePerPage.text !== 'undefined' ? _sizePerPage.text : _sizePerPage;
          var pageNumber = typeof _sizePerPage.value !== 'undefined' ? _sizePerPage.value : _sizePerPage;
          return {
            text: '' + pageText,
            page: pageNumber
          };
        });
      }
    }]);

    return PageResolver;
  }(ExtendBase);
};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(null, arg));
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
			return classNames;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _pageResolver2 = __webpack_require__(3);

var _pageResolver3 = _interopRequireDefault(_pageResolver2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */


exports.default = function (WrappedComponent) {
  return function (_pageResolver) {
    _inherits(PaginationHandler, _pageResolver);

    function PaginationHandler(props) {
      _classCallCheck(this, PaginationHandler);

      var _this = _possibleConstructorReturn(this, (PaginationHandler.__proto__ || Object.getPrototypeOf(PaginationHandler)).call(this, props));

      _this.handleChangePage = _this.handleChangePage.bind(_this);
      _this.handleChangeSizePerPage = _this.handleChangeSizePerPage.bind(_this);
      _this.state = _this.initialState();
      return _this;
    }

    _createClass(PaginationHandler, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var dataSize = nextProps.dataSize,
            currSizePerPage = nextProps.currSizePerPage;

        if (currSizePerPage !== this.props.currSizePerPage || dataSize !== this.props.dataSize) {
          var totalPages = this.calculateTotalPage(currSizePerPage, dataSize);
          var lastPage = this.calculateLastPage(totalPages);
          this.setState({ totalPages: totalPages, lastPage: lastPage });
        }
      }
    }, {
      key: 'handleChangeSizePerPage',
      value: function handleChangeSizePerPage(sizePerPage) {
        var _props = this.props,
            currSizePerPage = _props.currSizePerPage,
            onSizePerPageChange = _props.onSizePerPageChange;

        var selectedSize = typeof sizePerPage === 'string' ? parseInt(sizePerPage, 10) : sizePerPage;
        var currPage = this.props.currPage;

        if (selectedSize !== currSizePerPage) {
          var newTotalPages = this.calculateTotalPage(selectedSize);
          var newLastPage = this.calculateLastPage(newTotalPages);
          if (currPage > newLastPage) currPage = newLastPage;
          onSizePerPageChange(selectedSize, currPage);
        }
      }
    }, {
      key: 'handleChangePage',
      value: function handleChangePage(newPage) {
        var page = void 0;
        var _props2 = this.props,
            currPage = _props2.currPage,
            pageStartIndex = _props2.pageStartIndex,
            prePageText = _props2.prePageText,
            nextPageText = _props2.nextPageText,
            lastPageText = _props2.lastPageText,
            firstPageText = _props2.firstPageText,
            onPageChange = _props2.onPageChange;
        var lastPage = this.state.lastPage;


        if (newPage === prePageText) {
          page = this.backToPrevPage();
        } else if (newPage === nextPageText) {
          page = currPage + 1 > lastPage ? lastPage : currPage + 1;
        } else if (newPage === lastPageText) {
          page = lastPage;
        } else if (newPage === firstPageText) {
          page = pageStartIndex;
        } else {
          page = parseInt(newPage, 10);
        }
        if (page !== currPage) {
          onPageChange(page);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(WrappedComponent, _extends({}, this.props, {
          lastPage: this.state.lastPage,
          totalPages: this.state.totalPages,
          onPageChange: this.handleChangePage,
          onSizePerPageChange: this.handleChangeSizePerPage
        }));
      }
    }]);

    return PaginationHandler;
  }((0, _pageResolver3.default)(_react.Component));
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /* eslint react/prop-types: 0 */


exports.default = function (WrappedComponent) {
  return function (_ref) {
    var page = _ref.page,
        sizePerPage = _ref.sizePerPage,
        rest = _objectWithoutProperties(_ref, ['page', 'sizePerPage']);

    return _react2.default.createElement(WrappedComponent, _extends({}, rest, {
      currPage: page,
      currSizePerPage: sizePerPage
    }));
  };
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _events = __webpack_require__(21);

var _events2 = _interopRequireDefault(_events);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

var _page = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */
/* eslint react/require-default-props: 0 */
/* eslint no-lonely-if: 0 */


var StateContext = _react2.default.createContext();

var StateProvider = function (_React$Component) {
  _inherits(StateProvider, _React$Component);

  function StateProvider(props) {
    _classCallCheck(this, StateProvider);

    var _this = _possibleConstructorReturn(this, (StateProvider.__proto__ || Object.getPrototypeOf(StateProvider)).call(this, props));

    _initialiseProps.call(_this);

    _this.handleChangePage = _this.handleChangePage.bind(_this);
    _this.handleDataSizeChange = _this.handleDataSizeChange.bind(_this);
    _this.handleChangeSizePerPage = _this.handleChangeSizePerPage.bind(_this);

    var currPage = void 0;
    var currSizePerPage = void 0;
    var options = props.pagination.options;

    var sizePerPageList = options.sizePerPageList || _const2.default.SIZE_PER_PAGE_LIST;

    // initialize current page
    if (typeof options.page !== 'undefined') {
      currPage = options.page;
    } else if (typeof options.pageStartIndex !== 'undefined') {
      currPage = options.pageStartIndex;
    } else {
      currPage = _const2.default.PAGE_START_INDEX;
    }

    // initialize current sizePerPage
    if (typeof options.sizePerPage !== 'undefined') {
      currSizePerPage = options.sizePerPage;
    } else if (_typeof(sizePerPageList[0]) === 'object') {
      currSizePerPage = sizePerPageList[0].value;
    } else {
      currSizePerPage = sizePerPageList[0];
    }

    _this.currPage = currPage;
    _this.dataSize = options.totalSize;
    _this.currSizePerPage = currSizePerPage;
    _this.dataChangeListener = new _events2.default();
    _this.dataChangeListener.on('filterChanged', _this.handleDataSizeChange);
    return _this;
  }

  _createClass(StateProvider, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var custom = nextProps.pagination.options.custom;

      // user should align the page when the page is not fit to the data size when remote enable

      if (this.isRemotePagination() || custom) {
        if (typeof nextProps.pagination.options.page !== 'undefined') {
          this.currPage = nextProps.pagination.options.page;
        }
        if (typeof nextProps.pagination.options.sizePerPage !== 'undefined') {
          this.currSizePerPage = nextProps.pagination.options.sizePerPage;
        }
        if (typeof nextProps.pagination.options.totalSize !== 'undefined') {
          this.dataSize = nextProps.pagination.options.totalSize;
        }
      }
    }
  }, {
    key: 'handleDataSizeChange',
    value: function handleDataSizeChange(newDataSize) {
      var options = this.props.pagination.options;

      var pageStartIndex = typeof options.pageStartIndex === 'undefined' ? _const2.default.PAGE_START_INDEX : options.pageStartIndex;
      this.currPage = (0, _page.alignPage)(newDataSize, this.dataSize, this.currPage, this.currSizePerPage, pageStartIndex);
      this.dataSize = newDataSize;
      this.forceUpdate();
    }
  }, {
    key: 'handleChangePage',
    value: function handleChangePage(currPage) {
      var currSizePerPage = this.currSizePerPage;
      var options = this.props.pagination.options;


      if (options.onPageChange) {
        options.onPageChange(currPage, currSizePerPage);
      }

      this.currPage = currPage;

      if (this.isRemotePagination()) {
        this.getPaginationRemoteEmitter().emit('paginationChange', currPage, currSizePerPage);
        return;
      }
      this.forceUpdate();
    }
  }, {
    key: 'handleChangeSizePerPage',
    value: function handleChangeSizePerPage(currSizePerPage, currPage) {
      var options = this.props.pagination.options;


      if (options.onSizePerPageChange) {
        options.onSizePerPageChange(currSizePerPage, currPage);
      }

      this.currPage = currPage;
      this.currSizePerPage = currSizePerPage;

      if (this.isRemotePagination()) {
        this.getPaginationRemoteEmitter().emit('paginationChange', currPage, currSizePerPage);
        return;
      }
      this.forceUpdate();
    }
  }, {
    key: 'render',
    value: function render() {
      var paginationProps = this.getPaginationProps();
      var pagination = _extends({}, this.props.pagination, {
        options: paginationProps
      });

      return _react2.default.createElement(
        StateContext.Provider,
        {
          value: {
            paginationProps: paginationProps,
            paginationTableProps: {
              pagination: pagination,
              setPaginationRemoteEmitter: this.setPaginationRemoteEmitter,
              dataChangeListener: this.dataChangeListener
            }
          }
        },
        this.props.children
      );
    }
  }]);

  return StateProvider;
}(_react2.default.Component);

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this.getPaginationProps = function () {
    var _props = _this2.props,
        options = _props.pagination.options,
        bootstrap4 = _props.bootstrap4;
    var currPage = _this2.currPage,
        currSizePerPage = _this2.currSizePerPage,
        dataSize = _this2.dataSize;

    var withFirstAndLast = typeof options.withFirstAndLast === 'undefined' ? _const2.default.With_FIRST_AND_LAST : options.withFirstAndLast;
    var alwaysShowAllBtns = typeof options.alwaysShowAllBtns === 'undefined' ? _const2.default.SHOW_ALL_PAGE_BTNS : options.alwaysShowAllBtns;
    var hideSizePerPage = typeof options.hideSizePerPage === 'undefined' ? _const2.default.HIDE_SIZE_PER_PAGE : options.hideSizePerPage;
    var hidePageListOnlyOnePage = typeof options.hidePageListOnlyOnePage === 'undefined' ? _const2.default.HIDE_PAGE_LIST_ONLY_ONE_PAGE : options.hidePageListOnlyOnePage;
    var pageStartIndex = typeof options.pageStartIndex === 'undefined' ? _const2.default.PAGE_START_INDEX : options.pageStartIndex;
    return _extends({}, options, {
      bootstrap4: bootstrap4,
      page: currPage,
      sizePerPage: currSizePerPage,
      pageStartIndex: pageStartIndex,
      hidePageListOnlyOnePage: hidePageListOnlyOnePage,
      hideSizePerPage: hideSizePerPage,
      alwaysShowAllBtns: alwaysShowAllBtns,
      withFirstAndLast: withFirstAndLast,
      dataSize: dataSize,
      sizePerPageList: options.sizePerPageList || _const2.default.SIZE_PER_PAGE_LIST,
      paginationSize: options.paginationSize || _const2.default.PAGINATION_SIZE,
      showTotal: options.showTotal,
      pageListRenderer: options.pageListRenderer,
      pageButtonRenderer: options.pageButtonRenderer,
      sizePerPageRenderer: options.sizePerPageRenderer,
      paginationTotalRenderer: options.paginationTotalRenderer,
      sizePerPageOptionRenderer: options.sizePerPageOptionRenderer,
      firstPageText: options.firstPageText || _const2.default.FIRST_PAGE_TEXT,
      prePageText: options.prePageText || _const2.default.PRE_PAGE_TEXT,
      nextPageText: options.nextPageText || _const2.default.NEXT_PAGE_TEXT,
      lastPageText: options.lastPageText || _const2.default.LAST_PAGE_TEXT,
      prePageTitle: options.prePageTitle || _const2.default.PRE_PAGE_TITLE,
      nextPageTitle: options.nextPageTitle || _const2.default.NEXT_PAGE_TITLE,
      firstPageTitle: options.firstPageTitle || _const2.default.FIRST_PAGE_TITLE,
      lastPageTitle: options.lastPageTitle || _const2.default.LAST_PAGE_TITLE,
      onPageChange: _this2.handleChangePage,
      onSizePerPageChange: _this2.handleChangeSizePerPage
    });
  };

  this.setPaginationRemoteEmitter = function (remoteEmitter) {
    _this2.remoteEmitter = remoteEmitter;
  };

  this.getPaginationRemoteEmitter = function () {
    return _this2.remoteEmitter || _this2.props.remoteEmitter;
  };

  this.isRemotePagination = function () {
    var e = {};
    _this2.remoteEmitter.emit('isRemotePagination', e);
    return e.result;
  };
};

exports.default = function () {
  return {
    Provider: StateProvider,
    Consumer: StateContext.Consumer
  };
};

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getByCurrPage = exports.alignPage = undefined;

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getNormalizedPage = function getNormalizedPage(page, pageStartIndex) {
  var offset = Math.abs(1 - pageStartIndex);
  return page + offset;
};

var endIndex = function endIndex(page, sizePerPage, pageStartIndex) {
  return getNormalizedPage(page, pageStartIndex) * sizePerPage - 1;
};

var startIndex = function startIndex(end, sizePerPage) {
  return end - (sizePerPage - 1);
};

var alignPage = exports.alignPage = function alignPage(dataSize, prevDataSize, page, sizePerPage, pageStartIndex) {
  if (prevDataSize < dataSize) return page;
  if (page < pageStartIndex) return pageStartIndex;
  if (dataSize <= 0) return pageStartIndex;
  if (page >= Math.floor(dataSize / sizePerPage) + pageStartIndex && pageStartIndex === 1) {
    return Math.ceil(dataSize / sizePerPage);
  }
  if (page >= Math.floor(dataSize / sizePerPage) && pageStartIndex === 0) {
    var newPage = Math.ceil(dataSize / sizePerPage);
    return newPage - Math.abs(_const2.default.PAGE_START_INDEX - pageStartIndex);
  }
  return page;
};

var getByCurrPage = exports.getByCurrPage = function getByCurrPage(data, page, sizePerPage, pageStartIndex) {
  var dataSize = data.length;
  if (!dataSize) return [];

  var end = endIndex(page, sizePerPage, pageStartIndex);
  var start = startIndex(end, sizePerPage);

  var result = [];
  for (var i = start; i <= end; i += 1) {
    result.push(data[i]);
    if (i + 1 === dataSize) break;
  }
  return result;
};

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BootstrapContext = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// consider to have a common lib?1
var BootstrapContext = exports.BootstrapContext = _react2.default.createContext({
  bootstrap4: false
});

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SizePerPageDropdownWithAdapter = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _pageResolver2 = __webpack_require__(3);

var _pageResolver3 = _interopRequireDefault(_pageResolver2);

var _sizePerPageDropdown = __webpack_require__(11);

var _sizePerPageDropdown2 = _interopRequireDefault(_sizePerPageDropdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */


var sizePerPageDropdownAdapter = function sizePerPageDropdownAdapter(WrappedComponent) {
  return function (_pageResolver) {
    _inherits(SizePerPageDropdownAdapter, _pageResolver);

    function SizePerPageDropdownAdapter(props) {
      _classCallCheck(this, SizePerPageDropdownAdapter);

      var _this = _possibleConstructorReturn(this, (SizePerPageDropdownAdapter.__proto__ || Object.getPrototypeOf(SizePerPageDropdownAdapter)).call(this, props));

      _this.closeDropDown = _this.closeDropDown.bind(_this);
      _this.toggleDropDown = _this.toggleDropDown.bind(_this);
      _this.handleChangeSizePerPage = _this.handleChangeSizePerPage.bind(_this);
      _this.state = { dropdownOpen: false };
      return _this;
    }

    _createClass(SizePerPageDropdownAdapter, [{
      key: 'toggleDropDown',
      value: function toggleDropDown() {
        var dropdownOpen = !this.state.dropdownOpen;
        this.setState(function () {
          return { dropdownOpen: dropdownOpen };
        });
      }
    }, {
      key: 'closeDropDown',
      value: function closeDropDown() {
        this.setState(function () {
          return { dropdownOpen: false };
        });
      }
    }, {
      key: 'handleChangeSizePerPage',
      value: function handleChangeSizePerPage(sizePerPage) {
        this.props.onSizePerPageChange(sizePerPage);
        this.closeDropDown();
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props,
            sizePerPageList = _props.sizePerPageList,
            currSizePerPage = _props.currSizePerPage,
            hideSizePerPage = _props.hideSizePerPage,
            sizePerPageRenderer = _props.sizePerPageRenderer,
            sizePerPageOptionRenderer = _props.sizePerPageOptionRenderer;
        var open = this.state.dropdownOpen;


        if (sizePerPageList.length > 1 && !hideSizePerPage) {
          if (sizePerPageRenderer) {
            return sizePerPageRenderer({
              options: this.calculateSizePerPageStatus(),
              currSizePerPage: '' + currSizePerPage,
              onSizePerPageChange: this.handleChangeSizePerPage
            });
          }
          return _react2.default.createElement(WrappedComponent, _extends({}, this.props, {
            currSizePerPage: '' + currSizePerPage,
            options: this.calculateSizePerPageStatus(),
            optionRenderer: sizePerPageOptionRenderer,
            onSizePerPageChange: this.handleChangeSizePerPage,
            onClick: this.toggleDropDown,
            onBlur: this.closeDropDown,
            open: open
          }));
        }
        return null;
      }
    }]);

    return SizePerPageDropdownAdapter;
  }((0, _pageResolver3.default)(_react.Component));
};

var SizePerPageDropdownWithAdapter = exports.SizePerPageDropdownWithAdapter = sizePerPageDropdownAdapter(_sizePerPageDropdown2.default);
exports.default = sizePerPageDropdownAdapter;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _bootstrap = __webpack_require__(9);

var _sizePerPageOption = __webpack_require__(24);

var _sizePerPageOption2 = _interopRequireDefault(_sizePerPageOption);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var sizePerPageDefaultClass = 'react-bs-table-sizePerPage-dropdown';

var SizePerPageDropDown = function SizePerPageDropDown(props) {
  var open = props.open,
      hidden = props.hidden,
      onClick = props.onClick,
      onBlur = props.onBlur,
      options = props.options,
      className = props.className,
      variation = props.variation,
      btnContextual = props.btnContextual,
      optionRenderer = props.optionRenderer,
      currSizePerPage = props.currSizePerPage,
      onSizePerPageChange = props.onSizePerPageChange;


  var dropDownStyle = { visibility: hidden ? 'hidden' : 'visible' };
  var openClass = open ? 'open show' : '';
  var dropdownClasses = (0, _classnames2.default)(openClass, sizePerPageDefaultClass, variation, className);

  return _react2.default.createElement(
    _bootstrap.BootstrapContext.Consumer,
    null,
    function (_ref) {
      var bootstrap4 = _ref.bootstrap4;
      return _react2.default.createElement(
        'span',
        {
          style: dropDownStyle,
          className: dropdownClasses
        },
        _react2.default.createElement(
          'button',
          {
            id: 'pageDropDown',
            className: 'btn ' + btnContextual + ' dropdown-toggle',
            'data-toggle': 'dropdown',
            'aria-expanded': open,
            onClick: onClick,
            onBlur: onBlur
          },
          currSizePerPage,
          ' ',
          bootstrap4 ? null : _react2.default.createElement(
            'span',
            null,
            _react2.default.createElement('span', { className: 'caret' })
          )
        ),
        _react2.default.createElement(
          'ul',
          {
            className: 'dropdown-menu ' + openClass,
            role: 'menu',
            'aria-labelledby': 'pageDropDown'
          },
          options.map(function (option) {
            if (optionRenderer) {
              return optionRenderer(_extends({}, option, {
                onSizePerPageChange: onSizePerPageChange
              }));
            }
            return _react2.default.createElement(_sizePerPageOption2.default, _extends({}, option, {
              key: option.text,
              bootstrap4: bootstrap4,
              onSizePerPageChange: onSizePerPageChange
            }));
          })
        )
      );
    }
  );
};

SizePerPageDropDown.propTypes = {
  currSizePerPage: _propTypes2.default.string.isRequired,
  options: _propTypes2.default.array.isRequired,
  onClick: _propTypes2.default.func.isRequired,
  onBlur: _propTypes2.default.func.isRequired,
  onSizePerPageChange: _propTypes2.default.func.isRequired,
  open: _propTypes2.default.bool,
  hidden: _propTypes2.default.bool,
  btnContextual: _propTypes2.default.string,
  variation: _propTypes2.default.oneOf(['dropdown', 'dropup']),
  className: _propTypes2.default.string,
  optionRenderer: _propTypes2.default.func
};
SizePerPageDropDown.defaultProps = {
  open: false,
  hidden: false,
  btnContextual: 'btn-default btn-secondary',
  variation: 'dropdown',
  className: '',
  optionRenderer: null
};

exports.default = SizePerPageDropDown;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PaginationListWithAdapter = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _pageResolver2 = __webpack_require__(3);

var _pageResolver3 = _interopRequireDefault(_pageResolver2);

var _paginationList = __webpack_require__(13);

var _paginationList2 = _interopRequireDefault(_paginationList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */


var paginationListAdapter = function paginationListAdapter(WrappedComponent) {
  return function (_pageResolver) {
    _inherits(PaginationListAdapter, _pageResolver);

    function PaginationListAdapter() {
      _classCallCheck(this, PaginationListAdapter);

      return _possibleConstructorReturn(this, (PaginationListAdapter.__proto__ || Object.getPrototypeOf(PaginationListAdapter)).apply(this, arguments));
    }

    _createClass(PaginationListAdapter, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            lastPage = _props.lastPage,
            totalPages = _props.totalPages,
            pageButtonRenderer = _props.pageButtonRenderer,
            onPageChange = _props.onPageChange;

        var pages = this.calculatePageStatus(this.calculatePages(totalPages, lastPage), lastPage);
        return _react2.default.createElement(WrappedComponent, {
          pageButtonRenderer: pageButtonRenderer,
          onPageChange: onPageChange,
          pages: pages
        });
      }
    }]);

    return PaginationListAdapter;
  }((0, _pageResolver3.default)(_react.Component));
};

var PaginationListWithAdapter = exports.PaginationListWithAdapter = paginationListAdapter(_paginationList2.default);
exports.default = paginationListAdapter;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _pageButton = __webpack_require__(25);

var _pageButton2 = _interopRequireDefault(_pageButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PaginatonList = function PaginatonList(props) {
  return _react2.default.createElement(
    'ul',
    { className: 'pagination react-bootstrap-table-page-btns-ul' },
    props.pages.map(function (pageProps) {
      if (props.pageButtonRenderer) {
        return props.pageButtonRenderer(_extends({}, pageProps, {
          onPageChange: props.onPageChange
        }));
      }
      return _react2.default.createElement(_pageButton2.default, _extends({
        key: pageProps.page
      }, pageProps, {
        onPageChange: props.onPageChange
      }));
    })
  );
};

PaginatonList.propTypes = {
  pages: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    page: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.number, _propTypes2.default.string]),
    active: _propTypes2.default.bool,
    disable: _propTypes2.default.bool,
    title: _propTypes2.default.string
  })).isRequired,
  onPageChange: _propTypes2.default.func.isRequired,
  pageButtonRenderer: _propTypes2.default.func
};

PaginatonList.defaultProps = {
  pageButtonRenderer: null
};

exports.default = PaginatonList;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PaginationTotalWithAdapter = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _pageResolver2 = __webpack_require__(3);

var _pageResolver3 = _interopRequireDefault(_pageResolver2);

var _paginationTotal = __webpack_require__(15);

var _paginationTotal2 = _interopRequireDefault(_paginationTotal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */


var paginationTotalAdapter = function paginationTotalAdapter(WrappedComponent) {
  return function (_pageResolver) {
    _inherits(PaginationTotalAdapter, _pageResolver);

    function PaginationTotalAdapter() {
      _classCallCheck(this, PaginationTotalAdapter);

      return _possibleConstructorReturn(this, (PaginationTotalAdapter.__proto__ || Object.getPrototypeOf(PaginationTotalAdapter)).apply(this, arguments));
    }

    _createClass(PaginationTotalAdapter, [{
      key: 'render',
      value: function render() {
        var _calculateFromTo = this.calculateFromTo(),
            _calculateFromTo2 = _slicedToArray(_calculateFromTo, 2),
            from = _calculateFromTo2[0],
            to = _calculateFromTo2[1];

        return _react2.default.createElement(WrappedComponent, {
          from: from,
          to: to,
          dataSize: this.props.dataSize,
          paginationTotalRenderer: this.props.paginationTotalRenderer
        });
      }
    }]);

    return PaginationTotalAdapter;
  }((0, _pageResolver3.default)(_react.Component));
};

var PaginationTotalWithAdapter = exports.PaginationTotalWithAdapter = paginationTotalAdapter(_paginationTotal2.default);
exports.default = paginationTotalAdapter;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PaginationTotal = function PaginationTotal(props) {
  if (props.paginationTotalRenderer) {
    return props.paginationTotalRenderer(props.from, props.to, props.dataSize);
  }
  return _react2.default.createElement(
    'span',
    { className: 'react-bootstrap-table-pagination-total' },
    '\xA0Showing rows ',
    props.from,
    ' to\xA0',
    props.to,
    ' of\xA0',
    props.dataSize
  );
};

PaginationTotal.propTypes = {
  from: _propTypes2.default.number.isRequired,
  to: _propTypes2.default.number.isRequired,
  dataSize: _propTypes2.default.number.isRequired,
  paginationTotalRenderer: _propTypes2.default.func
};

PaginationTotal.defaultProps = {
  paginationTotalRenderer: undefined
};

exports.default = PaginationTotal;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PaginationTotalStandalone = exports.SizePerPageDropdownStandalone = exports.PaginationListStandalone = exports.PaginationProvider = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _stateContext = __webpack_require__(7);

var _stateContext2 = _interopRequireDefault(_stateContext);

var _dataContext = __webpack_require__(22);

var _dataContext2 = _interopRequireDefault(_dataContext);

var _paginationListStandalone = __webpack_require__(26);

var _paginationListStandalone2 = _interopRequireDefault(_paginationListStandalone);

var _sizePerPageDropdownStandalone = __webpack_require__(27);

var _sizePerPageDropdownStandalone2 = _interopRequireDefault(_sizePerPageDropdownStandalone);

var _paginationTotalStandalone = __webpack_require__(28);

var _paginationTotalStandalone2 = _interopRequireDefault(_paginationTotalStandalone);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return {
    createContext: _dataContext2.default,
    options: options
  };
};

var _createBaseContext = (0, _stateContext2.default)(),
    Provider = _createBaseContext.Provider,
    Consumer = _createBaseContext.Consumer;

var CustomizableProvider = function CustomizableProvider(props) {
  return _react2.default.createElement(
    Provider,
    props,
    _react2.default.createElement(
      Consumer,
      null,
      function (paginationProps) {
        return props.children(paginationProps);
      }
    )
  );
};

CustomizableProvider.propTypes = {
  children: _propTypes2.default.func.isRequired
};

var PaginationProvider = exports.PaginationProvider = CustomizableProvider;
exports.PaginationListStandalone = _paginationListStandalone2.default;
exports.SizePerPageDropdownStandalone = _sizePerPageDropdownStandalone2.default;
exports.PaginationTotalStandalone = _paginationTotalStandalone2.default;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var emptyFunction = __webpack_require__(18);
var invariant = __webpack_require__(19);
var ReactPropTypesSecret = __webpack_require__(20);

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    invariant(
      false,
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (false) {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 21 */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

var _bootstrap = __webpack_require__(9);

var _pagination = __webpack_require__(23);

var _pagination2 = _interopRequireDefault(_pagination);

var _page = __webpack_require__(8);

var _stateContext = __webpack_require__(7);

var _stateContext2 = _interopRequireDefault(_stateContext);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */
/* eslint react/require-default-props: 0 */
/* eslint no-lonely-if: 0 */


var _createBaseContext = (0, _stateContext2.default)(),
    Provider = _createBaseContext.Provider;

var PaginationDataContext = _react2.default.createContext();

var PaginationDataProvider = function (_Provider) {
  _inherits(PaginationDataProvider, _Provider);

  function PaginationDataProvider() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, PaginationDataProvider);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PaginationDataProvider.__proto__ || Object.getPrototypeOf(PaginationDataProvider)).call.apply(_ref, [this].concat(args))), _this), _this.isRemotePagination = function () {
      return _this.props.isRemotePagination();
    }, _this.renderDefaultPagination = function () {
      if (!_this.props.pagination.options.custom) {
        var _this$getPaginationPr = _this.getPaginationProps(),
            bootstrap4 = _this$getPaginationPr.bootstrap4,
            currPage = _this$getPaginationPr.page,
            currSizePerPage = _this$getPaginationPr.sizePerPage,
            dataSize = _this$getPaginationPr.dataSize,
            rest = _objectWithoutProperties(_this$getPaginationPr, ['bootstrap4', 'page', 'sizePerPage', 'dataSize']);

        return _react2.default.createElement(
          _bootstrap.BootstrapContext.Provider,
          { value: { bootstrap4: bootstrap4 } },
          _react2.default.createElement(_pagination2.default, _extends({}, rest, {
            key: 'pagination',
            dataSize: dataSize || _this.props.data.length,
            currPage: currPage,
            currSizePerPage: currSizePerPage
          }))
        );
      }
      return null;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(PaginationDataProvider, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      _get(PaginationDataProvider.prototype.__proto__ || Object.getPrototypeOf(PaginationDataProvider.prototype), 'componentWillReceiveProps', this).call(this, nextProps);
      var currSizePerPage = this.currSizePerPage;
      var _nextProps$pagination = nextProps.pagination.options,
          custom = _nextProps$pagination.custom,
          onPageChange = _nextProps$pagination.onPageChange;


      var pageStartIndex = typeof nextProps.pagination.options.pageStartIndex !== 'undefined' ? nextProps.pagination.options.pageStartIndex : _const2.default.PAGE_START_INDEX;

      // user should align the page when the page is not fit to the data size when remote enable
      if (!this.isRemotePagination() && !custom) {
        var newPage = (0, _page.alignPage)(nextProps.data.length, this.props.data.length, this.currPage, currSizePerPage, pageStartIndex);

        if (this.currPage !== newPage) {
          if (onPageChange) {
            onPageChange(newPage, currSizePerPage);
          }
          this.currPage = newPage;
        }
      }
      if (nextProps.onDataSizeChange && nextProps.data.length !== this.props.data.length) {
        nextProps.onDataSizeChange({ dataSize: nextProps.data.length });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var data = this.props.data;
      var options = this.props.pagination.options;
      var currPage = this.currPage,
          currSizePerPage = this.currSizePerPage;

      var pageStartIndex = typeof options.pageStartIndex === 'undefined' ? _const2.default.PAGE_START_INDEX : options.pageStartIndex;

      data = this.isRemotePagination() ? data : (0, _page.getByCurrPage)(data, currPage, currSizePerPage, pageStartIndex);

      return _react2.default.createElement(
        PaginationDataContext.Provider,
        { value: { data: data, setRemoteEmitter: this.setRemoteEmitter } },
        this.props.children,
        this.renderDefaultPagination()
      );
    }
  }]);

  return PaginationDataProvider;
}(Provider);

PaginationDataProvider.propTypes = {
  data: _propTypes2.default.array.isRequired,
  remoteEmitter: _propTypes2.default.object.isRequired,
  isRemotePagination: _propTypes2.default.func.isRequired
};

exports.default = function () {
  return {
    Provider: PaginationDataProvider,
    Consumer: PaginationDataContext.Consumer
  };
};

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _pageResolver2 = __webpack_require__(3);

var _pageResolver3 = _interopRequireDefault(_pageResolver2);

var _paginationHandler = __webpack_require__(5);

var _paginationHandler2 = _interopRequireDefault(_paginationHandler);

var _sizePerPageDropdownAdapter = __webpack_require__(10);

var _paginationListAdapter = __webpack_require__(12);

var _paginationTotalAdapter = __webpack_require__(14);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/require-default-props: 0 */
/* eslint arrow-body-style: 0 */


var Pagination = function (_pageResolver) {
  _inherits(Pagination, _pageResolver);

  function Pagination() {
    _classCallCheck(this, Pagination);

    return _possibleConstructorReturn(this, (Pagination.__proto__ || Object.getPrototypeOf(Pagination)).apply(this, arguments));
  }

  _createClass(Pagination, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          currPage = _props.currPage,
          pageStartIndex = _props.pageStartIndex,
          showTotal = _props.showTotal,
          dataSize = _props.dataSize,
          pageListRenderer = _props.pageListRenderer,
          pageButtonRenderer = _props.pageButtonRenderer,
          paginationTotalRenderer = _props.paginationTotalRenderer,
          hidePageListOnlyOnePage = _props.hidePageListOnlyOnePage,
          totalPages = _props.totalPages,
          lastPage = _props.lastPage,
          onPageChange = _props.onPageChange,
          sizePerPageList = _props.sizePerPageList,
          currSizePerPage = _props.currSizePerPage,
          hideSizePerPage = _props.hideSizePerPage,
          sizePerPageRenderer = _props.sizePerPageRenderer,
          sizePerPageOptionRenderer = _props.sizePerPageOptionRenderer,
          onSizePerPageChange = _props.onSizePerPageChange,
          rest = _objectWithoutProperties(_props, ['currPage', 'pageStartIndex', 'showTotal', 'dataSize', 'pageListRenderer', 'pageButtonRenderer', 'paginationTotalRenderer', 'hidePageListOnlyOnePage', 'totalPages', 'lastPage', 'onPageChange', 'sizePerPageList', 'currSizePerPage', 'hideSizePerPage', 'sizePerPageRenderer', 'sizePerPageOptionRenderer', 'onSizePerPageChange']);

      var pages = this.calculatePageStatus(this.calculatePages(totalPages, lastPage), lastPage);
      var pageListClass = (0, _classnames2.default)('react-bootstrap-table-pagination-list', 'col-md-6 col-xs-6 col-sm-6 col-lg-6', {
        'react-bootstrap-table-pagination-list-hidden': hidePageListOnlyOnePage && totalPages === 1
      });
      return _react2.default.createElement(
        'div',
        { className: 'row react-bootstrap-table-pagination' },
        _react2.default.createElement(
          'div',
          { className: 'col-md-6 col-xs-6 col-sm-6 col-lg-6' },
          _react2.default.createElement(_sizePerPageDropdownAdapter.SizePerPageDropdownWithAdapter, {
            sizePerPageList: sizePerPageList,
            currSizePerPage: currSizePerPage,
            hideSizePerPage: hideSizePerPage,
            sizePerPageRenderer: sizePerPageRenderer,
            sizePerPageOptionRenderer: sizePerPageOptionRenderer,
            onSizePerPageChange: onSizePerPageChange
          }),
          showTotal ? _react2.default.createElement(_paginationTotalAdapter.PaginationTotalWithAdapter, {
            currPage: currPage,
            currSizePerPage: currSizePerPage,
            pageStartIndex: pageStartIndex,
            dataSize: dataSize,
            paginationTotalRenderer: paginationTotalRenderer
          }) : null
        ),
        pageListRenderer ? pageListRenderer({
          pages: pages,
          onPageChange: onPageChange
        }) : _react2.default.createElement(
          'div',
          { className: pageListClass },
          _react2.default.createElement(_paginationListAdapter.PaginationListWithAdapter, _extends({}, rest, {
            currPage: currPage,
            currSizePerPage: currSizePerPage,
            pageStartIndex: pageStartIndex,
            lastPage: lastPage,
            totalPages: totalPages,
            pageButtonRenderer: pageButtonRenderer,
            onPageChange: onPageChange
          }))
        )
      );
    }
  }]);

  return Pagination;
}((0, _pageResolver3.default)(_react.Component));

Pagination.propTypes = {
  dataSize: _propTypes2.default.number.isRequired,
  sizePerPageList: _propTypes2.default.array.isRequired,
  currPage: _propTypes2.default.number.isRequired,
  currSizePerPage: _propTypes2.default.number.isRequired,
  onPageChange: _propTypes2.default.func.isRequired,
  onSizePerPageChange: _propTypes2.default.func.isRequired,
  pageStartIndex: _propTypes2.default.number,
  paginationSize: _propTypes2.default.number,
  showTotal: _propTypes2.default.bool,
  pageListRenderer: _propTypes2.default.func,
  pageButtonRenderer: _propTypes2.default.func,
  sizePerPageRenderer: _propTypes2.default.func,
  paginationTotalRenderer: _propTypes2.default.func,
  sizePerPageOptionRenderer: _propTypes2.default.func,
  firstPageText: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
  prePageText: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
  nextPageText: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
  lastPageText: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
  nextPageTitle: _propTypes2.default.string,
  prePageTitle: _propTypes2.default.string,
  firstPageTitle: _propTypes2.default.string,
  lastPageTitle: _propTypes2.default.string,
  withFirstAndLast: _propTypes2.default.bool,
  alwaysShowAllBtns: _propTypes2.default.bool,
  hideSizePerPage: _propTypes2.default.bool,
  hidePageListOnlyOnePage: _propTypes2.default.bool
};

Pagination.defaultProps = {
  pageStartIndex: _const2.default.PAGE_START_INDEX,
  paginationSize: _const2.default.PAGINATION_SIZE,
  withFirstAndLast: _const2.default.With_FIRST_AND_LAST,
  alwaysShowAllBtns: _const2.default.SHOW_ALL_PAGE_BTNS,
  showTotal: _const2.default.SHOW_TOTAL,
  pageListRenderer: null,
  pageButtonRenderer: null,
  sizePerPageRenderer: null,
  paginationTotalRenderer: _const2.default.PAGINATION_TOTAL,
  sizePerPageOptionRenderer: null,
  firstPageText: _const2.default.FIRST_PAGE_TEXT,
  prePageText: _const2.default.PRE_PAGE_TEXT,
  nextPageText: _const2.default.NEXT_PAGE_TEXT,
  lastPageText: _const2.default.LAST_PAGE_TEXT,
  sizePerPageList: _const2.default.SIZE_PER_PAGE_LIST,
  nextPageTitle: _const2.default.NEXT_PAGE_TITLE,
  prePageTitle: _const2.default.PRE_PAGE_TITLE,
  firstPageTitle: _const2.default.FIRST_PAGE_TITLE,
  lastPageTitle: _const2.default.LAST_PAGE_TITLE,
  hideSizePerPage: _const2.default.HIDE_SIZE_PER_PAGE,
  hidePageListOnlyOnePage: _const2.default.HIDE_PAGE_LIST_ONLY_ONE_PAGE
};

exports.default = (0, _paginationHandler2.default)(Pagination);

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint jsx-a11y/href-no-hash: 0 */
var SizePerPageOption = function SizePerPageOption(_ref) {
  var text = _ref.text,
      page = _ref.page,
      onSizePerPageChange = _ref.onSizePerPageChange,
      bootstrap4 = _ref.bootstrap4;
  return bootstrap4 ? _react2.default.createElement(
    'a',
    {
      href: '#',
      tabIndex: '-1',
      role: 'menuitem',
      className: 'dropdown-item',
      'data-page': page,
      onMouseDown: function onMouseDown(e) {
        e.preventDefault();
        onSizePerPageChange(page);
      }
    },
    text
  ) : _react2.default.createElement(
    'li',
    {
      key: text,
      role: 'presentation',
      className: 'dropdown-item'
    },
    _react2.default.createElement(
      'a',
      {
        href: '#',
        tabIndex: '-1',
        role: 'menuitem',
        'data-page': page,
        onMouseDown: function onMouseDown(e) {
          e.preventDefault();
          onSizePerPageChange(page);
        }
      },
      text
    )
  );
};

SizePerPageOption.propTypes = {
  text: _propTypes2.default.string.isRequired,
  page: _propTypes2.default.number.isRequired,
  onSizePerPageChange: _propTypes2.default.func.isRequired,
  bootstrap4: _propTypes2.default.bool
};

SizePerPageOption.defaultProps = {
  bootstrap4: false
};

exports.default = SizePerPageOption;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/require-default-props: 0 */
/* eslint jsx-a11y/href-no-hash: 0 */


var PageButton = function (_Component) {
  _inherits(PageButton, _Component);

  function PageButton(props) {
    _classCallCheck(this, PageButton);

    var _this = _possibleConstructorReturn(this, (PageButton.__proto__ || Object.getPrototypeOf(PageButton)).call(this, props));

    _this.handleClick = _this.handleClick.bind(_this);
    return _this;
  }

  _createClass(PageButton, [{
    key: 'handleClick',
    value: function handleClick(e) {
      e.preventDefault();
      this.props.onPageChange(this.props.page);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          page = _props.page,
          title = _props.title,
          active = _props.active,
          disabled = _props.disabled,
          className = _props.className;

      var classes = (0, _classnames2.default)({
        active: active,
        disabled: disabled,
        'page-item': true
      }, className);

      return _react2.default.createElement(
        'li',
        { className: classes, title: title },
        _react2.default.createElement(
          'a',
          { href: '#', onClick: this.handleClick, className: 'page-link' },
          page
        )
      );
    }
  }]);

  return PageButton;
}(_react.Component);

PageButton.propTypes = {
  onPageChange: _propTypes2.default.func.isRequired,
  page: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.number, _propTypes2.default.string]).isRequired,
  active: _propTypes2.default.bool.isRequired,
  disabled: _propTypes2.default.bool.isRequired,
  className: _propTypes2.default.string,
  title: _propTypes2.default.string
};

exports.default = PageButton;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _paginationList = __webpack_require__(13);

var _paginationList2 = _interopRequireDefault(_paginationList);

var _standaloneAdapter = __webpack_require__(6);

var _standaloneAdapter2 = _interopRequireDefault(_standaloneAdapter);

var _paginationHandler = __webpack_require__(5);

var _paginationHandler2 = _interopRequireDefault(_paginationHandler);

var _paginationListAdapter = __webpack_require__(12);

var _paginationListAdapter2 = _interopRequireDefault(_paginationListAdapter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PaginationListStandalone = function PaginationListStandalone(props) {
  return _react2.default.createElement(_paginationList2.default, props);
};

exports.default = (0, _standaloneAdapter2.default)((0, _paginationHandler2.default)((0, _paginationListAdapter2.default)(PaginationListStandalone)));

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _sizePerPageDropdown = __webpack_require__(11);

var _sizePerPageDropdown2 = _interopRequireDefault(_sizePerPageDropdown);

var _standaloneAdapter = __webpack_require__(6);

var _standaloneAdapter2 = _interopRequireDefault(_standaloneAdapter);

var _paginationHandler = __webpack_require__(5);

var _paginationHandler2 = _interopRequireDefault(_paginationHandler);

var _sizePerPageDropdownAdapter = __webpack_require__(10);

var _sizePerPageDropdownAdapter2 = _interopRequireDefault(_sizePerPageDropdownAdapter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SizePerPageDropdownStandalone = function SizePerPageDropdownStandalone(props) {
  return _react2.default.createElement(_sizePerPageDropdown2.default, props);
};

exports.default = (0, _standaloneAdapter2.default)((0, _paginationHandler2.default)((0, _sizePerPageDropdownAdapter2.default)(SizePerPageDropdownStandalone)));

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _paginationTotal = __webpack_require__(15);

var _paginationTotal2 = _interopRequireDefault(_paginationTotal);

var _standaloneAdapter = __webpack_require__(6);

var _standaloneAdapter2 = _interopRequireDefault(_standaloneAdapter);

var _paginationTotalAdapter = __webpack_require__(14);

var _paginationTotalAdapter2 = _interopRequireDefault(_paginationTotalAdapter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PaginationTotalStandalone = function PaginationTotalStandalone(props) {
  return _react2.default.createElement(_paginationTotal2.default, props);
};

exports.default = (0, _standaloneAdapter2.default)((0, _paginationTotalAdapter2.default)(PaginationTotalStandalone));

/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCAzZDVhNjg1ZmJmYmQ0N2ZkZDFiNSIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvY29uc3QuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2UtcmVzb2x2ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24taGFuZGxlci5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc3RhbmRhbG9uZS1hZGFwdGVyLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9zdGF0ZS1jb250ZXh0LmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdlLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9ib290c3RyYXAuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3NpemUtcGVyLXBhZ2UtZHJvcGRvd24tYWRhcHRlci5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc2l6ZS1wZXItcGFnZS1kcm9wZG93bi5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnaW5hdGlvbi1saXN0LWFkYXB0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24tbGlzdC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnaW5hdGlvbi10b3RhbC1hZGFwdGVyLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdpbmF0aW9uLXRvdGFsLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlGdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvaW52YXJpYW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZXZlbnRzL2V2ZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvZGF0YS1jb250ZXh0LmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdpbmF0aW9uLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9zaXplLXBlci1wYWdlLW9wdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnZS1idXR0b24uanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24tbGlzdC1zdGFuZGFsb25lLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9zaXplLXBlci1wYWdlLWRyb3Bkb3duLXN0YW5kYWxvbmUuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24tdG90YWwtc3RhbmRhbG9uZS5qcyJdLCJuYW1lcyI6WyJQQUdJTkFUSU9OX1NJWkUiLCJQQUdFX1NUQVJUX0lOREVYIiwiV2l0aF9GSVJTVF9BTkRfTEFTVCIsIlNIT1dfQUxMX1BBR0VfQlROUyIsIlNIT1dfVE9UQUwiLCJQQUdJTkFUSU9OX1RPVEFMIiwiRklSU1RfUEFHRV9URVhUIiwiUFJFX1BBR0VfVEVYVCIsIk5FWFRfUEFHRV9URVhUIiwiTEFTVF9QQUdFX1RFWFQiLCJORVhUX1BBR0VfVElUTEUiLCJMQVNUX1BBR0VfVElUTEUiLCJQUkVfUEFHRV9USVRMRSIsIkZJUlNUX1BBR0VfVElUTEUiLCJTSVpFX1BFUl9QQUdFX0xJU1QiLCJISURFX1NJWkVfUEVSX1BBR0UiLCJISURFX1BBR0VfTElTVF9PTkxZX09ORV9QQUdFIiwicHJvcHMiLCJjdXJyUGFnZSIsInBhZ2VTdGFydEluZGV4IiwidG90YWxQYWdlcyIsImNhbGN1bGF0ZVRvdGFsUGFnZSIsImxhc3RQYWdlIiwiY2FsY3VsYXRlTGFzdFBhZ2UiLCJzaXplUGVyUGFnZSIsImN1cnJTaXplUGVyUGFnZSIsImRhdGFTaXplIiwiTWF0aCIsImNlaWwiLCJvZmZzZXQiLCJhYnMiLCJmcm9tIiwidG8iLCJtaW4iLCJwYWdpbmF0aW9uU2l6ZSIsIndpdGhGaXJzdEFuZExhc3QiLCJmaXJzdFBhZ2VUZXh0IiwicHJlUGFnZVRleHQiLCJuZXh0UGFnZVRleHQiLCJsYXN0UGFnZVRleHQiLCJhbHdheXNTaG93QWxsQnRucyIsInBhZ2VzIiwiZW5kUGFnZSIsInN0YXJ0UGFnZSIsIm1heCIsImZsb29yIiwibGVuZ3RoIiwiaSIsInB1c2giLCJpc1N0YXJ0IiwicGFnZSIsImlzRW5kIiwiZmlsdGVyIiwibWFwIiwidGl0bGUiLCJhY3RpdmUiLCJkaXNhYmxlZCIsIm5leHRQYWdlVGl0bGUiLCJwcmVQYWdlVGl0bGUiLCJmaXJzdFBhZ2VUaXRsZSIsImxhc3RQYWdlVGl0bGUiLCJzaXplUGVyUGFnZUxpc3QiLCJfc2l6ZVBlclBhZ2UiLCJwYWdlVGV4dCIsInRleHQiLCJwYWdlTnVtYmVyIiwidmFsdWUiLCJFeHRlbmRCYXNlIiwiaGFuZGxlQ2hhbmdlUGFnZSIsImJpbmQiLCJoYW5kbGVDaGFuZ2VTaXplUGVyUGFnZSIsInN0YXRlIiwiaW5pdGlhbFN0YXRlIiwibmV4dFByb3BzIiwic2V0U3RhdGUiLCJvblNpemVQZXJQYWdlQ2hhbmdlIiwic2VsZWN0ZWRTaXplIiwicGFyc2VJbnQiLCJuZXdUb3RhbFBhZ2VzIiwibmV3TGFzdFBhZ2UiLCJuZXdQYWdlIiwib25QYWdlQ2hhbmdlIiwiYmFja1RvUHJldlBhZ2UiLCJyZXN0IiwiU3RhdGVDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsIlN0YXRlUHJvdmlkZXIiLCJoYW5kbGVEYXRhU2l6ZUNoYW5nZSIsIm9wdGlvbnMiLCJwYWdpbmF0aW9uIiwidG90YWxTaXplIiwiZGF0YUNoYW5nZUxpc3RlbmVyIiwib24iLCJjdXN0b20iLCJpc1JlbW90ZVBhZ2luYXRpb24iLCJuZXdEYXRhU2l6ZSIsImZvcmNlVXBkYXRlIiwiZ2V0UGFnaW5hdGlvblJlbW90ZUVtaXR0ZXIiLCJlbWl0IiwicGFnaW5hdGlvblByb3BzIiwiZ2V0UGFnaW5hdGlvblByb3BzIiwicGFnaW5hdGlvblRhYmxlUHJvcHMiLCJzZXRQYWdpbmF0aW9uUmVtb3RlRW1pdHRlciIsImNoaWxkcmVuIiwiQ29tcG9uZW50IiwiYm9vdHN0cmFwNCIsImhpZGVTaXplUGVyUGFnZSIsImhpZGVQYWdlTGlzdE9ubHlPbmVQYWdlIiwic2hvd1RvdGFsIiwicGFnZUxpc3RSZW5kZXJlciIsInBhZ2VCdXR0b25SZW5kZXJlciIsInNpemVQZXJQYWdlUmVuZGVyZXIiLCJwYWdpbmF0aW9uVG90YWxSZW5kZXJlciIsInNpemVQZXJQYWdlT3B0aW9uUmVuZGVyZXIiLCJyZW1vdGVFbWl0dGVyIiwiZSIsInJlc3VsdCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJnZXROb3JtYWxpemVkUGFnZSIsImVuZEluZGV4Iiwic3RhcnRJbmRleCIsImVuZCIsImFsaWduUGFnZSIsInByZXZEYXRhU2l6ZSIsImdldEJ5Q3VyclBhZ2UiLCJkYXRhIiwic3RhcnQiLCJCb290c3RyYXBDb250ZXh0Iiwic2l6ZVBlclBhZ2VEcm9wZG93bkFkYXB0ZXIiLCJjbG9zZURyb3BEb3duIiwidG9nZ2xlRHJvcERvd24iLCJkcm9wZG93bk9wZW4iLCJvcGVuIiwiY2FsY3VsYXRlU2l6ZVBlclBhZ2VTdGF0dXMiLCJTaXplUGVyUGFnZURyb3Bkb3duV2l0aEFkYXB0ZXIiLCJzaXplUGVyUGFnZURlZmF1bHRDbGFzcyIsIlNpemVQZXJQYWdlRHJvcERvd24iLCJoaWRkZW4iLCJvbkNsaWNrIiwib25CbHVyIiwiY2xhc3NOYW1lIiwidmFyaWF0aW9uIiwiYnRuQ29udGV4dHVhbCIsIm9wdGlvblJlbmRlcmVyIiwiZHJvcERvd25TdHlsZSIsInZpc2liaWxpdHkiLCJvcGVuQ2xhc3MiLCJkcm9wZG93bkNsYXNzZXMiLCJvcHRpb24iLCJwcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwiYXJyYXkiLCJmdW5jIiwiYm9vbCIsIm9uZU9mIiwiZGVmYXVsdFByb3BzIiwicGFnaW5hdGlvbkxpc3RBZGFwdGVyIiwiY2FsY3VsYXRlUGFnZVN0YXR1cyIsImNhbGN1bGF0ZVBhZ2VzIiwiUGFnaW5hdGlvbkxpc3RXaXRoQWRhcHRlciIsIlBhZ2luYXRvbkxpc3QiLCJwYWdlUHJvcHMiLCJhcnJheU9mIiwic2hhcGUiLCJvbmVPZlR5cGUiLCJub2RlIiwibnVtYmVyIiwiZGlzYWJsZSIsInBhZ2luYXRpb25Ub3RhbEFkYXB0ZXIiLCJjYWxjdWxhdGVGcm9tVG8iLCJQYWdpbmF0aW9uVG90YWxXaXRoQWRhcHRlciIsIlBhZ2luYXRpb25Ub3RhbCIsInVuZGVmaW5lZCIsIkN1c3RvbWl6YWJsZVByb3ZpZGVyIiwiUGFnaW5hdGlvblByb3ZpZGVyIiwiUGFnaW5hdGlvbkxpc3RTdGFuZGFsb25lIiwiU2l6ZVBlclBhZ2VEcm9wZG93blN0YW5kYWxvbmUiLCJQYWdpbmF0aW9uVG90YWxTdGFuZGFsb25lIiwiUGFnaW5hdGlvbkRhdGFDb250ZXh0IiwiUGFnaW5hdGlvbkRhdGFQcm92aWRlciIsInJlbmRlckRlZmF1bHRQYWdpbmF0aW9uIiwib25EYXRhU2l6ZUNoYW5nZSIsInNldFJlbW90ZUVtaXR0ZXIiLCJvYmplY3QiLCJQYWdpbmF0aW9uIiwicGFnZUxpc3RDbGFzcyIsIlNpemVQZXJQYWdlT3B0aW9uIiwicHJldmVudERlZmF1bHQiLCJQYWdlQnV0dG9uIiwiaGFuZGxlQ2xpY2siLCJjbGFzc2VzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsTztBQ1ZBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FB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QUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEdBQUc7QUFDSCxvQkFBb0IsU0FBUztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7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LENBRGdDO0FBQUEsQ0FBbEM7O2tCQUtBLGlDQUFrQixzQ0FBdUJrSyx5QkFBdkIsQ0FBbEIsQyIsImZpbGUiOiJyZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9kaXN0L3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKFwicmVhY3RcIikpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW1wicmVhY3RcIl0sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wiUmVhY3RCb290c3RyYXBUYWJsZTJQYWdpbmF0b3JcIl0gPSBmYWN0b3J5KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5cdGVsc2Vcblx0XHRyb290W1wiUmVhY3RCb290c3RyYXBUYWJsZTJQYWdpbmF0b3JcIl0gPSBmYWN0b3J5KHJvb3RbXCJSZWFjdFwiXSk7XG59KSh0aGlzLCBmdW5jdGlvbihfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzBfXykge1xucmV0dXJuIFxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxNik7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjay9ib290c3RyYXAgM2Q1YTY4NWZiZmJkNDdmZGQxYjUiLCJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfMF9fO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIHtcInJvb3RcIjpcIlJlYWN0XCIsXCJjb21tb25qczJcIjpcInJlYWN0XCIsXCJjb21tb25qc1wiOlwicmVhY3RcIixcImFtZFwiOlwicmVhY3RcIn1cbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIvKipcbiAqIENvcHlyaWdodCAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsImV4cG9ydCBkZWZhdWx0IHtcbiAgUEFHSU5BVElPTl9TSVpFOiA1LFxuICBQQUdFX1NUQVJUX0lOREVYOiAxLFxuICBXaXRoX0ZJUlNUX0FORF9MQVNUOiB0cnVlLFxuICBTSE9XX0FMTF9QQUdFX0JUTlM6IGZhbHNlLFxuICBTSE9XX1RPVEFMOiBmYWxzZSxcbiAgUEFHSU5BVElPTl9UT1RBTDogbnVsbCxcbiAgRklSU1RfUEFHRV9URVhUOiAnPDwnLFxuICBQUkVfUEFHRV9URVhUOiAnPCcsXG4gIE5FWFRfUEFHRV9URVhUOiAnPicsXG4gIExBU1RfUEFHRV9URVhUOiAnPj4nLFxuICBORVhUX1BBR0VfVElUTEU6ICduZXh0IHBhZ2UnLFxuICBMQVNUX1BBR0VfVElUTEU6ICdsYXN0IHBhZ2UnLFxuICBQUkVfUEFHRV9USVRMRTogJ3ByZXZpb3VzIHBhZ2UnLFxuICBGSVJTVF9QQUdFX1RJVExFOiAnZmlyc3QgcGFnZScsXG4gIFNJWkVfUEVSX1BBR0VfTElTVDogWzEwLCAyNSwgMzAsIDUwXSxcbiAgSElERV9TSVpFX1BFUl9QQUdFOiBmYWxzZSxcbiAgSElERV9QQUdFX0xJU1RfT05MWV9PTkVfUEFHRTogZmFsc2Vcbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvY29uc3QuanMiLCIvKiBlc2xpbnQgbm8tbWl4ZWQtb3BlcmF0b3JzOiAwICovXG5pbXBvcnQgQ29uc3QgZnJvbSAnLi9jb25zdCc7XG5cbmV4cG9ydCBkZWZhdWx0IEV4dGVuZEJhc2UgPT5cbiAgY2xhc3MgUGFnZVJlc29sdmVyIGV4dGVuZHMgRXh0ZW5kQmFzZSB7XG4gICAgYmFja1RvUHJldlBhZ2UoKSB7XG4gICAgICBjb25zdCB7IGN1cnJQYWdlLCBwYWdlU3RhcnRJbmRleCB9ID0gdGhpcy5wcm9wcztcbiAgICAgIHJldHVybiAoY3VyclBhZ2UgLSAxKSA8IHBhZ2VTdGFydEluZGV4ID8gcGFnZVN0YXJ0SW5kZXggOiBjdXJyUGFnZSAtIDE7XG4gICAgfVxuXG4gICAgaW5pdGlhbFN0YXRlKCkge1xuICAgICAgY29uc3QgdG90YWxQYWdlcyA9IHRoaXMuY2FsY3VsYXRlVG90YWxQYWdlKCk7XG4gICAgICBjb25zdCBsYXN0UGFnZSA9IHRoaXMuY2FsY3VsYXRlTGFzdFBhZ2UodG90YWxQYWdlcyk7XG4gICAgICByZXR1cm4geyB0b3RhbFBhZ2VzLCBsYXN0UGFnZSB9O1xuICAgIH1cblxuICAgIGNhbGN1bGF0ZVRvdGFsUGFnZShzaXplUGVyUGFnZSA9IHRoaXMucHJvcHMuY3VyclNpemVQZXJQYWdlLCBkYXRhU2l6ZSA9IHRoaXMucHJvcHMuZGF0YVNpemUpIHtcbiAgICAgIHJldHVybiBNYXRoLmNlaWwoZGF0YVNpemUgLyBzaXplUGVyUGFnZSk7XG4gICAgfVxuXG4gICAgY2FsY3VsYXRlTGFzdFBhZ2UodG90YWxQYWdlcykge1xuICAgICAgY29uc3QgeyBwYWdlU3RhcnRJbmRleCB9ID0gdGhpcy5wcm9wcztcbiAgICAgIHJldHVybiBwYWdlU3RhcnRJbmRleCArIHRvdGFsUGFnZXMgLSAxO1xuICAgIH1cblxuICAgIGNhbGN1bGF0ZUZyb21UbygpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgZGF0YVNpemUsXG4gICAgICAgIGN1cnJQYWdlLFxuICAgICAgICBjdXJyU2l6ZVBlclBhZ2UsXG4gICAgICAgIHBhZ2VTdGFydEluZGV4XG4gICAgICB9ID0gdGhpcy5wcm9wcztcbiAgICAgIGNvbnN0IG9mZnNldCA9IE1hdGguYWJzKENvbnN0LlBBR0VfU1RBUlRfSU5ERVggLSBwYWdlU3RhcnRJbmRleCk7XG5cbiAgICAgIGxldCBmcm9tID0gKChjdXJyUGFnZSAtIHBhZ2VTdGFydEluZGV4KSAqIGN1cnJTaXplUGVyUGFnZSk7XG4gICAgICBmcm9tID0gZGF0YVNpemUgPT09IDAgPyAwIDogZnJvbSArIDE7XG4gICAgICBsZXQgdG8gPSBNYXRoLm1pbihjdXJyU2l6ZVBlclBhZ2UgKiAoY3VyclBhZ2UgKyBvZmZzZXQpLCBkYXRhU2l6ZSk7XG4gICAgICBpZiAodG8gPiBkYXRhU2l6ZSkgdG8gPSBkYXRhU2l6ZTtcblxuICAgICAgcmV0dXJuIFtmcm9tLCB0b107XG4gICAgfVxuXG4gICAgY2FsY3VsYXRlUGFnZXMoXG4gICAgICB0b3RhbFBhZ2VzLFxuICAgICAgbGFzdFBhZ2VcbiAgICApIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY3VyclBhZ2UsXG4gICAgICAgIHBhZ2luYXRpb25TaXplLFxuICAgICAgICBwYWdlU3RhcnRJbmRleCxcbiAgICAgICAgd2l0aEZpcnN0QW5kTGFzdCxcbiAgICAgICAgZmlyc3RQYWdlVGV4dCxcbiAgICAgICAgcHJlUGFnZVRleHQsXG4gICAgICAgIG5leHRQYWdlVGV4dCxcbiAgICAgICAgbGFzdFBhZ2VUZXh0LFxuICAgICAgICBhbHdheXNTaG93QWxsQnRuc1xuICAgICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgIGxldCBwYWdlcyA9IFtdO1xuICAgICAgbGV0IGVuZFBhZ2UgPSB0b3RhbFBhZ2VzO1xuICAgICAgaWYgKGVuZFBhZ2UgPD0gMCkgcmV0dXJuIFtdO1xuXG4gICAgICBsZXQgc3RhcnRQYWdlID0gTWF0aC5tYXgoY3VyclBhZ2UgLSBNYXRoLmZsb29yKHBhZ2luYXRpb25TaXplIC8gMiksIHBhZ2VTdGFydEluZGV4KTtcbiAgICAgIGVuZFBhZ2UgPSBzdGFydFBhZ2UgKyBwYWdpbmF0aW9uU2l6ZSAtIDE7XG5cbiAgICAgIGlmIChlbmRQYWdlID4gbGFzdFBhZ2UpIHtcbiAgICAgICAgZW5kUGFnZSA9IGxhc3RQYWdlO1xuICAgICAgICBzdGFydFBhZ2UgPSBlbmRQYWdlIC0gcGFnaW5hdGlvblNpemUgKyAxO1xuICAgICAgfVxuXG4gICAgICBpZiAoYWx3YXlzU2hvd0FsbEJ0bnMpIHtcbiAgICAgICAgaWYgKHdpdGhGaXJzdEFuZExhc3QpIHtcbiAgICAgICAgICBwYWdlcyA9IFtmaXJzdFBhZ2VUZXh0LCBwcmVQYWdlVGV4dF07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGFnZXMgPSBbcHJlUGFnZVRleHRdO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdGFydFBhZ2UgIT09IHBhZ2VTdGFydEluZGV4ICYmXG4gICAgICAgIHRvdGFsUGFnZXMgPiBwYWdpbmF0aW9uU2l6ZSAmJlxuICAgICAgICB3aXRoRmlyc3RBbmRMYXN0ICYmXG4gICAgICAgIHBhZ2VzLmxlbmd0aCA9PT0gMFxuICAgICAgKSB7XG4gICAgICAgIHBhZ2VzID0gW2ZpcnN0UGFnZVRleHQsIHByZVBhZ2VUZXh0XTtcbiAgICAgIH0gZWxzZSBpZiAodG90YWxQYWdlcyA+IDEgJiYgcGFnZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHBhZ2VzID0gW3ByZVBhZ2VUZXh0XTtcbiAgICAgIH1cblxuICAgICAgZm9yIChsZXQgaSA9IHN0YXJ0UGFnZTsgaSA8PSBlbmRQYWdlOyBpICs9IDEpIHtcbiAgICAgICAgaWYgKGkgPj0gcGFnZVN0YXJ0SW5kZXgpIHBhZ2VzLnB1c2goaSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChhbHdheXNTaG93QWxsQnRucyB8fCAoZW5kUGFnZSA8PSBsYXN0UGFnZSAmJiBwYWdlcy5sZW5ndGggPiAxKSkge1xuICAgICAgICBwYWdlcy5wdXNoKG5leHRQYWdlVGV4dCk7XG4gICAgICB9XG4gICAgICBpZiAoKGVuZFBhZ2UgIT09IGxhc3RQYWdlICYmIHdpdGhGaXJzdEFuZExhc3QpIHx8ICh3aXRoRmlyc3RBbmRMYXN0ICYmIGFsd2F5c1Nob3dBbGxCdG5zKSkge1xuICAgICAgICBwYWdlcy5wdXNoKGxhc3RQYWdlVGV4dCk7XG4gICAgICB9XG5cbiAgICAgIC8vIGlmICgoZW5kUGFnZSA8PSBsYXN0UGFnZSAmJiBwYWdlcy5sZW5ndGggPiAxKSB8fCBhbHdheXNTaG93QWxsQnRucykge1xuICAgICAgLy8gICBwYWdlcy5wdXNoKG5leHRQYWdlVGV4dCk7XG4gICAgICAvLyB9XG4gICAgICAvLyBpZiAoZW5kUGFnZSAhPT0gbGFzdFBhZ2UgJiYgd2l0aEZpcnN0QW5kTGFzdCkge1xuICAgICAgLy8gICBwYWdlcy5wdXNoKGxhc3RQYWdlVGV4dCk7XG4gICAgICAvLyB9XG5cbiAgICAgIHJldHVybiBwYWdlcztcbiAgICB9XG5cbiAgICBjYWxjdWxhdGVQYWdlU3RhdHVzKHBhZ2VzID0gW10sIGxhc3RQYWdlKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGN1cnJQYWdlLFxuICAgICAgICBwYWdlU3RhcnRJbmRleCxcbiAgICAgICAgZmlyc3RQYWdlVGV4dCxcbiAgICAgICAgcHJlUGFnZVRleHQsXG4gICAgICAgIG5leHRQYWdlVGV4dCxcbiAgICAgICAgbGFzdFBhZ2VUZXh0LFxuICAgICAgICBhbHdheXNTaG93QWxsQnRuc1xuICAgICAgfSA9IHRoaXMucHJvcHM7XG4gICAgICBjb25zdCBpc1N0YXJ0ID0gcGFnZSA9PlxuICAgICAgICAoY3VyclBhZ2UgPT09IHBhZ2VTdGFydEluZGV4ICYmIChwYWdlID09PSBmaXJzdFBhZ2VUZXh0IHx8IHBhZ2UgPT09IHByZVBhZ2VUZXh0KSk7XG4gICAgICBjb25zdCBpc0VuZCA9IHBhZ2UgPT5cbiAgICAgICAgKGN1cnJQYWdlID09PSBsYXN0UGFnZSAmJiAocGFnZSA9PT0gbmV4dFBhZ2VUZXh0IHx8IHBhZ2UgPT09IGxhc3RQYWdlVGV4dCkpO1xuXG4gICAgICByZXR1cm4gcGFnZXNcbiAgICAgICAgLmZpbHRlcigocGFnZSkgPT4ge1xuICAgICAgICAgIGlmIChhbHdheXNTaG93QWxsQnRucykge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiAhKGlzU3RhcnQocGFnZSkgfHwgaXNFbmQocGFnZSkpO1xuICAgICAgICB9KVxuICAgICAgICAubWFwKChwYWdlKSA9PiB7XG4gICAgICAgICAgbGV0IHRpdGxlO1xuICAgICAgICAgIGNvbnN0IGFjdGl2ZSA9IHBhZ2UgPT09IGN1cnJQYWdlO1xuICAgICAgICAgIGNvbnN0IGRpc2FibGVkID0gKGlzU3RhcnQocGFnZSkgfHwgaXNFbmQocGFnZSkpO1xuXG4gICAgICAgICAgaWYgKHBhZ2UgPT09IG5leHRQYWdlVGV4dCkge1xuICAgICAgICAgICAgdGl0bGUgPSB0aGlzLnByb3BzLm5leHRQYWdlVGl0bGU7XG4gICAgICAgICAgfSBlbHNlIGlmIChwYWdlID09PSBwcmVQYWdlVGV4dCkge1xuICAgICAgICAgICAgdGl0bGUgPSB0aGlzLnByb3BzLnByZVBhZ2VUaXRsZTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHBhZ2UgPT09IGZpcnN0UGFnZVRleHQpIHtcbiAgICAgICAgICAgIHRpdGxlID0gdGhpcy5wcm9wcy5maXJzdFBhZ2VUaXRsZTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHBhZ2UgPT09IGxhc3RQYWdlVGV4dCkge1xuICAgICAgICAgICAgdGl0bGUgPSB0aGlzLnByb3BzLmxhc3RQYWdlVGl0bGU7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRpdGxlID0gYCR7cGFnZX1gO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB7IHBhZ2UsIGFjdGl2ZSwgZGlzYWJsZWQsIHRpdGxlIH07XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGNhbGN1bGF0ZVNpemVQZXJQYWdlU3RhdHVzKCkge1xuICAgICAgY29uc3QgeyBzaXplUGVyUGFnZUxpc3QgfSA9IHRoaXMucHJvcHM7XG4gICAgICByZXR1cm4gc2l6ZVBlclBhZ2VMaXN0Lm1hcCgoX3NpemVQZXJQYWdlKSA9PiB7XG4gICAgICAgIGNvbnN0IHBhZ2VUZXh0ID0gdHlwZW9mIF9zaXplUGVyUGFnZS50ZXh0ICE9PSAndW5kZWZpbmVkJyA/IF9zaXplUGVyUGFnZS50ZXh0IDogX3NpemVQZXJQYWdlO1xuICAgICAgICBjb25zdCBwYWdlTnVtYmVyID0gdHlwZW9mIF9zaXplUGVyUGFnZS52YWx1ZSAhPT0gJ3VuZGVmaW5lZCcgPyBfc2l6ZVBlclBhZ2UudmFsdWUgOiBfc2l6ZVBlclBhZ2U7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdGV4dDogYCR7cGFnZVRleHR9YCxcbiAgICAgICAgICBwYWdlOiBwYWdlTnVtYmVyXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdlLXJlc29sdmVyLmpzIiwiLyohXG4gIENvcHlyaWdodCAoYykgMjAxNiBKZWQgV2F0c29uLlxuICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuICBodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMgKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuXHRcdFx0XHRjbGFzc2VzLnB1c2goY2xhc3NOYW1lcy5hcHBseShudWxsLCBhcmcpKTtcblx0XHRcdH0gZWxzZSBpZiAoYXJnVHlwZSA9PT0gJ29iamVjdCcpIHtcblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGFyZykge1xuXHRcdFx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChrZXkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBjbGFzc2VzLmpvaW4oJyAnKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdG1vZHVsZS5leHBvcnRzID0gY2xhc3NOYW1lcztcblx0fSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBkZWZpbmUuYW1kID09PSAnb2JqZWN0JyAmJiBkZWZpbmUuYW1kKSB7XG5cdFx0Ly8gcmVnaXN0ZXIgYXMgJ2NsYXNzbmFtZXMnLCBjb25zaXN0ZW50IHdpdGggbnBtIHBhY2thZ2UgbmFtZVxuXHRcdGRlZmluZSgnY2xhc3NuYW1lcycsIFtdLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gY2xhc3NOYW1lcztcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHR3aW5kb3cuY2xhc3NOYW1lcyA9IGNsYXNzTmFtZXM7XG5cdH1cbn0oKSk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLyogZXNsaW50IHJlYWN0L3Byb3AtdHlwZXM6IDAgKi9cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBwYWdlUmVzb2x2ZXIgZnJvbSAnLi9wYWdlLXJlc29sdmVyJztcblxuZXhwb3J0IGRlZmF1bHQgV3JhcHBlZENvbXBvbmVudCA9PlxuICBjbGFzcyBQYWdpbmF0aW9uSGFuZGxlciBleHRlbmRzIHBhZ2VSZXNvbHZlcihDb21wb25lbnQpIHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgdGhpcy5oYW5kbGVDaGFuZ2VQYWdlID0gdGhpcy5oYW5kbGVDaGFuZ2VQYWdlLmJpbmQodGhpcyk7XG4gICAgICB0aGlzLmhhbmRsZUNoYW5nZVNpemVQZXJQYWdlID0gdGhpcy5oYW5kbGVDaGFuZ2VTaXplUGVyUGFnZS5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMuaW5pdGlhbFN0YXRlKCk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGNvbnN0IHsgZGF0YVNpemUsIGN1cnJTaXplUGVyUGFnZSB9ID0gbmV4dFByb3BzO1xuICAgICAgaWYgKGN1cnJTaXplUGVyUGFnZSAhPT0gdGhpcy5wcm9wcy5jdXJyU2l6ZVBlclBhZ2UgfHwgZGF0YVNpemUgIT09IHRoaXMucHJvcHMuZGF0YVNpemUpIHtcbiAgICAgICAgY29uc3QgdG90YWxQYWdlcyA9IHRoaXMuY2FsY3VsYXRlVG90YWxQYWdlKGN1cnJTaXplUGVyUGFnZSwgZGF0YVNpemUpO1xuICAgICAgICBjb25zdCBsYXN0UGFnZSA9IHRoaXMuY2FsY3VsYXRlTGFzdFBhZ2UodG90YWxQYWdlcyk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyB0b3RhbFBhZ2VzLCBsYXN0UGFnZSB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBoYW5kbGVDaGFuZ2VTaXplUGVyUGFnZShzaXplUGVyUGFnZSkge1xuICAgICAgY29uc3QgeyBjdXJyU2l6ZVBlclBhZ2UsIG9uU2l6ZVBlclBhZ2VDaGFuZ2UgfSA9IHRoaXMucHJvcHM7XG4gICAgICBjb25zdCBzZWxlY3RlZFNpemUgPSB0eXBlb2Ygc2l6ZVBlclBhZ2UgPT09ICdzdHJpbmcnID8gcGFyc2VJbnQoc2l6ZVBlclBhZ2UsIDEwKSA6IHNpemVQZXJQYWdlO1xuICAgICAgbGV0IHsgY3VyclBhZ2UgfSA9IHRoaXMucHJvcHM7XG4gICAgICBpZiAoc2VsZWN0ZWRTaXplICE9PSBjdXJyU2l6ZVBlclBhZ2UpIHtcbiAgICAgICAgY29uc3QgbmV3VG90YWxQYWdlcyA9IHRoaXMuY2FsY3VsYXRlVG90YWxQYWdlKHNlbGVjdGVkU2l6ZSk7XG4gICAgICAgIGNvbnN0IG5ld0xhc3RQYWdlID0gdGhpcy5jYWxjdWxhdGVMYXN0UGFnZShuZXdUb3RhbFBhZ2VzKTtcbiAgICAgICAgaWYgKGN1cnJQYWdlID4gbmV3TGFzdFBhZ2UpIGN1cnJQYWdlID0gbmV3TGFzdFBhZ2U7XG4gICAgICAgIG9uU2l6ZVBlclBhZ2VDaGFuZ2Uoc2VsZWN0ZWRTaXplLCBjdXJyUGFnZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaGFuZGxlQ2hhbmdlUGFnZShuZXdQYWdlKSB7XG4gICAgICBsZXQgcGFnZTtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY3VyclBhZ2UsXG4gICAgICAgIHBhZ2VTdGFydEluZGV4LFxuICAgICAgICBwcmVQYWdlVGV4dCxcbiAgICAgICAgbmV4dFBhZ2VUZXh0LFxuICAgICAgICBsYXN0UGFnZVRleHQsXG4gICAgICAgIGZpcnN0UGFnZVRleHQsXG4gICAgICAgIG9uUGFnZUNoYW5nZVxuICAgICAgfSA9IHRoaXMucHJvcHM7XG4gICAgICBjb25zdCB7IGxhc3RQYWdlIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgICBpZiAobmV3UGFnZSA9PT0gcHJlUGFnZVRleHQpIHtcbiAgICAgICAgcGFnZSA9IHRoaXMuYmFja1RvUHJldlBhZ2UoKTtcbiAgICAgIH0gZWxzZSBpZiAobmV3UGFnZSA9PT0gbmV4dFBhZ2VUZXh0KSB7XG4gICAgICAgIHBhZ2UgPSAoY3VyclBhZ2UgKyAxKSA+IGxhc3RQYWdlID8gbGFzdFBhZ2UgOiBjdXJyUGFnZSArIDE7XG4gICAgICB9IGVsc2UgaWYgKG5ld1BhZ2UgPT09IGxhc3RQYWdlVGV4dCkge1xuICAgICAgICBwYWdlID0gbGFzdFBhZ2U7XG4gICAgICB9IGVsc2UgaWYgKG5ld1BhZ2UgPT09IGZpcnN0UGFnZVRleHQpIHtcbiAgICAgICAgcGFnZSA9IHBhZ2VTdGFydEluZGV4O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFnZSA9IHBhcnNlSW50KG5ld1BhZ2UsIDEwKTtcbiAgICAgIH1cbiAgICAgIGlmIChwYWdlICE9PSBjdXJyUGFnZSkge1xuICAgICAgICBvblBhZ2VDaGFuZ2UocGFnZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPFdyYXBwZWRDb21wb25lbnRcbiAgICAgICAgICB7IC4uLnRoaXMucHJvcHMgfVxuICAgICAgICAgIGxhc3RQYWdlPXsgdGhpcy5zdGF0ZS5sYXN0UGFnZSB9XG4gICAgICAgICAgdG90YWxQYWdlcz17IHRoaXMuc3RhdGUudG90YWxQYWdlcyB9XG4gICAgICAgICAgb25QYWdlQ2hhbmdlPXsgdGhpcy5oYW5kbGVDaGFuZ2VQYWdlIH1cbiAgICAgICAgICBvblNpemVQZXJQYWdlQ2hhbmdlPXsgdGhpcy5oYW5kbGVDaGFuZ2VTaXplUGVyUGFnZSB9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgIH1cbiAgfTtcblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24taGFuZGxlci5qcyIsIi8qIGVzbGludCByZWFjdC9wcm9wLXR5cGVzOiAwICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBXcmFwcGVkQ29tcG9uZW50ID0+ICh7XG4gIHBhZ2UsXG4gIHNpemVQZXJQYWdlLFxuICAuLi5yZXN0XG59KSA9PiAoXG4gIDxXcmFwcGVkQ29tcG9uZW50XG4gICAgeyAuLi5yZXN0IH1cbiAgICBjdXJyUGFnZT17IHBhZ2UgfVxuICAgIGN1cnJTaXplUGVyUGFnZT17IHNpemVQZXJQYWdlIH1cbiAgLz5cbik7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc3RhbmRhbG9uZS1hZGFwdGVyLmpzIiwiLyogZXNsaW50IHJlYWN0L3Byb3AtdHlwZXM6IDAgKi9cbi8qIGVzbGludCByZWFjdC9yZXF1aXJlLWRlZmF1bHQtcHJvcHM6IDAgKi9cbi8qIGVzbGludCBuby1sb25lbHktaWY6IDAgKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgRXZlbnRFbWl0dGVyIGZyb20gJ2V2ZW50cyc7XG5pbXBvcnQgQ29uc3QgZnJvbSAnLi9jb25zdCc7XG5pbXBvcnQgeyBhbGlnblBhZ2UgfSBmcm9tICcuL3BhZ2UnO1xuXG5jb25zdCBTdGF0ZUNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XG5cbmNsYXNzIFN0YXRlUHJvdmlkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLmhhbmRsZUNoYW5nZVBhZ2UgPSB0aGlzLmhhbmRsZUNoYW5nZVBhZ2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLmhhbmRsZURhdGFTaXplQ2hhbmdlID0gdGhpcy5oYW5kbGVEYXRhU2l6ZUNoYW5nZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2UgPSB0aGlzLmhhbmRsZUNoYW5nZVNpemVQZXJQYWdlLmJpbmQodGhpcyk7XG5cbiAgICBsZXQgY3VyclBhZ2U7XG4gICAgbGV0IGN1cnJTaXplUGVyUGFnZTtcbiAgICBjb25zdCB7IG9wdGlvbnMgfSA9IHByb3BzLnBhZ2luYXRpb247XG4gICAgY29uc3Qgc2l6ZVBlclBhZ2VMaXN0ID0gb3B0aW9ucy5zaXplUGVyUGFnZUxpc3QgfHwgQ29uc3QuU0laRV9QRVJfUEFHRV9MSVNUO1xuXG4gICAgLy8gaW5pdGlhbGl6ZSBjdXJyZW50IHBhZ2VcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMucGFnZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGN1cnJQYWdlID0gb3B0aW9ucy5wYWdlO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMucGFnZVN0YXJ0SW5kZXggIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjdXJyUGFnZSA9IG9wdGlvbnMucGFnZVN0YXJ0SW5kZXg7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJQYWdlID0gQ29uc3QuUEFHRV9TVEFSVF9JTkRFWDtcbiAgICB9XG5cbiAgICAvLyBpbml0aWFsaXplIGN1cnJlbnQgc2l6ZVBlclBhZ2VcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMuc2l6ZVBlclBhZ2UgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjdXJyU2l6ZVBlclBhZ2UgPSBvcHRpb25zLnNpemVQZXJQYWdlO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIHNpemVQZXJQYWdlTGlzdFswXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGN1cnJTaXplUGVyUGFnZSA9IHNpemVQZXJQYWdlTGlzdFswXS52YWx1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY3VyclNpemVQZXJQYWdlID0gc2l6ZVBlclBhZ2VMaXN0WzBdO1xuICAgIH1cblxuICAgIHRoaXMuY3VyclBhZ2UgPSBjdXJyUGFnZTtcbiAgICB0aGlzLmRhdGFTaXplID0gb3B0aW9ucy50b3RhbFNpemU7XG4gICAgdGhpcy5jdXJyU2l6ZVBlclBhZ2UgPSBjdXJyU2l6ZVBlclBhZ2U7XG4gICAgdGhpcy5kYXRhQ2hhbmdlTGlzdGVuZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgdGhpcy5kYXRhQ2hhbmdlTGlzdGVuZXIub24oJ2ZpbHRlckNoYW5nZWQnLCB0aGlzLmhhbmRsZURhdGFTaXplQ2hhbmdlKTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgY29uc3QgeyBjdXN0b20gfSA9IG5leHRQcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnM7XG5cbiAgICAvLyB1c2VyIHNob3VsZCBhbGlnbiB0aGUgcGFnZSB3aGVuIHRoZSBwYWdlIGlzIG5vdCBmaXQgdG8gdGhlIGRhdGEgc2l6ZSB3aGVuIHJlbW90ZSBlbmFibGVcbiAgICBpZiAodGhpcy5pc1JlbW90ZVBhZ2luYXRpb24oKSB8fCBjdXN0b20pIHtcbiAgICAgIGlmICh0eXBlb2YgbmV4dFByb3BzLnBhZ2luYXRpb24ub3B0aW9ucy5wYWdlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0aGlzLmN1cnJQYWdlID0gbmV4dFByb3BzLnBhZ2luYXRpb24ub3B0aW9ucy5wYWdlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBuZXh0UHJvcHMucGFnaW5hdGlvbi5vcHRpb25zLnNpemVQZXJQYWdlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0aGlzLmN1cnJTaXplUGVyUGFnZSA9IG5leHRQcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnMuc2l6ZVBlclBhZ2U7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIG5leHRQcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnMudG90YWxTaXplICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0aGlzLmRhdGFTaXplID0gbmV4dFByb3BzLnBhZ2luYXRpb24ub3B0aW9ucy50b3RhbFNpemU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZ2V0UGFnaW5hdGlvblByb3BzID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgcGFnaW5hdGlvbjogeyBvcHRpb25zIH0sIGJvb3RzdHJhcDQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBjdXJyUGFnZSwgY3VyclNpemVQZXJQYWdlLCBkYXRhU2l6ZSB9ID0gdGhpcztcbiAgICBjb25zdCB3aXRoRmlyc3RBbmRMYXN0ID0gdHlwZW9mIG9wdGlvbnMud2l0aEZpcnN0QW5kTGFzdCA9PT0gJ3VuZGVmaW5lZCcgP1xuICAgICAgQ29uc3QuV2l0aF9GSVJTVF9BTkRfTEFTVCA6IG9wdGlvbnMud2l0aEZpcnN0QW5kTGFzdDtcbiAgICBjb25zdCBhbHdheXNTaG93QWxsQnRucyA9IHR5cGVvZiBvcHRpb25zLmFsd2F5c1Nob3dBbGxCdG5zID09PSAndW5kZWZpbmVkJyA/XG4gICAgICBDb25zdC5TSE9XX0FMTF9QQUdFX0JUTlMgOiBvcHRpb25zLmFsd2F5c1Nob3dBbGxCdG5zO1xuICAgIGNvbnN0IGhpZGVTaXplUGVyUGFnZSA9IHR5cGVvZiBvcHRpb25zLmhpZGVTaXplUGVyUGFnZSA9PT0gJ3VuZGVmaW5lZCcgP1xuICAgICAgQ29uc3QuSElERV9TSVpFX1BFUl9QQUdFIDogb3B0aW9ucy5oaWRlU2l6ZVBlclBhZ2U7XG4gICAgY29uc3QgaGlkZVBhZ2VMaXN0T25seU9uZVBhZ2UgPSB0eXBlb2Ygb3B0aW9ucy5oaWRlUGFnZUxpc3RPbmx5T25lUGFnZSA9PT0gJ3VuZGVmaW5lZCcgP1xuICAgICAgQ29uc3QuSElERV9QQUdFX0xJU1RfT05MWV9PTkVfUEFHRSA6IG9wdGlvbnMuaGlkZVBhZ2VMaXN0T25seU9uZVBhZ2U7XG4gICAgY29uc3QgcGFnZVN0YXJ0SW5kZXggPSB0eXBlb2Ygb3B0aW9ucy5wYWdlU3RhcnRJbmRleCA9PT0gJ3VuZGVmaW5lZCcgP1xuICAgICAgQ29uc3QuUEFHRV9TVEFSVF9JTkRFWCA6IG9wdGlvbnMucGFnZVN0YXJ0SW5kZXg7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICBib290c3RyYXA0LFxuICAgICAgcGFnZTogY3VyclBhZ2UsXG4gICAgICBzaXplUGVyUGFnZTogY3VyclNpemVQZXJQYWdlLFxuICAgICAgcGFnZVN0YXJ0SW5kZXgsXG4gICAgICBoaWRlUGFnZUxpc3RPbmx5T25lUGFnZSxcbiAgICAgIGhpZGVTaXplUGVyUGFnZSxcbiAgICAgIGFsd2F5c1Nob3dBbGxCdG5zLFxuICAgICAgd2l0aEZpcnN0QW5kTGFzdCxcbiAgICAgIGRhdGFTaXplLFxuICAgICAgc2l6ZVBlclBhZ2VMaXN0OiBvcHRpb25zLnNpemVQZXJQYWdlTGlzdCB8fCBDb25zdC5TSVpFX1BFUl9QQUdFX0xJU1QsXG4gICAgICBwYWdpbmF0aW9uU2l6ZTogb3B0aW9ucy5wYWdpbmF0aW9uU2l6ZSB8fCBDb25zdC5QQUdJTkFUSU9OX1NJWkUsXG4gICAgICBzaG93VG90YWw6IG9wdGlvbnMuc2hvd1RvdGFsLFxuICAgICAgcGFnZUxpc3RSZW5kZXJlcjogb3B0aW9ucy5wYWdlTGlzdFJlbmRlcmVyLFxuICAgICAgcGFnZUJ1dHRvblJlbmRlcmVyOiBvcHRpb25zLnBhZ2VCdXR0b25SZW5kZXJlcixcbiAgICAgIHNpemVQZXJQYWdlUmVuZGVyZXI6IG9wdGlvbnMuc2l6ZVBlclBhZ2VSZW5kZXJlcixcbiAgICAgIHBhZ2luYXRpb25Ub3RhbFJlbmRlcmVyOiBvcHRpb25zLnBhZ2luYXRpb25Ub3RhbFJlbmRlcmVyLFxuICAgICAgc2l6ZVBlclBhZ2VPcHRpb25SZW5kZXJlcjogb3B0aW9ucy5zaXplUGVyUGFnZU9wdGlvblJlbmRlcmVyLFxuICAgICAgZmlyc3RQYWdlVGV4dDogb3B0aW9ucy5maXJzdFBhZ2VUZXh0IHx8IENvbnN0LkZJUlNUX1BBR0VfVEVYVCxcbiAgICAgIHByZVBhZ2VUZXh0OiBvcHRpb25zLnByZVBhZ2VUZXh0IHx8IENvbnN0LlBSRV9QQUdFX1RFWFQsXG4gICAgICBuZXh0UGFnZVRleHQ6IG9wdGlvbnMubmV4dFBhZ2VUZXh0IHx8IENvbnN0Lk5FWFRfUEFHRV9URVhULFxuICAgICAgbGFzdFBhZ2VUZXh0OiBvcHRpb25zLmxhc3RQYWdlVGV4dCB8fCBDb25zdC5MQVNUX1BBR0VfVEVYVCxcbiAgICAgIHByZVBhZ2VUaXRsZTogb3B0aW9ucy5wcmVQYWdlVGl0bGUgfHwgQ29uc3QuUFJFX1BBR0VfVElUTEUsXG4gICAgICBuZXh0UGFnZVRpdGxlOiBvcHRpb25zLm5leHRQYWdlVGl0bGUgfHwgQ29uc3QuTkVYVF9QQUdFX1RJVExFLFxuICAgICAgZmlyc3RQYWdlVGl0bGU6IG9wdGlvbnMuZmlyc3RQYWdlVGl0bGUgfHwgQ29uc3QuRklSU1RfUEFHRV9USVRMRSxcbiAgICAgIGxhc3RQYWdlVGl0bGU6IG9wdGlvbnMubGFzdFBhZ2VUaXRsZSB8fCBDb25zdC5MQVNUX1BBR0VfVElUTEUsXG4gICAgICBvblBhZ2VDaGFuZ2U6IHRoaXMuaGFuZGxlQ2hhbmdlUGFnZSxcbiAgICAgIG9uU2l6ZVBlclBhZ2VDaGFuZ2U6IHRoaXMuaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2VcbiAgICB9O1xuICB9XG5cbiAgc2V0UGFnaW5hdGlvblJlbW90ZUVtaXR0ZXIgPSAocmVtb3RlRW1pdHRlcikgPT4ge1xuICAgIHRoaXMucmVtb3RlRW1pdHRlciA9IHJlbW90ZUVtaXR0ZXI7XG4gIH1cblxuICBnZXRQYWdpbmF0aW9uUmVtb3RlRW1pdHRlciA9ICgpID0+IHRoaXMucmVtb3RlRW1pdHRlciB8fCB0aGlzLnByb3BzLnJlbW90ZUVtaXR0ZXI7XG5cbiAgaXNSZW1vdGVQYWdpbmF0aW9uID0gKCkgPT4ge1xuICAgIGNvbnN0IGUgPSB7fTtcbiAgICB0aGlzLnJlbW90ZUVtaXR0ZXIuZW1pdCgnaXNSZW1vdGVQYWdpbmF0aW9uJywgZSk7XG4gICAgcmV0dXJuIGUucmVzdWx0O1xuICB9O1xuXG4gIGhhbmRsZURhdGFTaXplQ2hhbmdlKG5ld0RhdGFTaXplKSB7XG4gICAgY29uc3QgeyBwYWdpbmF0aW9uOiB7IG9wdGlvbnMgfSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBwYWdlU3RhcnRJbmRleCA9IHR5cGVvZiBvcHRpb25zLnBhZ2VTdGFydEluZGV4ID09PSAndW5kZWZpbmVkJyA/XG4gICAgICBDb25zdC5QQUdFX1NUQVJUX0lOREVYIDogb3B0aW9ucy5wYWdlU3RhcnRJbmRleDtcbiAgICB0aGlzLmN1cnJQYWdlID0gYWxpZ25QYWdlKFxuICAgICAgbmV3RGF0YVNpemUsXG4gICAgICB0aGlzLmRhdGFTaXplLFxuICAgICAgdGhpcy5jdXJyUGFnZSxcbiAgICAgIHRoaXMuY3VyclNpemVQZXJQYWdlLFxuICAgICAgcGFnZVN0YXJ0SW5kZXhcbiAgICApO1xuICAgIHRoaXMuZGF0YVNpemUgPSBuZXdEYXRhU2l6ZTtcbiAgICB0aGlzLmZvcmNlVXBkYXRlKCk7XG4gIH1cblxuICBoYW5kbGVDaGFuZ2VQYWdlKGN1cnJQYWdlKSB7XG4gICAgY29uc3QgeyBjdXJyU2l6ZVBlclBhZ2UgfSA9IHRoaXM7XG4gICAgY29uc3QgeyBwYWdpbmF0aW9uOiB7IG9wdGlvbnMgfSB9ID0gdGhpcy5wcm9wcztcblxuICAgIGlmIChvcHRpb25zLm9uUGFnZUNoYW5nZSkge1xuICAgICAgb3B0aW9ucy5vblBhZ2VDaGFuZ2UoY3VyclBhZ2UsIGN1cnJTaXplUGVyUGFnZSk7XG4gICAgfVxuXG4gICAgdGhpcy5jdXJyUGFnZSA9IGN1cnJQYWdlO1xuXG4gICAgaWYgKHRoaXMuaXNSZW1vdGVQYWdpbmF0aW9uKCkpIHtcbiAgICAgIHRoaXMuZ2V0UGFnaW5hdGlvblJlbW90ZUVtaXR0ZXIoKS5lbWl0KCdwYWdpbmF0aW9uQ2hhbmdlJywgY3VyclBhZ2UsIGN1cnJTaXplUGVyUGFnZSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZm9yY2VVcGRhdGUoKTtcbiAgfVxuXG4gIGhhbmRsZUNoYW5nZVNpemVQZXJQYWdlKGN1cnJTaXplUGVyUGFnZSwgY3VyclBhZ2UpIHtcbiAgICBjb25zdCB7IHBhZ2luYXRpb246IHsgb3B0aW9ucyB9IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgaWYgKG9wdGlvbnMub25TaXplUGVyUGFnZUNoYW5nZSkge1xuICAgICAgb3B0aW9ucy5vblNpemVQZXJQYWdlQ2hhbmdlKGN1cnJTaXplUGVyUGFnZSwgY3VyclBhZ2UpO1xuICAgIH1cblxuICAgIHRoaXMuY3VyclBhZ2UgPSBjdXJyUGFnZTtcbiAgICB0aGlzLmN1cnJTaXplUGVyUGFnZSA9IGN1cnJTaXplUGVyUGFnZTtcblxuICAgIGlmICh0aGlzLmlzUmVtb3RlUGFnaW5hdGlvbigpKSB7XG4gICAgICB0aGlzLmdldFBhZ2luYXRpb25SZW1vdGVFbWl0dGVyKCkuZW1pdCgncGFnaW5hdGlvbkNoYW5nZScsIGN1cnJQYWdlLCBjdXJyU2l6ZVBlclBhZ2UpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmZvcmNlVXBkYXRlKCk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgcGFnaW5hdGlvblByb3BzID0gdGhpcy5nZXRQYWdpbmF0aW9uUHJvcHMoKTtcbiAgICBjb25zdCBwYWdpbmF0aW9uID0ge1xuICAgICAgLi4udGhpcy5wcm9wcy5wYWdpbmF0aW9uLFxuICAgICAgb3B0aW9uczogcGFnaW5hdGlvblByb3BzXG4gICAgfTtcblxuICAgIHJldHVybiAoXG4gICAgICA8U3RhdGVDb250ZXh0LlByb3ZpZGVyXG4gICAgICAgIHZhbHVlPXsge1xuICAgICAgICAgIHBhZ2luYXRpb25Qcm9wcyxcbiAgICAgICAgICBwYWdpbmF0aW9uVGFibGVQcm9wczoge1xuICAgICAgICAgICAgcGFnaW5hdGlvbixcbiAgICAgICAgICAgIHNldFBhZ2luYXRpb25SZW1vdGVFbWl0dGVyOiB0aGlzLnNldFBhZ2luYXRpb25SZW1vdGVFbWl0dGVyLFxuICAgICAgICAgICAgZGF0YUNoYW5nZUxpc3RlbmVyOiB0aGlzLmRhdGFDaGFuZ2VMaXN0ZW5lclxuICAgICAgICAgIH1cbiAgICAgICAgfSB9XG4gICAgICA+XG4gICAgICAgIHsgdGhpcy5wcm9wcy5jaGlsZHJlbiB9XG4gICAgICA8L1N0YXRlQ29udGV4dC5Qcm92aWRlcj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+ICh7XG4gIFByb3ZpZGVyOiBTdGF0ZVByb3ZpZGVyLFxuICBDb25zdW1lcjogU3RhdGVDb250ZXh0LkNvbnN1bWVyXG59KTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9zdGF0ZS1jb250ZXh0LmpzIiwiaW1wb3J0IENvbnN0IGZyb20gJy4vY29uc3QnO1xuXG5jb25zdCBnZXROb3JtYWxpemVkUGFnZSA9IChcbiAgcGFnZSxcbiAgcGFnZVN0YXJ0SW5kZXhcbikgPT4ge1xuICBjb25zdCBvZmZzZXQgPSBNYXRoLmFicygxIC0gcGFnZVN0YXJ0SW5kZXgpO1xuICByZXR1cm4gcGFnZSArIG9mZnNldDtcbn07XG5cbmNvbnN0IGVuZEluZGV4ID0gKFxuICBwYWdlLFxuICBzaXplUGVyUGFnZSxcbiAgcGFnZVN0YXJ0SW5kZXhcbikgPT4gKGdldE5vcm1hbGl6ZWRQYWdlKHBhZ2UsIHBhZ2VTdGFydEluZGV4KSAqIHNpemVQZXJQYWdlKSAtIDE7XG5cbmNvbnN0IHN0YXJ0SW5kZXggPSAoXG4gIGVuZCxcbiAgc2l6ZVBlclBhZ2UsXG4pID0+IGVuZCAtIChzaXplUGVyUGFnZSAtIDEpO1xuXG5leHBvcnQgY29uc3QgYWxpZ25QYWdlID0gKFxuICBkYXRhU2l6ZSxcbiAgcHJldkRhdGFTaXplLFxuICBwYWdlLFxuICBzaXplUGVyUGFnZSxcbiAgcGFnZVN0YXJ0SW5kZXhcbikgPT4ge1xuICBpZiAocHJldkRhdGFTaXplIDwgZGF0YVNpemUpIHJldHVybiBwYWdlO1xuICBpZiAocGFnZSA8IHBhZ2VTdGFydEluZGV4KSByZXR1cm4gcGFnZVN0YXJ0SW5kZXg7XG4gIGlmIChkYXRhU2l6ZSA8PSAwKSByZXR1cm4gcGFnZVN0YXJ0SW5kZXg7XG4gIGlmICgocGFnZSA+PSAoTWF0aC5mbG9vcihkYXRhU2l6ZSAvIHNpemVQZXJQYWdlKSArIHBhZ2VTdGFydEluZGV4KSkgJiYgcGFnZVN0YXJ0SW5kZXggPT09IDEpIHtcbiAgICByZXR1cm4gTWF0aC5jZWlsKGRhdGFTaXplIC8gc2l6ZVBlclBhZ2UpO1xuICB9XG4gIGlmIChwYWdlID49IE1hdGguZmxvb3IoZGF0YVNpemUgLyBzaXplUGVyUGFnZSkgJiYgcGFnZVN0YXJ0SW5kZXggPT09IDApIHtcbiAgICBjb25zdCBuZXdQYWdlID0gTWF0aC5jZWlsKGRhdGFTaXplIC8gc2l6ZVBlclBhZ2UpO1xuICAgIHJldHVybiBuZXdQYWdlIC0gTWF0aC5hYnMoKENvbnN0LlBBR0VfU1RBUlRfSU5ERVggLSBwYWdlU3RhcnRJbmRleCkpO1xuICB9XG4gIHJldHVybiBwYWdlO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEJ5Q3VyclBhZ2UgPSAoXG4gIGRhdGEsXG4gIHBhZ2UsXG4gIHNpemVQZXJQYWdlLFxuICBwYWdlU3RhcnRJbmRleFxuKSA9PiB7XG4gIGNvbnN0IGRhdGFTaXplID0gZGF0YS5sZW5ndGg7XG4gIGlmICghZGF0YVNpemUpIHJldHVybiBbXTtcblxuICBjb25zdCBlbmQgPSBlbmRJbmRleChwYWdlLCBzaXplUGVyUGFnZSwgcGFnZVN0YXJ0SW5kZXgpO1xuICBjb25zdCBzdGFydCA9IHN0YXJ0SW5kZXgoZW5kLCBzaXplUGVyUGFnZSk7XG5cbiAgY29uc3QgcmVzdWx0ID0gW107XG4gIGZvciAobGV0IGkgPSBzdGFydDsgaSA8PSBlbmQ7IGkgKz0gMSkge1xuICAgIHJlc3VsdC5wdXNoKGRhdGFbaV0pO1xuICAgIGlmIChpICsgMSA9PT0gZGF0YVNpemUpIGJyZWFrO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2UuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG4vLyBjb25zaWRlciB0byBoYXZlIGEgY29tbW9uIGxpYj8xXG5leHBvcnQgY29uc3QgQm9vdHN0cmFwQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoe1xuICBib290c3RyYXA0OiBmYWxzZVxufSk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvYm9vdHN0cmFwLmpzIiwiLyogZXNsaW50IHJlYWN0L3Byb3AtdHlwZXM6IDAgKi9cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBwYWdlUmVzb2x2ZXIgZnJvbSAnLi9wYWdlLXJlc29sdmVyJztcbmltcG9ydCBTaXplUGVyUGFnZURyb3BEb3duIGZyb20gJy4vc2l6ZS1wZXItcGFnZS1kcm9wZG93bic7XG5cbmNvbnN0IHNpemVQZXJQYWdlRHJvcGRvd25BZGFwdGVyID0gV3JhcHBlZENvbXBvbmVudCA9PlxuICBjbGFzcyBTaXplUGVyUGFnZURyb3Bkb3duQWRhcHRlciBleHRlbmRzIHBhZ2VSZXNvbHZlcihDb21wb25lbnQpIHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgdGhpcy5jbG9zZURyb3BEb3duID0gdGhpcy5jbG9zZURyb3BEb3duLmJpbmQodGhpcyk7XG4gICAgICB0aGlzLnRvZ2dsZURyb3BEb3duID0gdGhpcy50b2dnbGVEcm9wRG93bi5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy5oYW5kbGVDaGFuZ2VTaXplUGVyUGFnZSA9IHRoaXMuaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2UuYmluZCh0aGlzKTtcbiAgICAgIHRoaXMuc3RhdGUgPSB7IGRyb3Bkb3duT3BlbjogZmFsc2UgfTtcbiAgICB9XG5cbiAgICB0b2dnbGVEcm9wRG93bigpIHtcbiAgICAgIGNvbnN0IGRyb3Bkb3duT3BlbiA9ICF0aGlzLnN0YXRlLmRyb3Bkb3duT3BlbjtcbiAgICAgIHRoaXMuc2V0U3RhdGUoKCkgPT4gKHsgZHJvcGRvd25PcGVuIH0pKTtcbiAgICB9XG5cbiAgICBjbG9zZURyb3BEb3duKCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSgoKSA9PiAoeyBkcm9wZG93bk9wZW46IGZhbHNlIH0pKTtcbiAgICB9XG5cbiAgICBoYW5kbGVDaGFuZ2VTaXplUGVyUGFnZShzaXplUGVyUGFnZSkge1xuICAgICAgdGhpcy5wcm9wcy5vblNpemVQZXJQYWdlQ2hhbmdlKHNpemVQZXJQYWdlKTtcbiAgICAgIHRoaXMuY2xvc2VEcm9wRG93bigpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgc2l6ZVBlclBhZ2VMaXN0LFxuICAgICAgICBjdXJyU2l6ZVBlclBhZ2UsXG4gICAgICAgIGhpZGVTaXplUGVyUGFnZSxcbiAgICAgICAgc2l6ZVBlclBhZ2VSZW5kZXJlcixcbiAgICAgICAgc2l6ZVBlclBhZ2VPcHRpb25SZW5kZXJlclxuICAgICAgfSA9IHRoaXMucHJvcHM7XG4gICAgICBjb25zdCB7IGRyb3Bkb3duT3Blbjogb3BlbiB9ID0gdGhpcy5zdGF0ZTtcblxuICAgICAgaWYgKHNpemVQZXJQYWdlTGlzdC5sZW5ndGggPiAxICYmICFoaWRlU2l6ZVBlclBhZ2UpIHtcbiAgICAgICAgaWYgKHNpemVQZXJQYWdlUmVuZGVyZXIpIHtcbiAgICAgICAgICByZXR1cm4gc2l6ZVBlclBhZ2VSZW5kZXJlcih7XG4gICAgICAgICAgICBvcHRpb25zOiB0aGlzLmNhbGN1bGF0ZVNpemVQZXJQYWdlU3RhdHVzKCksXG4gICAgICAgICAgICBjdXJyU2l6ZVBlclBhZ2U6IGAke2N1cnJTaXplUGVyUGFnZX1gLFxuICAgICAgICAgICAgb25TaXplUGVyUGFnZUNoYW5nZTogdGhpcy5oYW5kbGVDaGFuZ2VTaXplUGVyUGFnZVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPFdyYXBwZWRDb21wb25lbnRcbiAgICAgICAgICAgIHsgLi4udGhpcy5wcm9wcyB9XG4gICAgICAgICAgICBjdXJyU2l6ZVBlclBhZ2U9eyBgJHtjdXJyU2l6ZVBlclBhZ2V9YCB9XG4gICAgICAgICAgICBvcHRpb25zPXsgdGhpcy5jYWxjdWxhdGVTaXplUGVyUGFnZVN0YXR1cygpIH1cbiAgICAgICAgICAgIG9wdGlvblJlbmRlcmVyPXsgc2l6ZVBlclBhZ2VPcHRpb25SZW5kZXJlciB9XG4gICAgICAgICAgICBvblNpemVQZXJQYWdlQ2hhbmdlPXsgdGhpcy5oYW5kbGVDaGFuZ2VTaXplUGVyUGFnZSB9XG4gICAgICAgICAgICBvbkNsaWNrPXsgdGhpcy50b2dnbGVEcm9wRG93biB9XG4gICAgICAgICAgICBvbkJsdXI9eyB0aGlzLmNsb3NlRHJvcERvd24gfVxuICAgICAgICAgICAgb3Blbj17IG9wZW4gfVxuICAgICAgICAgIC8+XG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH07XG5cblxuZXhwb3J0IGNvbnN0IFNpemVQZXJQYWdlRHJvcGRvd25XaXRoQWRhcHRlciA9IHNpemVQZXJQYWdlRHJvcGRvd25BZGFwdGVyKFNpemVQZXJQYWdlRHJvcERvd24pO1xuZXhwb3J0IGRlZmF1bHQgc2l6ZVBlclBhZ2VEcm9wZG93bkFkYXB0ZXI7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc2l6ZS1wZXItcGFnZS1kcm9wZG93bi1hZGFwdGVyLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBCb290c3RyYXBDb250ZXh0IH0gZnJvbSAnLi9ib290c3RyYXAnO1xuaW1wb3J0IFNpemVQZXJQYWdlT3B0aW9uIGZyb20gJy4vc2l6ZS1wZXItcGFnZS1vcHRpb24nO1xuXG5jb25zdCBzaXplUGVyUGFnZURlZmF1bHRDbGFzcyA9ICdyZWFjdC1icy10YWJsZS1zaXplUGVyUGFnZS1kcm9wZG93bic7XG5cbmNvbnN0IFNpemVQZXJQYWdlRHJvcERvd24gPSAocHJvcHMpID0+IHtcbiAgY29uc3Qge1xuICAgIG9wZW4sXG4gICAgaGlkZGVuLFxuICAgIG9uQ2xpY2ssXG4gICAgb25CbHVyLFxuICAgIG9wdGlvbnMsXG4gICAgY2xhc3NOYW1lLFxuICAgIHZhcmlhdGlvbixcbiAgICBidG5Db250ZXh0dWFsLFxuICAgIG9wdGlvblJlbmRlcmVyLFxuICAgIGN1cnJTaXplUGVyUGFnZSxcbiAgICBvblNpemVQZXJQYWdlQ2hhbmdlXG4gIH0gPSBwcm9wcztcblxuICBjb25zdCBkcm9wRG93blN0eWxlID0geyB2aXNpYmlsaXR5OiBoaWRkZW4gPyAnaGlkZGVuJyA6ICd2aXNpYmxlJyB9O1xuICBjb25zdCBvcGVuQ2xhc3MgPSBvcGVuID8gJ29wZW4gc2hvdycgOiAnJztcbiAgY29uc3QgZHJvcGRvd25DbGFzc2VzID0gY3MoXG4gICAgb3BlbkNsYXNzLFxuICAgIHNpemVQZXJQYWdlRGVmYXVsdENsYXNzLFxuICAgIHZhcmlhdGlvbixcbiAgICBjbGFzc05hbWUsXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8Qm9vdHN0cmFwQ29udGV4dC5Db25zdW1lcj5cbiAgICAgIHtcbiAgICAgICAgKHsgYm9vdHN0cmFwNCB9KSA9PiAoXG4gICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgIHN0eWxlPXsgZHJvcERvd25TdHlsZSB9XG4gICAgICAgICAgICBjbGFzc05hbWU9eyBkcm9wZG93bkNsYXNzZXMgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgaWQ9XCJwYWdlRHJvcERvd25cIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9eyBgYnRuICR7YnRuQ29udGV4dHVhbH0gZHJvcGRvd24tdG9nZ2xlYCB9XG4gICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPVwiZHJvcGRvd25cIlxuICAgICAgICAgICAgICBhcmlhLWV4cGFuZGVkPXsgb3BlbiB9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9eyBvbkNsaWNrIH1cbiAgICAgICAgICAgICAgb25CbHVyPXsgb25CbHVyIH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgeyBjdXJyU2l6ZVBlclBhZ2UgfVxuICAgICAgICAgICAgICB7ICcgJyB9XG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBib290c3RyYXA0ID8gbnVsbCA6IChcbiAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjYXJldFwiIC8+XG4gICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDx1bFxuICAgICAgICAgICAgICBjbGFzc05hbWU9eyBgZHJvcGRvd24tbWVudSAke29wZW5DbGFzc31gIH1cbiAgICAgICAgICAgICAgcm9sZT1cIm1lbnVcIlxuICAgICAgICAgICAgICBhcmlhLWxhYmVsbGVkYnk9XCJwYWdlRHJvcERvd25cIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5tYXAoKG9wdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvblJlbmRlcmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvcHRpb25SZW5kZXJlcih7XG4gICAgICAgICAgICAgICAgICAgICAgLi4ub3B0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgIG9uU2l6ZVBlclBhZ2VDaGFuZ2VcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICA8U2l6ZVBlclBhZ2VPcHRpb25cbiAgICAgICAgICAgICAgICAgICAgICB7IC4uLm9wdGlvbiB9XG4gICAgICAgICAgICAgICAgICAgICAga2V5PXsgb3B0aW9uLnRleHQgfVxuICAgICAgICAgICAgICAgICAgICAgIGJvb3RzdHJhcDQ9eyBib290c3RyYXA0IH1cbiAgICAgICAgICAgICAgICAgICAgICBvblNpemVQZXJQYWdlQ2hhbmdlPXsgb25TaXplUGVyUGFnZUNoYW5nZSB9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICApXG4gICAgICB9XG4gICAgPC9Cb290c3RyYXBDb250ZXh0LkNvbnN1bWVyPlxuICApO1xufTtcblxuU2l6ZVBlclBhZ2VEcm9wRG93bi5wcm9wVHlwZXMgPSB7XG4gIGN1cnJTaXplUGVyUGFnZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBvcHRpb25zOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgb25CbHVyOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBvblNpemVQZXJQYWdlQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBvcGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgaGlkZGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgYnRuQ29udGV4dHVhbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgdmFyaWF0aW9uOiBQcm9wVHlwZXMub25lT2YoWydkcm9wZG93bicsICdkcm9wdXAnXSksXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgb3B0aW9uUmVuZGVyZXI6IFByb3BUeXBlcy5mdW5jXG59O1xuU2l6ZVBlclBhZ2VEcm9wRG93bi5kZWZhdWx0UHJvcHMgPSB7XG4gIG9wZW46IGZhbHNlLFxuICBoaWRkZW46IGZhbHNlLFxuICBidG5Db250ZXh0dWFsOiAnYnRuLWRlZmF1bHQgYnRuLXNlY29uZGFyeScsXG4gIHZhcmlhdGlvbjogJ2Ryb3Bkb3duJyxcbiAgY2xhc3NOYW1lOiAnJyxcbiAgb3B0aW9uUmVuZGVyZXI6IG51bGxcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgU2l6ZVBlclBhZ2VEcm9wRG93bjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9zaXplLXBlci1wYWdlLWRyb3Bkb3duLmpzIiwiLyogZXNsaW50IHJlYWN0L3Byb3AtdHlwZXM6IDAgKi9cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBwYWdlUmVzb2x2ZXIgZnJvbSAnLi9wYWdlLXJlc29sdmVyJztcbmltcG9ydCBQYWdpbmF0aW9uTGlzdCBmcm9tICcuL3BhZ2luYXRpb24tbGlzdCc7XG5cbmNvbnN0IHBhZ2luYXRpb25MaXN0QWRhcHRlciA9IFdyYXBwZWRDb21wb25lbnQgPT5cbiAgY2xhc3MgUGFnaW5hdGlvbkxpc3RBZGFwdGVyIGV4dGVuZHMgcGFnZVJlc29sdmVyKENvbXBvbmVudCkge1xuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHsgbGFzdFBhZ2UsIHRvdGFsUGFnZXMsIHBhZ2VCdXR0b25SZW5kZXJlciwgb25QYWdlQ2hhbmdlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgY29uc3QgcGFnZXMgPSB0aGlzLmNhbGN1bGF0ZVBhZ2VTdGF0dXModGhpcy5jYWxjdWxhdGVQYWdlcyh0b3RhbFBhZ2VzLCBsYXN0UGFnZSksIGxhc3RQYWdlKTtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxXcmFwcGVkQ29tcG9uZW50XG4gICAgICAgICAgcGFnZUJ1dHRvblJlbmRlcmVyPXsgcGFnZUJ1dHRvblJlbmRlcmVyIH1cbiAgICAgICAgICBvblBhZ2VDaGFuZ2U9eyBvblBhZ2VDaGFuZ2UgfVxuICAgICAgICAgIHBhZ2VzPXsgcGFnZXMgfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICB9XG4gIH07XG5cblxuZXhwb3J0IGNvbnN0IFBhZ2luYXRpb25MaXN0V2l0aEFkYXB0ZXIgPSBwYWdpbmF0aW9uTGlzdEFkYXB0ZXIoUGFnaW5hdGlvbkxpc3QpO1xuZXhwb3J0IGRlZmF1bHQgcGFnaW5hdGlvbkxpc3RBZGFwdGVyO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24tbGlzdC1hZGFwdGVyLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBQYWdlQnV0dG9uIGZyb20gJy4vcGFnZS1idXR0b24nO1xuXG5jb25zdCBQYWdpbmF0b25MaXN0ID0gcHJvcHMgPT4gKFxuICA8dWwgY2xhc3NOYW1lPVwicGFnaW5hdGlvbiByZWFjdC1ib290c3RyYXAtdGFibGUtcGFnZS1idG5zLXVsXCI+XG4gICAge1xuICAgICAgcHJvcHMucGFnZXMubWFwKChwYWdlUHJvcHMpID0+IHtcbiAgICAgICAgaWYgKHByb3BzLnBhZ2VCdXR0b25SZW5kZXJlcikge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5wYWdlQnV0dG9uUmVuZGVyZXIoe1xuICAgICAgICAgICAgLi4ucGFnZVByb3BzLFxuICAgICAgICAgICAgb25QYWdlQ2hhbmdlOiBwcm9wcy5vblBhZ2VDaGFuZ2VcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxQYWdlQnV0dG9uXG4gICAgICAgICAgICBrZXk9eyBwYWdlUHJvcHMucGFnZSB9XG4gICAgICAgICAgICB7IC4uLnBhZ2VQcm9wcyB9XG4gICAgICAgICAgICBvblBhZ2VDaGFuZ2U9eyBwcm9wcy5vblBhZ2VDaGFuZ2UgfVxuICAgICAgICAgIC8+XG4gICAgICAgICk7XG4gICAgICB9KVxuICAgIH1cbiAgPC91bD5cbik7XG5cblBhZ2luYXRvbkxpc3QucHJvcFR5cGVzID0ge1xuICBwYWdlczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBwYWdlOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICAgIFByb3BUeXBlcy5ub2RlLFxuICAgICAgUHJvcFR5cGVzLm51bWJlcixcbiAgICAgIFByb3BUeXBlcy5zdHJpbmdcbiAgICBdKSxcbiAgICBhY3RpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIGRpc2FibGU6IFByb3BUeXBlcy5ib29sLFxuICAgIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nXG4gIH0pKS5pc1JlcXVpcmVkLFxuICBvblBhZ2VDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHBhZ2VCdXR0b25SZW5kZXJlcjogUHJvcFR5cGVzLmZ1bmNcbn07XG5cblBhZ2luYXRvbkxpc3QuZGVmYXVsdFByb3BzID0ge1xuICBwYWdlQnV0dG9uUmVuZGVyZXI6IG51bGxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBhZ2luYXRvbkxpc3Q7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnaW5hdGlvbi1saXN0LmpzIiwiLyogZXNsaW50IHJlYWN0L3Byb3AtdHlwZXM6IDAgKi9cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBwYWdlUmVzb2x2ZXIgZnJvbSAnLi9wYWdlLXJlc29sdmVyJztcbmltcG9ydCBQYWdpbmF0aW9uVG90YWwgZnJvbSAnLi9wYWdpbmF0aW9uLXRvdGFsJztcblxuY29uc3QgcGFnaW5hdGlvblRvdGFsQWRhcHRlciA9IFdyYXBwZWRDb21wb25lbnQgPT5cbiAgY2xhc3MgUGFnaW5hdGlvblRvdGFsQWRhcHRlciBleHRlbmRzIHBhZ2VSZXNvbHZlcihDb21wb25lbnQpIHtcbiAgICByZW5kZXIoKSB7XG4gICAgICBjb25zdCBbZnJvbSwgdG9dID0gdGhpcy5jYWxjdWxhdGVGcm9tVG8oKTtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxXcmFwcGVkQ29tcG9uZW50XG4gICAgICAgICAgZnJvbT17IGZyb20gfVxuICAgICAgICAgIHRvPXsgdG8gfVxuICAgICAgICAgIGRhdGFTaXplPXsgdGhpcy5wcm9wcy5kYXRhU2l6ZSB9XG4gICAgICAgICAgcGFnaW5hdGlvblRvdGFsUmVuZGVyZXI9eyB0aGlzLnByb3BzLnBhZ2luYXRpb25Ub3RhbFJlbmRlcmVyIH1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgfVxuICB9O1xuXG5cbmV4cG9ydCBjb25zdCBQYWdpbmF0aW9uVG90YWxXaXRoQWRhcHRlciA9IHBhZ2luYXRpb25Ub3RhbEFkYXB0ZXIoUGFnaW5hdGlvblRvdGFsKTtcbmV4cG9ydCBkZWZhdWx0IHBhZ2luYXRpb25Ub3RhbEFkYXB0ZXI7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnaW5hdGlvbi10b3RhbC1hZGFwdGVyLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNvbnN0IFBhZ2luYXRpb25Ub3RhbCA9IChwcm9wcykgPT4ge1xuICBpZiAocHJvcHMucGFnaW5hdGlvblRvdGFsUmVuZGVyZXIpIHtcbiAgICByZXR1cm4gcHJvcHMucGFnaW5hdGlvblRvdGFsUmVuZGVyZXIocHJvcHMuZnJvbSwgcHJvcHMudG8sIHByb3BzLmRhdGFTaXplKTtcbiAgfVxuICByZXR1cm4gKFxuICAgIDxzcGFuIGNsYXNzTmFtZT1cInJlYWN0LWJvb3RzdHJhcC10YWJsZS1wYWdpbmF0aW9uLXRvdGFsXCI+XG4gICAgICAmbmJzcDtTaG93aW5nIHJvd3MgeyBwcm9wcy5mcm9tIH0gdG8mbmJzcDt7IHByb3BzLnRvIH0gb2YmbmJzcDt7IHByb3BzLmRhdGFTaXplIH1cbiAgICA8L3NwYW4+XG4gICk7XG59O1xuXG5QYWdpbmF0aW9uVG90YWwucHJvcFR5cGVzID0ge1xuICBmcm9tOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIHRvOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIGRhdGFTaXplOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIHBhZ2luYXRpb25Ub3RhbFJlbmRlcmVyOiBQcm9wVHlwZXMuZnVuY1xufTtcblxuUGFnaW5hdGlvblRvdGFsLmRlZmF1bHRQcm9wcyA9IHtcbiAgcGFnaW5hdGlvblRvdGFsUmVuZGVyZXI6IHVuZGVmaW5lZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgUGFnaW5hdGlvblRvdGFsO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24tdG90YWwuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBjcmVhdGVCYXNlQ29udGV4dCBmcm9tICcuL3NyYy9zdGF0ZS1jb250ZXh0JztcbmltcG9ydCBjcmVhdGVEYXRhQ29udGV4dCBmcm9tICcuL3NyYy9kYXRhLWNvbnRleHQnO1xuaW1wb3J0IFBhZ2luYXRpb25MaXN0U3RhbmRhbG9uZSBmcm9tICcuL3NyYy9wYWdpbmF0aW9uLWxpc3Qtc3RhbmRhbG9uZSc7XG5pbXBvcnQgU2l6ZVBlclBhZ2VEcm9wZG93blN0YW5kYWxvbmUgZnJvbSAnLi9zcmMvc2l6ZS1wZXItcGFnZS1kcm9wZG93bi1zdGFuZGFsb25lJztcbmltcG9ydCBQYWdpbmF0aW9uVG90YWxTdGFuZGFsb25lIGZyb20gJy4vc3JjL3BhZ2luYXRpb24tdG90YWwtc3RhbmRhbG9uZSc7XG5cbmV4cG9ydCBkZWZhdWx0IChvcHRpb25zID0ge30pID0+ICh7XG4gIGNyZWF0ZUNvbnRleHQ6IGNyZWF0ZURhdGFDb250ZXh0LFxuICBvcHRpb25zXG59KTtcblxuY29uc3QgeyBQcm92aWRlciwgQ29uc3VtZXIgfSA9IGNyZWF0ZUJhc2VDb250ZXh0KCk7XG5cbmNvbnN0IEN1c3RvbWl6YWJsZVByb3ZpZGVyID0gcHJvcHMgPT4gKFxuICA8UHJvdmlkZXIgeyAuLi5wcm9wcyB9PlxuICAgIDxDb25zdW1lcj57IHBhZ2luYXRpb25Qcm9wcyA9PiBwcm9wcy5jaGlsZHJlbihwYWdpbmF0aW9uUHJvcHMpIH08L0NvbnN1bWVyPlxuICA8L1Byb3ZpZGVyPlxuKTtcblxuQ3VzdG9taXphYmxlUHJvdmlkZXIucHJvcFR5cGVzID0ge1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGNvbnN0IFBhZ2luYXRpb25Qcm92aWRlciA9IEN1c3RvbWl6YWJsZVByb3ZpZGVyO1xuZXhwb3J0IHsgUGFnaW5hdGlvbkxpc3RTdGFuZGFsb25lLCBTaXplUGVyUGFnZURyb3Bkb3duU3RhbmRhbG9uZSwgUGFnaW5hdGlvblRvdGFsU3RhbmRhbG9uZSB9O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3IvaW5kZXguanMiLCIvKipcbiAqIENvcHlyaWdodCAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBlbXB0eUZ1bmN0aW9uID0gcmVxdWlyZSgnZmJqcy9saWIvZW1wdHlGdW5jdGlvbicpO1xudmFyIGludmFyaWFudCA9IHJlcXVpcmUoJ2ZianMvbGliL2ludmFyaWFudCcpO1xudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGludmFyaWFudChcbiAgICAgIGZhbHNlLFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW1cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGVtcHR5RnVuY3Rpb247XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qc1xuLy8gbW9kdWxlIGlkID0gMTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eUZ1bmN0aW9uLmpzXG4vLyBtb2R1bGUgaWQgPSAxOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpO1xuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgKyAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KSk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pbnZhcmlhbnQuanNcbi8vIG1vZHVsZSBpZCA9IDE5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanNcbi8vIG1vZHVsZSBpZCA9IDIwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbmZ1bmN0aW9uIEV2ZW50RW1pdHRlcigpIHtcbiAgdGhpcy5fZXZlbnRzID0gdGhpcy5fZXZlbnRzIHx8IHt9O1xuICB0aGlzLl9tYXhMaXN0ZW5lcnMgPSB0aGlzLl9tYXhMaXN0ZW5lcnMgfHwgdW5kZWZpbmVkO1xufVxubW9kdWxlLmV4cG9ydHMgPSBFdmVudEVtaXR0ZXI7XG5cbi8vIEJhY2t3YXJkcy1jb21wYXQgd2l0aCBub2RlIDAuMTAueFxuRXZlbnRFbWl0dGVyLkV2ZW50RW1pdHRlciA9IEV2ZW50RW1pdHRlcjtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5fZXZlbnRzID0gdW5kZWZpbmVkO1xuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5fbWF4TGlzdGVuZXJzID0gdW5kZWZpbmVkO1xuXG4vLyBCeSBkZWZhdWx0IEV2ZW50RW1pdHRlcnMgd2lsbCBwcmludCBhIHdhcm5pbmcgaWYgbW9yZSB0aGFuIDEwIGxpc3RlbmVycyBhcmVcbi8vIGFkZGVkIHRvIGl0LiBUaGlzIGlzIGEgdXNlZnVsIGRlZmF1bHQgd2hpY2ggaGVscHMgZmluZGluZyBtZW1vcnkgbGVha3MuXG5FdmVudEVtaXR0ZXIuZGVmYXVsdE1heExpc3RlbmVycyA9IDEwO1xuXG4vLyBPYnZpb3VzbHkgbm90IGFsbCBFbWl0dGVycyBzaG91bGQgYmUgbGltaXRlZCB0byAxMC4gVGhpcyBmdW5jdGlvbiBhbGxvd3Ncbi8vIHRoYXQgdG8gYmUgaW5jcmVhc2VkLiBTZXQgdG8gemVybyBmb3IgdW5saW1pdGVkLlxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5zZXRNYXhMaXN0ZW5lcnMgPSBmdW5jdGlvbihuKSB7XG4gIGlmICghaXNOdW1iZXIobikgfHwgbiA8IDAgfHwgaXNOYU4obikpXG4gICAgdGhyb3cgVHlwZUVycm9yKCduIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXInKTtcbiAgdGhpcy5fbWF4TGlzdGVuZXJzID0gbjtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbih0eXBlKSB7XG4gIHZhciBlciwgaGFuZGxlciwgbGVuLCBhcmdzLCBpLCBsaXN0ZW5lcnM7XG5cbiAgaWYgKCF0aGlzLl9ldmVudHMpXG4gICAgdGhpcy5fZXZlbnRzID0ge307XG5cbiAgLy8gSWYgdGhlcmUgaXMgbm8gJ2Vycm9yJyBldmVudCBsaXN0ZW5lciB0aGVuIHRocm93LlxuICBpZiAodHlwZSA9PT0gJ2Vycm9yJykge1xuICAgIGlmICghdGhpcy5fZXZlbnRzLmVycm9yIHx8XG4gICAgICAgIChpc09iamVjdCh0aGlzLl9ldmVudHMuZXJyb3IpICYmICF0aGlzLl9ldmVudHMuZXJyb3IubGVuZ3RoKSkge1xuICAgICAgZXIgPSBhcmd1bWVudHNbMV07XG4gICAgICBpZiAoZXIgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICB0aHJvdyBlcjsgLy8gVW5oYW5kbGVkICdlcnJvcicgZXZlbnRcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEF0IGxlYXN0IGdpdmUgc29tZSBraW5kIG9mIGNvbnRleHQgdG8gdGhlIHVzZXJcbiAgICAgICAgdmFyIGVyciA9IG5ldyBFcnJvcignVW5jYXVnaHQsIHVuc3BlY2lmaWVkIFwiZXJyb3JcIiBldmVudC4gKCcgKyBlciArICcpJyk7XG4gICAgICAgIGVyci5jb250ZXh0ID0gZXI7XG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBoYW5kbGVyID0gdGhpcy5fZXZlbnRzW3R5cGVdO1xuXG4gIGlmIChpc1VuZGVmaW5lZChoYW5kbGVyKSlcbiAgICByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKGlzRnVuY3Rpb24oaGFuZGxlcikpIHtcbiAgICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgIC8vIGZhc3QgY2FzZXNcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgaGFuZGxlci5jYWxsKHRoaXMpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgMjpcbiAgICAgICAgaGFuZGxlci5jYWxsKHRoaXMsIGFyZ3VtZW50c1sxXSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAzOlxuICAgICAgICBoYW5kbGVyLmNhbGwodGhpcywgYXJndW1lbnRzWzFdLCBhcmd1bWVudHNbMl0pO1xuICAgICAgICBicmVhaztcbiAgICAgIC8vIHNsb3dlclxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gICAgICAgIGhhbmRsZXIuYXBwbHkodGhpcywgYXJncyk7XG4gICAgfVxuICB9IGVsc2UgaWYgKGlzT2JqZWN0KGhhbmRsZXIpKSB7XG4gICAgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gICAgbGlzdGVuZXJzID0gaGFuZGxlci5zbGljZSgpO1xuICAgIGxlbiA9IGxpc3RlbmVycy5sZW5ndGg7XG4gICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKVxuICAgICAgbGlzdGVuZXJzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgdmFyIG07XG5cbiAgaWYgKCFpc0Z1bmN0aW9uKGxpc3RlbmVyKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ2xpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuXG4gIGlmICghdGhpcy5fZXZlbnRzKVxuICAgIHRoaXMuX2V2ZW50cyA9IHt9O1xuXG4gIC8vIFRvIGF2b2lkIHJlY3Vyc2lvbiBpbiB0aGUgY2FzZSB0aGF0IHR5cGUgPT09IFwibmV3TGlzdGVuZXJcIiEgQmVmb3JlXG4gIC8vIGFkZGluZyBpdCB0byB0aGUgbGlzdGVuZXJzLCBmaXJzdCBlbWl0IFwibmV3TGlzdGVuZXJcIi5cbiAgaWYgKHRoaXMuX2V2ZW50cy5uZXdMaXN0ZW5lcilcbiAgICB0aGlzLmVtaXQoJ25ld0xpc3RlbmVyJywgdHlwZSxcbiAgICAgICAgICAgICAgaXNGdW5jdGlvbihsaXN0ZW5lci5saXN0ZW5lcikgP1xuICAgICAgICAgICAgICBsaXN0ZW5lci5saXN0ZW5lciA6IGxpc3RlbmVyKTtcblxuICBpZiAoIXRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICAvLyBPcHRpbWl6ZSB0aGUgY2FzZSBvZiBvbmUgbGlzdGVuZXIuIERvbid0IG5lZWQgdGhlIGV4dHJhIGFycmF5IG9iamVjdC5cbiAgICB0aGlzLl9ldmVudHNbdHlwZV0gPSBsaXN0ZW5lcjtcbiAgZWxzZSBpZiAoaXNPYmplY3QodGhpcy5fZXZlbnRzW3R5cGVdKSlcbiAgICAvLyBJZiB3ZSd2ZSBhbHJlYWR5IGdvdCBhbiBhcnJheSwganVzdCBhcHBlbmQuXG4gICAgdGhpcy5fZXZlbnRzW3R5cGVdLnB1c2gobGlzdGVuZXIpO1xuICBlbHNlXG4gICAgLy8gQWRkaW5nIHRoZSBzZWNvbmQgZWxlbWVudCwgbmVlZCB0byBjaGFuZ2UgdG8gYXJyYXkuXG4gICAgdGhpcy5fZXZlbnRzW3R5cGVdID0gW3RoaXMuX2V2ZW50c1t0eXBlXSwgbGlzdGVuZXJdO1xuXG4gIC8vIENoZWNrIGZvciBsaXN0ZW5lciBsZWFrXG4gIGlmIChpc09iamVjdCh0aGlzLl9ldmVudHNbdHlwZV0pICYmICF0aGlzLl9ldmVudHNbdHlwZV0ud2FybmVkKSB7XG4gICAgaWYgKCFpc1VuZGVmaW5lZCh0aGlzLl9tYXhMaXN0ZW5lcnMpKSB7XG4gICAgICBtID0gdGhpcy5fbWF4TGlzdGVuZXJzO1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gRXZlbnRFbWl0dGVyLmRlZmF1bHRNYXhMaXN0ZW5lcnM7XG4gICAgfVxuXG4gICAgaWYgKG0gJiYgbSA+IDAgJiYgdGhpcy5fZXZlbnRzW3R5cGVdLmxlbmd0aCA+IG0pIHtcbiAgICAgIHRoaXMuX2V2ZW50c1t0eXBlXS53YXJuZWQgPSB0cnVlO1xuICAgICAgY29uc29sZS5lcnJvcignKG5vZGUpIHdhcm5pbmc6IHBvc3NpYmxlIEV2ZW50RW1pdHRlciBtZW1vcnkgJyArXG4gICAgICAgICAgICAgICAgICAgICdsZWFrIGRldGVjdGVkLiAlZCBsaXN0ZW5lcnMgYWRkZWQuICcgK1xuICAgICAgICAgICAgICAgICAgICAnVXNlIGVtaXR0ZXIuc2V0TWF4TGlzdGVuZXJzKCkgdG8gaW5jcmVhc2UgbGltaXQuJyxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZXZlbnRzW3R5cGVdLmxlbmd0aCk7XG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUudHJhY2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gbm90IHN1cHBvcnRlZCBpbiBJRSAxMFxuICAgICAgICBjb25zb2xlLnRyYWNlKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uID0gRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lcjtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbmNlID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgaWYgKCFpc0Z1bmN0aW9uKGxpc3RlbmVyKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ2xpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuXG4gIHZhciBmaXJlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGcoKSB7XG4gICAgdGhpcy5yZW1vdmVMaXN0ZW5lcih0eXBlLCBnKTtcblxuICAgIGlmICghZmlyZWQpIHtcbiAgICAgIGZpcmVkID0gdHJ1ZTtcbiAgICAgIGxpc3RlbmVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9XG5cbiAgZy5saXN0ZW5lciA9IGxpc3RlbmVyO1xuICB0aGlzLm9uKHR5cGUsIGcpO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLy8gZW1pdHMgYSAncmVtb3ZlTGlzdGVuZXInIGV2ZW50IGlmZiB0aGUgbGlzdGVuZXIgd2FzIHJlbW92ZWRcbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXIgPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikge1xuICB2YXIgbGlzdCwgcG9zaXRpb24sIGxlbmd0aCwgaTtcblxuICBpZiAoIWlzRnVuY3Rpb24obGlzdGVuZXIpKVxuICAgIHRocm93IFR5cGVFcnJvcignbGlzdGVuZXIgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XG5cbiAgaWYgKCF0aGlzLl9ldmVudHMgfHwgIXRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICByZXR1cm4gdGhpcztcblxuICBsaXN0ID0gdGhpcy5fZXZlbnRzW3R5cGVdO1xuICBsZW5ndGggPSBsaXN0Lmxlbmd0aDtcbiAgcG9zaXRpb24gPSAtMTtcblxuICBpZiAobGlzdCA9PT0gbGlzdGVuZXIgfHxcbiAgICAgIChpc0Z1bmN0aW9uKGxpc3QubGlzdGVuZXIpICYmIGxpc3QubGlzdGVuZXIgPT09IGxpc3RlbmVyKSkge1xuICAgIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG4gICAgaWYgKHRoaXMuX2V2ZW50cy5yZW1vdmVMaXN0ZW5lcilcbiAgICAgIHRoaXMuZW1pdCgncmVtb3ZlTGlzdGVuZXInLCB0eXBlLCBsaXN0ZW5lcik7XG5cbiAgfSBlbHNlIGlmIChpc09iamVjdChsaXN0KSkge1xuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tID4gMDspIHtcbiAgICAgIGlmIChsaXN0W2ldID09PSBsaXN0ZW5lciB8fFxuICAgICAgICAgIChsaXN0W2ldLmxpc3RlbmVyICYmIGxpc3RbaV0ubGlzdGVuZXIgPT09IGxpc3RlbmVyKSkge1xuICAgICAgICBwb3NpdGlvbiA9IGk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChwb3NpdGlvbiA8IDApXG4gICAgICByZXR1cm4gdGhpcztcblxuICAgIGlmIChsaXN0Lmxlbmd0aCA9PT0gMSkge1xuICAgICAgbGlzdC5sZW5ndGggPSAwO1xuICAgICAgZGVsZXRlIHRoaXMuX2V2ZW50c1t0eXBlXTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGlzdC5zcGxpY2UocG9zaXRpb24sIDEpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9ldmVudHMucmVtb3ZlTGlzdGVuZXIpXG4gICAgICB0aGlzLmVtaXQoJ3JlbW92ZUxpc3RlbmVyJywgdHlwZSwgbGlzdGVuZXIpO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycyA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdmFyIGtleSwgbGlzdGVuZXJzO1xuXG4gIGlmICghdGhpcy5fZXZlbnRzKVxuICAgIHJldHVybiB0aGlzO1xuXG4gIC8vIG5vdCBsaXN0ZW5pbmcgZm9yIHJlbW92ZUxpc3RlbmVyLCBubyBuZWVkIHRvIGVtaXRcbiAgaWYgKCF0aGlzLl9ldmVudHMucmVtb3ZlTGlzdGVuZXIpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMClcbiAgICAgIHRoaXMuX2V2ZW50cyA9IHt9O1xuICAgIGVsc2UgaWYgKHRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICAgIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyBlbWl0IHJlbW92ZUxpc3RlbmVyIGZvciBhbGwgbGlzdGVuZXJzIG9uIGFsbCBldmVudHNcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICBmb3IgKGtleSBpbiB0aGlzLl9ldmVudHMpIHtcbiAgICAgIGlmIChrZXkgPT09ICdyZW1vdmVMaXN0ZW5lcicpIGNvbnRpbnVlO1xuICAgICAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoa2V5KTtcbiAgICB9XG4gICAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoJ3JlbW92ZUxpc3RlbmVyJyk7XG4gICAgdGhpcy5fZXZlbnRzID0ge307XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBsaXN0ZW5lcnMgPSB0aGlzLl9ldmVudHNbdHlwZV07XG5cbiAgaWYgKGlzRnVuY3Rpb24obGlzdGVuZXJzKSkge1xuICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXJzKTtcbiAgfSBlbHNlIGlmIChsaXN0ZW5lcnMpIHtcbiAgICAvLyBMSUZPIG9yZGVyXG4gICAgd2hpbGUgKGxpc3RlbmVycy5sZW5ndGgpXG4gICAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyc1tsaXN0ZW5lcnMubGVuZ3RoIC0gMV0pO1xuICB9XG4gIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVycyA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdmFyIHJldDtcbiAgaWYgKCF0aGlzLl9ldmVudHMgfHwgIXRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICByZXQgPSBbXTtcbiAgZWxzZSBpZiAoaXNGdW5jdGlvbih0aGlzLl9ldmVudHNbdHlwZV0pKVxuICAgIHJldCA9IFt0aGlzLl9ldmVudHNbdHlwZV1dO1xuICBlbHNlXG4gICAgcmV0ID0gdGhpcy5fZXZlbnRzW3R5cGVdLnNsaWNlKCk7XG4gIHJldHVybiByZXQ7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVyQ291bnQgPSBmdW5jdGlvbih0eXBlKSB7XG4gIGlmICh0aGlzLl9ldmVudHMpIHtcbiAgICB2YXIgZXZsaXN0ZW5lciA9IHRoaXMuX2V2ZW50c1t0eXBlXTtcblxuICAgIGlmIChpc0Z1bmN0aW9uKGV2bGlzdGVuZXIpKVxuICAgICAgcmV0dXJuIDE7XG4gICAgZWxzZSBpZiAoZXZsaXN0ZW5lcilcbiAgICAgIHJldHVybiBldmxpc3RlbmVyLmxlbmd0aDtcbiAgfVxuICByZXR1cm4gMDtcbn07XG5cbkV2ZW50RW1pdHRlci5saXN0ZW5lckNvdW50ID0gZnVuY3Rpb24oZW1pdHRlciwgdHlwZSkge1xuICByZXR1cm4gZW1pdHRlci5saXN0ZW5lckNvdW50KHR5cGUpO1xufTtcblxuZnVuY3Rpb24gaXNGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdmdW5jdGlvbic7XG59XG5cbmZ1bmN0aW9uIGlzTnVtYmVyKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ251bWJlcic7XG59XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ29iamVjdCcgJiYgYXJnICE9PSBudWxsO1xufVxuXG5mdW5jdGlvbiBpc1VuZGVmaW5lZChhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gdm9pZCAwO1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZXZlbnRzL2V2ZW50cy5qc1xuLy8gbW9kdWxlIGlkID0gMjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIvKiBlc2xpbnQgcmVhY3QvcHJvcC10eXBlczogMCAqL1xuLyogZXNsaW50IHJlYWN0L3JlcXVpcmUtZGVmYXVsdC1wcm9wczogMCAqL1xuLyogZXNsaW50IG5vLWxvbmVseS1pZjogMCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBDb25zdCBmcm9tICcuL2NvbnN0JztcbmltcG9ydCB7IEJvb3RzdHJhcENvbnRleHQgfSBmcm9tICcuL2Jvb3RzdHJhcCc7XG5pbXBvcnQgUGFnaW5hdGlvbiBmcm9tICcuL3BhZ2luYXRpb24nO1xuaW1wb3J0IHsgZ2V0QnlDdXJyUGFnZSwgYWxpZ25QYWdlIH0gZnJvbSAnLi9wYWdlJztcbmltcG9ydCBjcmVhdGVCYXNlQ29udGV4dCBmcm9tICcuL3N0YXRlLWNvbnRleHQnO1xuXG5jb25zdCB7IFByb3ZpZGVyIH0gPSBjcmVhdGVCYXNlQ29udGV4dCgpO1xuXG5jb25zdCBQYWdpbmF0aW9uRGF0YUNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XG5cbmNsYXNzIFBhZ2luYXRpb25EYXRhUHJvdmlkZXIgZXh0ZW5kcyBQcm92aWRlciB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgZGF0YTogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gICAgcmVtb3RlRW1pdHRlcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIGlzUmVtb3RlUGFnaW5hdGlvbjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICB9XG5cbiAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICBzdXBlci5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcyk7XG4gICAgY29uc3QgeyBjdXJyU2l6ZVBlclBhZ2UgfSA9IHRoaXM7XG4gICAgY29uc3QgeyBjdXN0b20sIG9uUGFnZUNoYW5nZSB9ID0gbmV4dFByb3BzLnBhZ2luYXRpb24ub3B0aW9ucztcblxuICAgIGNvbnN0IHBhZ2VTdGFydEluZGV4ID0gdHlwZW9mIG5leHRQcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnMucGFnZVN0YXJ0SW5kZXggIT09ICd1bmRlZmluZWQnID9cbiAgICAgIG5leHRQcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnMucGFnZVN0YXJ0SW5kZXggOiBDb25zdC5QQUdFX1NUQVJUX0lOREVYO1xuXG4gICAgLy8gdXNlciBzaG91bGQgYWxpZ24gdGhlIHBhZ2Ugd2hlbiB0aGUgcGFnZSBpcyBub3QgZml0IHRvIHRoZSBkYXRhIHNpemUgd2hlbiByZW1vdGUgZW5hYmxlXG4gICAgaWYgKCF0aGlzLmlzUmVtb3RlUGFnaW5hdGlvbigpICYmICFjdXN0b20pIHtcbiAgICAgIGNvbnN0IG5ld1BhZ2UgPSBhbGlnblBhZ2UoXG4gICAgICAgIG5leHRQcm9wcy5kYXRhLmxlbmd0aCxcbiAgICAgICAgdGhpcy5wcm9wcy5kYXRhLmxlbmd0aCxcbiAgICAgICAgdGhpcy5jdXJyUGFnZSxcbiAgICAgICAgY3VyclNpemVQZXJQYWdlLFxuICAgICAgICBwYWdlU3RhcnRJbmRleFxuICAgICAgKTtcblxuICAgICAgaWYgKHRoaXMuY3VyclBhZ2UgIT09IG5ld1BhZ2UpIHtcbiAgICAgICAgaWYgKG9uUGFnZUNoYW5nZSkge1xuICAgICAgICAgIG9uUGFnZUNoYW5nZShuZXdQYWdlLCBjdXJyU2l6ZVBlclBhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY3VyclBhZ2UgPSBuZXdQYWdlO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAobmV4dFByb3BzLm9uRGF0YVNpemVDaGFuZ2UgJiYgbmV4dFByb3BzLmRhdGEubGVuZ3RoICE9PSB0aGlzLnByb3BzLmRhdGEubGVuZ3RoKSB7XG4gICAgICBuZXh0UHJvcHMub25EYXRhU2l6ZUNoYW5nZSh7IGRhdGFTaXplOiBuZXh0UHJvcHMuZGF0YS5sZW5ndGggfSk7XG4gICAgfVxuICB9XG5cbiAgaXNSZW1vdGVQYWdpbmF0aW9uID0gKCkgPT4gdGhpcy5wcm9wcy5pc1JlbW90ZVBhZ2luYXRpb24oKTtcblxuICByZW5kZXJEZWZhdWx0UGFnaW5hdGlvbiA9ICgpID0+IHtcbiAgICBpZiAoIXRoaXMucHJvcHMucGFnaW5hdGlvbi5vcHRpb25zLmN1c3RvbSkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBib290c3RyYXA0LFxuICAgICAgICBwYWdlOiBjdXJyUGFnZSxcbiAgICAgICAgc2l6ZVBlclBhZ2U6IGN1cnJTaXplUGVyUGFnZSxcbiAgICAgICAgZGF0YVNpemUsXG4gICAgICAgIC4uLnJlc3RcbiAgICAgIH0gPSB0aGlzLmdldFBhZ2luYXRpb25Qcm9wcygpO1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPEJvb3RzdHJhcENvbnRleHQuUHJvdmlkZXIgdmFsdWU9eyB7IGJvb3RzdHJhcDQgfSB9PlxuICAgICAgICAgIDxQYWdpbmF0aW9uXG4gICAgICAgICAgICB7IC4uLnJlc3QgfVxuICAgICAgICAgICAga2V5PVwicGFnaW5hdGlvblwiXG4gICAgICAgICAgICBkYXRhU2l6ZT17IGRhdGFTaXplIHx8IHRoaXMucHJvcHMuZGF0YS5sZW5ndGggfVxuICAgICAgICAgICAgY3VyclBhZ2U9eyBjdXJyUGFnZSB9XG4gICAgICAgICAgICBjdXJyU2l6ZVBlclBhZ2U9eyBjdXJyU2l6ZVBlclBhZ2UgfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvQm9vdHN0cmFwQ29udGV4dC5Qcm92aWRlcj5cbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGxldCB7IGRhdGEgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBwYWdpbmF0aW9uOiB7IG9wdGlvbnMgfSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IGN1cnJQYWdlLCBjdXJyU2l6ZVBlclBhZ2UgfSA9IHRoaXM7XG4gICAgY29uc3QgcGFnZVN0YXJ0SW5kZXggPSB0eXBlb2Ygb3B0aW9ucy5wYWdlU3RhcnRJbmRleCA9PT0gJ3VuZGVmaW5lZCcgP1xuICAgICAgQ29uc3QuUEFHRV9TVEFSVF9JTkRFWCA6IG9wdGlvbnMucGFnZVN0YXJ0SW5kZXg7XG5cbiAgICBkYXRhID0gdGhpcy5pc1JlbW90ZVBhZ2luYXRpb24oKSA/XG4gICAgICBkYXRhIDpcbiAgICAgIGdldEJ5Q3VyclBhZ2UoXG4gICAgICAgIGRhdGEsXG4gICAgICAgIGN1cnJQYWdlLFxuICAgICAgICBjdXJyU2l6ZVBlclBhZ2UsXG4gICAgICAgIHBhZ2VTdGFydEluZGV4XG4gICAgICApO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxQYWdpbmF0aW9uRGF0YUNvbnRleHQuUHJvdmlkZXIgdmFsdWU9eyB7IGRhdGEsIHNldFJlbW90ZUVtaXR0ZXI6IHRoaXMuc2V0UmVtb3RlRW1pdHRlciB9IH0+XG4gICAgICAgIHsgdGhpcy5wcm9wcy5jaGlsZHJlbiB9XG4gICAgICAgIHsgdGhpcy5yZW5kZXJEZWZhdWx0UGFnaW5hdGlvbigpIH1cbiAgICAgIDwvUGFnaW5hdGlvbkRhdGFDb250ZXh0LlByb3ZpZGVyPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4gKHtcbiAgUHJvdmlkZXI6IFBhZ2luYXRpb25EYXRhUHJvdmlkZXIsXG4gIENvbnN1bWVyOiBQYWdpbmF0aW9uRGF0YUNvbnRleHQuQ29uc3VtZXJcbn0pO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL2RhdGEtY29udGV4dC5qcyIsIi8qIGVzbGludCByZWFjdC9yZXF1aXJlLWRlZmF1bHQtcHJvcHM6IDAgKi9cbi8qIGVzbGludCBhcnJvdy1ib2R5LXN0eWxlOiAwICovXG5pbXBvcnQgY3MgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBwYWdlUmVzb2x2ZXIgZnJvbSAnLi9wYWdlLXJlc29sdmVyJztcbmltcG9ydCBwYWdpbmF0aW9uSGFuZGxlciBmcm9tICcuL3BhZ2luYXRpb24taGFuZGxlcic7XG5pbXBvcnQgeyBTaXplUGVyUGFnZURyb3Bkb3duV2l0aEFkYXB0ZXIgfSBmcm9tICcuL3NpemUtcGVyLXBhZ2UtZHJvcGRvd24tYWRhcHRlcic7XG5pbXBvcnQgeyBQYWdpbmF0aW9uTGlzdFdpdGhBZGFwdGVyIH0gZnJvbSAnLi9wYWdpbmF0aW9uLWxpc3QtYWRhcHRlcic7XG5pbXBvcnQgeyBQYWdpbmF0aW9uVG90YWxXaXRoQWRhcHRlciB9IGZyb20gJy4vcGFnaW5hdGlvbi10b3RhbC1hZGFwdGVyJztcbmltcG9ydCBDb25zdCBmcm9tICcuL2NvbnN0JztcblxuY2xhc3MgUGFnaW5hdGlvbiBleHRlbmRzIHBhZ2VSZXNvbHZlcihDb21wb25lbnQpIHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGN1cnJQYWdlLFxuICAgICAgcGFnZVN0YXJ0SW5kZXgsXG4gICAgICBzaG93VG90YWwsXG4gICAgICBkYXRhU2l6ZSxcbiAgICAgIHBhZ2VMaXN0UmVuZGVyZXIsXG4gICAgICBwYWdlQnV0dG9uUmVuZGVyZXIsXG4gICAgICBwYWdpbmF0aW9uVG90YWxSZW5kZXJlcixcbiAgICAgIGhpZGVQYWdlTGlzdE9ubHlPbmVQYWdlLFxuICAgICAgdG90YWxQYWdlcyxcbiAgICAgIGxhc3RQYWdlLFxuICAgICAgb25QYWdlQ2hhbmdlLFxuICAgICAgc2l6ZVBlclBhZ2VMaXN0LFxuICAgICAgY3VyclNpemVQZXJQYWdlLFxuICAgICAgaGlkZVNpemVQZXJQYWdlLFxuICAgICAgc2l6ZVBlclBhZ2VSZW5kZXJlcixcbiAgICAgIHNpemVQZXJQYWdlT3B0aW9uUmVuZGVyZXIsXG4gICAgICBvblNpemVQZXJQYWdlQ2hhbmdlLFxuICAgICAgLi4ucmVzdFxuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgY29uc3QgcGFnZXMgPSB0aGlzLmNhbGN1bGF0ZVBhZ2VTdGF0dXModGhpcy5jYWxjdWxhdGVQYWdlcyh0b3RhbFBhZ2VzLCBsYXN0UGFnZSksIGxhc3RQYWdlKTtcbiAgICBjb25zdCBwYWdlTGlzdENsYXNzID0gY3MoXG4gICAgICAncmVhY3QtYm9vdHN0cmFwLXRhYmxlLXBhZ2luYXRpb24tbGlzdCcsXG4gICAgICAnY29sLW1kLTYgY29sLXhzLTYgY29sLXNtLTYgY29sLWxnLTYnLCB7XG4gICAgICAgICdyZWFjdC1ib290c3RyYXAtdGFibGUtcGFnaW5hdGlvbi1saXN0LWhpZGRlbic6IChoaWRlUGFnZUxpc3RPbmx5T25lUGFnZSAmJiB0b3RhbFBhZ2VzID09PSAxKVxuICAgICAgfSk7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93IHJlYWN0LWJvb3RzdHJhcC10YWJsZS1wYWdpbmF0aW9uXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLW1kLTYgY29sLXhzLTYgY29sLXNtLTYgY29sLWxnLTZcIj5cbiAgICAgICAgICA8U2l6ZVBlclBhZ2VEcm9wZG93bldpdGhBZGFwdGVyXG4gICAgICAgICAgICBzaXplUGVyUGFnZUxpc3Q9eyBzaXplUGVyUGFnZUxpc3QgfVxuICAgICAgICAgICAgY3VyclNpemVQZXJQYWdlPXsgY3VyclNpemVQZXJQYWdlIH1cbiAgICAgICAgICAgIGhpZGVTaXplUGVyUGFnZT17IGhpZGVTaXplUGVyUGFnZSB9XG4gICAgICAgICAgICBzaXplUGVyUGFnZVJlbmRlcmVyPXsgc2l6ZVBlclBhZ2VSZW5kZXJlciB9XG4gICAgICAgICAgICBzaXplUGVyUGFnZU9wdGlvblJlbmRlcmVyPXsgc2l6ZVBlclBhZ2VPcHRpb25SZW5kZXJlciB9XG4gICAgICAgICAgICBvblNpemVQZXJQYWdlQ2hhbmdlPXsgb25TaXplUGVyUGFnZUNoYW5nZSB9XG4gICAgICAgICAgLz5cbiAgICAgICAgICB7XG4gICAgICAgICAgICBzaG93VG90YWwgP1xuICAgICAgICAgICAgICA8UGFnaW5hdGlvblRvdGFsV2l0aEFkYXB0ZXJcbiAgICAgICAgICAgICAgICBjdXJyUGFnZT17IGN1cnJQYWdlIH1cbiAgICAgICAgICAgICAgICBjdXJyU2l6ZVBlclBhZ2U9eyBjdXJyU2l6ZVBlclBhZ2UgfVxuICAgICAgICAgICAgICAgIHBhZ2VTdGFydEluZGV4PXsgcGFnZVN0YXJ0SW5kZXggfVxuICAgICAgICAgICAgICAgIGRhdGFTaXplPXsgZGF0YVNpemUgfVxuICAgICAgICAgICAgICAgIHBhZ2luYXRpb25Ub3RhbFJlbmRlcmVyPXsgcGFnaW5hdGlvblRvdGFsUmVuZGVyZXIgfVxuICAgICAgICAgICAgICAvPiA6IG51bGxcbiAgICAgICAgICB9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7XG4gICAgICAgICAgcGFnZUxpc3RSZW5kZXJlciA/IHBhZ2VMaXN0UmVuZGVyZXIoe1xuICAgICAgICAgICAgcGFnZXMsXG4gICAgICAgICAgICBvblBhZ2VDaGFuZ2VcbiAgICAgICAgICB9KSA6IChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXsgcGFnZUxpc3RDbGFzcyB9PlxuICAgICAgICAgICAgICA8UGFnaW5hdGlvbkxpc3RXaXRoQWRhcHRlclxuICAgICAgICAgICAgICAgIHsgLi4ucmVzdCB9XG4gICAgICAgICAgICAgICAgY3VyclBhZ2U9eyBjdXJyUGFnZSB9XG4gICAgICAgICAgICAgICAgY3VyclNpemVQZXJQYWdlPXsgY3VyclNpemVQZXJQYWdlIH1cbiAgICAgICAgICAgICAgICBwYWdlU3RhcnRJbmRleD17IHBhZ2VTdGFydEluZGV4IH1cbiAgICAgICAgICAgICAgICBsYXN0UGFnZT17IGxhc3RQYWdlIH1cbiAgICAgICAgICAgICAgICB0b3RhbFBhZ2VzPXsgdG90YWxQYWdlcyB9XG4gICAgICAgICAgICAgICAgcGFnZUJ1dHRvblJlbmRlcmVyPXsgcGFnZUJ1dHRvblJlbmRlcmVyIH1cbiAgICAgICAgICAgICAgICBvblBhZ2VDaGFuZ2U9eyBvblBhZ2VDaGFuZ2UgfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cblBhZ2luYXRpb24ucHJvcFR5cGVzID0ge1xuICBkYXRhU2l6ZTogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBzaXplUGVyUGFnZUxpc3Q6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICBjdXJyUGFnZTogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBjdXJyU2l6ZVBlclBhZ2U6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgb25QYWdlQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBvblNpemVQZXJQYWdlQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBwYWdlU3RhcnRJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgcGFnaW5hdGlvblNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNob3dUb3RhbDogUHJvcFR5cGVzLmJvb2wsXG4gIHBhZ2VMaXN0UmVuZGVyZXI6IFByb3BUeXBlcy5mdW5jLFxuICBwYWdlQnV0dG9uUmVuZGVyZXI6IFByb3BUeXBlcy5mdW5jLFxuICBzaXplUGVyUGFnZVJlbmRlcmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgcGFnaW5hdGlvblRvdGFsUmVuZGVyZXI6IFByb3BUeXBlcy5mdW5jLFxuICBzaXplUGVyUGFnZU9wdGlvblJlbmRlcmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgZmlyc3RQYWdlVGV4dDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgcHJlUGFnZVRleHQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5ub2RlXSksXG4gIG5leHRQYWdlVGV4dDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgbGFzdFBhZ2VUZXh0OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubm9kZV0pLFxuICBuZXh0UGFnZVRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBwcmVQYWdlVGl0bGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGZpcnN0UGFnZVRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBsYXN0UGFnZVRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB3aXRoRmlyc3RBbmRMYXN0OiBQcm9wVHlwZXMuYm9vbCxcbiAgYWx3YXlzU2hvd0FsbEJ0bnM6IFByb3BUeXBlcy5ib29sLFxuICBoaWRlU2l6ZVBlclBhZ2U6IFByb3BUeXBlcy5ib29sLFxuICBoaWRlUGFnZUxpc3RPbmx5T25lUGFnZTogUHJvcFR5cGVzLmJvb2xcbn07XG5cblBhZ2luYXRpb24uZGVmYXVsdFByb3BzID0ge1xuICBwYWdlU3RhcnRJbmRleDogQ29uc3QuUEFHRV9TVEFSVF9JTkRFWCxcbiAgcGFnaW5hdGlvblNpemU6IENvbnN0LlBBR0lOQVRJT05fU0laRSxcbiAgd2l0aEZpcnN0QW5kTGFzdDogQ29uc3QuV2l0aF9GSVJTVF9BTkRfTEFTVCxcbiAgYWx3YXlzU2hvd0FsbEJ0bnM6IENvbnN0LlNIT1dfQUxMX1BBR0VfQlROUyxcbiAgc2hvd1RvdGFsOiBDb25zdC5TSE9XX1RPVEFMLFxuICBwYWdlTGlzdFJlbmRlcmVyOiBudWxsLFxuICBwYWdlQnV0dG9uUmVuZGVyZXI6IG51bGwsXG4gIHNpemVQZXJQYWdlUmVuZGVyZXI6IG51bGwsXG4gIHBhZ2luYXRpb25Ub3RhbFJlbmRlcmVyOiBDb25zdC5QQUdJTkFUSU9OX1RPVEFMLFxuICBzaXplUGVyUGFnZU9wdGlvblJlbmRlcmVyOiBudWxsLFxuICBmaXJzdFBhZ2VUZXh0OiBDb25zdC5GSVJTVF9QQUdFX1RFWFQsXG4gIHByZVBhZ2VUZXh0OiBDb25zdC5QUkVfUEFHRV9URVhULFxuICBuZXh0UGFnZVRleHQ6IENvbnN0Lk5FWFRfUEFHRV9URVhULFxuICBsYXN0UGFnZVRleHQ6IENvbnN0LkxBU1RfUEFHRV9URVhULFxuICBzaXplUGVyUGFnZUxpc3Q6IENvbnN0LlNJWkVfUEVSX1BBR0VfTElTVCxcbiAgbmV4dFBhZ2VUaXRsZTogQ29uc3QuTkVYVF9QQUdFX1RJVExFLFxuICBwcmVQYWdlVGl0bGU6IENvbnN0LlBSRV9QQUdFX1RJVExFLFxuICBmaXJzdFBhZ2VUaXRsZTogQ29uc3QuRklSU1RfUEFHRV9USVRMRSxcbiAgbGFzdFBhZ2VUaXRsZTogQ29uc3QuTEFTVF9QQUdFX1RJVExFLFxuICBoaWRlU2l6ZVBlclBhZ2U6IENvbnN0LkhJREVfU0laRV9QRVJfUEFHRSxcbiAgaGlkZVBhZ2VMaXN0T25seU9uZVBhZ2U6IENvbnN0LkhJREVfUEFHRV9MSVNUX09OTFlfT05FX1BBR0Vcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHBhZ2luYXRpb25IYW5kbGVyKFBhZ2luYXRpb24pO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24uanMiLCIvKiBlc2xpbnQganN4LWExMXkvaHJlZi1uby1oYXNoOiAwICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY29uc3QgU2l6ZVBlclBhZ2VPcHRpb24gPSAoe1xuICB0ZXh0LFxuICBwYWdlLFxuICBvblNpemVQZXJQYWdlQ2hhbmdlLFxuICBib290c3RyYXA0XG59KSA9PiAoYm9vdHN0cmFwNCA/IChcbiAgPGFcbiAgICBocmVmPVwiI1wiXG4gICAgdGFiSW5kZXg9XCItMVwiXG4gICAgcm9sZT1cIm1lbnVpdGVtXCJcbiAgICBjbGFzc05hbWU9XCJkcm9wZG93bi1pdGVtXCJcbiAgICBkYXRhLXBhZ2U9eyBwYWdlIH1cbiAgICBvbk1vdXNlRG93bj17IChlKSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBvblNpemVQZXJQYWdlQ2hhbmdlKHBhZ2UpO1xuICAgIH0gfVxuICA+XG4gICAgeyB0ZXh0IH1cbiAgPC9hPlxuKSA6IChcbiAgPGxpXG4gICAga2V5PXsgdGV4dCB9XG4gICAgcm9sZT1cInByZXNlbnRhdGlvblwiXG4gICAgY2xhc3NOYW1lPVwiZHJvcGRvd24taXRlbVwiXG4gID5cbiAgICA8YVxuICAgICAgaHJlZj1cIiNcIlxuICAgICAgdGFiSW5kZXg9XCItMVwiXG4gICAgICByb2xlPVwibWVudWl0ZW1cIlxuICAgICAgZGF0YS1wYWdlPXsgcGFnZSB9XG4gICAgICBvbk1vdXNlRG93bj17IChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgb25TaXplUGVyUGFnZUNoYW5nZShwYWdlKTtcbiAgICAgIH0gfVxuICAgID5cbiAgICAgIHsgdGV4dCB9XG4gICAgPC9hPlxuICA8L2xpPlxuKSk7XG5cblNpemVQZXJQYWdlT3B0aW9uLnByb3BUeXBlcyA9IHtcbiAgdGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBwYWdlOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIG9uU2l6ZVBlclBhZ2VDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGJvb3RzdHJhcDQ6IFByb3BUeXBlcy5ib29sXG59O1xuXG5TaXplUGVyUGFnZU9wdGlvbi5kZWZhdWx0UHJvcHMgPSB7XG4gIGJvb3RzdHJhcDQ6IGZhbHNlXG59O1xuXG5leHBvcnQgZGVmYXVsdCBTaXplUGVyUGFnZU9wdGlvbjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9zaXplLXBlci1wYWdlLW9wdGlvbi5qcyIsIi8qIGVzbGludCByZWFjdC9yZXF1aXJlLWRlZmF1bHQtcHJvcHM6IDAgKi9cbi8qIGVzbGludCBqc3gtYTExeS9ocmVmLW5vLWhhc2g6IDAgKi9cbmltcG9ydCBjcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5jbGFzcyBQYWdlQnV0dG9uIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5oYW5kbGVDbGljayA9IHRoaXMuaGFuZGxlQ2xpY2suYmluZCh0aGlzKTtcbiAgfVxuXG4gIGhhbmRsZUNsaWNrKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgdGhpcy5wcm9wcy5vblBhZ2VDaGFuZ2UodGhpcy5wcm9wcy5wYWdlKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBwYWdlLFxuICAgICAgdGl0bGUsXG4gICAgICBhY3RpdmUsXG4gICAgICBkaXNhYmxlZCxcbiAgICAgIGNsYXNzTmFtZVxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IGNsYXNzZXMgPSBjcyh7XG4gICAgICBhY3RpdmUsXG4gICAgICBkaXNhYmxlZCxcbiAgICAgICdwYWdlLWl0ZW0nOiB0cnVlXG4gICAgfSwgY2xhc3NOYW1lKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8bGkgY2xhc3NOYW1lPXsgY2xhc3NlcyB9IHRpdGxlPXsgdGl0bGUgfT5cbiAgICAgICAgPGEgaHJlZj1cIiNcIiBvbkNsaWNrPXsgdGhpcy5oYW5kbGVDbGljayB9IGNsYXNzTmFtZT1cInBhZ2UtbGlua1wiPnsgcGFnZSB9PC9hPlxuICAgICAgPC9saT5cbiAgICApO1xuICB9XG59XG5cblBhZ2VCdXR0b24ucHJvcFR5cGVzID0ge1xuICBvblBhZ2VDaGFuZ2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHBhZ2U6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgIFByb3BUeXBlcy5ub2RlLFxuICAgIFByb3BUeXBlcy5udW1iZXIsXG4gICAgUHJvcFR5cGVzLnN0cmluZ1xuICBdKS5pc1JlcXVpcmVkLFxuICBhY3RpdmU6IFByb3BUeXBlcy5ib29sLmlzUmVxdWlyZWQsXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5leHBvcnQgZGVmYXVsdCBQYWdlQnV0dG9uO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2UtYnV0dG9uLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQYWdpbmF0aW9uTGlzdCBmcm9tICcuL3BhZ2luYXRpb24tbGlzdCc7XG5pbXBvcnQgc3RhbmRhbG9uZUFkYXB0ZXIgZnJvbSAnLi9zdGFuZGFsb25lLWFkYXB0ZXInO1xuaW1wb3J0IFBhZ2luYXRpb25IYW5kbGVyIGZyb20gJy4vcGFnaW5hdGlvbi1oYW5kbGVyJztcbmltcG9ydCBwYWdpbmF0aW9uTGlzdEFkYXB0ZXIgZnJvbSAnLi9wYWdpbmF0aW9uLWxpc3QtYWRhcHRlcic7XG5cbmNvbnN0IFBhZ2luYXRpb25MaXN0U3RhbmRhbG9uZSA9IHByb3BzID0+IChcbiAgPFBhZ2luYXRpb25MaXN0IHsgLi4ucHJvcHMgfSAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHRcbnN0YW5kYWxvbmVBZGFwdGVyKFBhZ2luYXRpb25IYW5kbGVyKHBhZ2luYXRpb25MaXN0QWRhcHRlcihQYWdpbmF0aW9uTGlzdFN0YW5kYWxvbmUpKSk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnaW5hdGlvbi1saXN0LXN0YW5kYWxvbmUuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFNpemVQZXJQYWdlRHJvcGRvd24gZnJvbSAnLi9zaXplLXBlci1wYWdlLWRyb3Bkb3duJztcbmltcG9ydCBzdGFuZGFsb25lQWRhcHRlciBmcm9tICcuL3N0YW5kYWxvbmUtYWRhcHRlcic7XG5pbXBvcnQgcGFnaW5hdGlvbkhhbmRsZXIgZnJvbSAnLi9wYWdpbmF0aW9uLWhhbmRsZXInO1xuaW1wb3J0IHNpemVQZXJQYWdlRHJvcGRvd25BZGFwdGVyIGZyb20gJy4vc2l6ZS1wZXItcGFnZS1kcm9wZG93bi1hZGFwdGVyJztcblxuY29uc3QgU2l6ZVBlclBhZ2VEcm9wZG93blN0YW5kYWxvbmUgPSBwcm9wcyA9PiAoXG4gIDxTaXplUGVyUGFnZURyb3Bkb3duIHsgLi4ucHJvcHMgfSAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHRcbnN0YW5kYWxvbmVBZGFwdGVyKHBhZ2luYXRpb25IYW5kbGVyKHNpemVQZXJQYWdlRHJvcGRvd25BZGFwdGVyKFNpemVQZXJQYWdlRHJvcGRvd25TdGFuZGFsb25lKSkpO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3NpemUtcGVyLXBhZ2UtZHJvcGRvd24tc3RhbmRhbG9uZS5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUGFnaW5hdGlvblRvdGFsIGZyb20gJy4vcGFnaW5hdGlvbi10b3RhbCc7XG5pbXBvcnQgc3RhbmRhbG9uZUFkYXB0ZXIgZnJvbSAnLi9zdGFuZGFsb25lLWFkYXB0ZXInO1xuaW1wb3J0IHBhZ2luYXRpb25Ub3RhbEFkYXB0ZXIgZnJvbSAnLi9wYWdpbmF0aW9uLXRvdGFsLWFkYXB0ZXInO1xuXG5jb25zdCBQYWdpbmF0aW9uVG90YWxTdGFuZGFsb25lID0gcHJvcHMgPT4gKFxuICA8UGFnaW5hdGlvblRvdGFsIHsgLi4ucHJvcHMgfSAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHRcbnN0YW5kYWxvbmVBZGFwdGVyKHBhZ2luYXRpb25Ub3RhbEFkYXB0ZXIoUGFnaW5hdGlvblRvdGFsU3RhbmRhbG9uZSkpO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24tdG90YWwtc3RhbmRhbG9uZS5qcyJdLCJzb3VyY2VSb290IjoiIn0=
//# sourceMappingURL=react-bootstrap-table2-paginator.js.map